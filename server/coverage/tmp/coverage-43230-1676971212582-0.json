{"result":[{"scriptId":"12","url":"node:internal/per_context/primordials","functions":[{"functionName":"SafeIterator","ranges":[{"startOffset":8748,"endOffset":8819,"count":24}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":8824,"endOffset":8873,"count":346}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8878,"endOffset":8923,"count":22}],"isBlockCoverage":false},{"functionName":"desc.value","ranges":[{"startOffset":10486,"endOffset":10553,"count":2}],"isBlockCoverage":true},{"functionName":"SafeMap","ranges":[{"startOffset":11211,"endOffset":11239,"count":115}],"isBlockCoverage":false},{"functionName":"SafeWeakMap","ranges":[{"startOffset":11382,"endOffset":11410,"count":6}],"isBlockCoverage":false},{"functionName":"SafeSet","ranges":[{"startOffset":11538,"endOffset":11566,"count":107}],"isBlockCoverage":false},{"functionName":"SafeFinalizationRegistry","ranges":[{"startOffset":11988,"endOffset":12044,"count":1}],"isBlockCoverage":false},{"functionName":"SafePromise","ranges":[{"startOffset":12381,"endOffset":12423,"count":120}],"isBlockCoverage":true},{"functionName":"primordials.SafePromisePrototypeFinally","ranges":[{"startOffset":12926,"endOffset":13199,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13071,"endOffset":13195,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":13101,"endOffset":13150,"count":20}],"isBlockCoverage":true}]},{"scriptId":"15","url":"node:internal/bootstrap/loaders","functions":[{"functionName":"internalBinding","ranges":[{"startOffset":5259,"endOffset":5521,"count":169}],"isBlockCoverage":false},{"functionName":"getOwn","ranges":[{"startOffset":5662,"endOffset":5816,"count":3934},{"startOffset":5798,"endOffset":5813,"count":0}],"isBlockCoverage":true},{"functionName":"canBeRequiredByUsers","ranges":[{"startOffset":7506,"endOffset":7623,"count":346},{"startOffset":7591,"endOffset":7618,"count":98}],"isBlockCoverage":true},{"functionName":"canBeRequiredWithoutScheme","ranges":[{"startOffset":7774,"endOffset":7851,"count":263}],"isBlockCoverage":true},{"functionName":"getSchemeOnlyModuleNames","ranges":[{"startOffset":7862,"endOffset":7937,"count":1}],"isBlockCoverage":true},{"functionName":"compileForPublicLoader","ranges":[{"startOffset":8009,"endOffset":8703,"count":98},{"startOffset":8072,"endOffset":8264,"count":0},{"startOffset":8328,"endOffset":8625,"count":9},{"startOffset":8587,"endOffset":8591,"count":0}],"isBlockCoverage":true},{"functionName":"getESMFacade","ranges":[{"startOffset":8707,"endOffset":9469,"count":98},{"startOffset":8745,"endOffset":8764,"count":89},{"startOffset":8764,"endOffset":9468,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9206,"endOffset":9309,"count":9}],"isBlockCoverage":true},{"functionName":"syncExports","ranges":[{"startOffset":9765,"endOffset":10109,"count":107},{"startOffset":9884,"endOffset":10099,"count":3934},{"startOffset":9961,"endOffset":9970,"count":0}],"isBlockCoverage":true},{"functionName":"compileForInternalLoader","ranges":[{"startOffset":10113,"endOffset":10935,"count":793}],"isBlockCoverage":false},{"functionName":"requireBuiltin","ranges":[{"startOffset":11129,"endOffset":11496,"count":700}],"isBlockCoverage":false}]},{"scriptId":"16","url":"node:internal/bootstrap/node","functions":[{"functionName":"get","ranges":[{"startOffset":3653,"endOffset":3715,"count":3}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":3721,"endOffset":3791,"count":2}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":4898,"endOffset":5165,"count":6},{"startOffset":5026,"endOffset":5164,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5616,"endOffset":5647,"count":3}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":13682,"endOffset":13718,"count":168}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":14620,"endOffset":14655,"count":4}],"isBlockCoverage":true}]},{"scriptId":"17","url":"node:internal/errors","functions":[{"functionName":"isErrorStackTraceLimitWritable","ranges":[{"startOffset":5633,"endOffset":6120,"count":96},{"startOffset":5843,"endOffset":5866,"count":0},{"startOffset":5967,"endOffset":6010,"count":0},{"startOffset":6089,"endOffset":6117,"count":0}],"isBlockCoverage":true},{"functionName":"NodeError","ranges":[{"startOffset":10320,"endOffset":11322,"count":4}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":11067,"endOffset":11145,"count":0}],"isBlockCoverage":false},{"functionName":"hideStackFrames","ranges":[{"startOffset":11487,"endOffset":11752,"count":4}],"isBlockCoverage":false},{"functionName":"getMessage","ranges":[{"startOffset":12374,"endOffset":13245,"count":4},{"startOffset":12786,"endOffset":13244,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUv","ranges":[{"startOffset":13263,"endOffset":13343,"count":28}],"isBlockCoverage":true},{"functionName":"uvErrmapGet","ranges":[{"startOffset":13400,"endOffset":13552,"count":28}],"isBlockCoverage":true},{"functionName":"captureLargerStackTrace","ranges":[{"startOffset":13605,"endOffset":14007,"count":32}],"isBlockCoverage":true},{"functionName":"uvException","ranges":[{"startOffset":14337,"endOffset":15578,"count":28},{"startOffset":14420,"endOffset":14438,"count":0},{"startOffset":14632,"endOffset":14701,"count":0},{"startOffset":15316,"endOffset":15438,"count":84},{"startOffset":15364,"endOffset":15382,"count":56},{"startOffset":15384,"endOffset":15407,"count":28},{"startOffset":15407,"endOffset":15438,"count":56},{"startOffset":15510,"endOffset":15536,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":48064,"endOffset":48217,"count":4}],"isBlockCoverage":true}]},{"scriptId":"19","url":"node:internal/async_hooks","functions":[{"functionName":"newAsyncId","ranges":[{"startOffset":14454,"endOffset":14524,"count":2}],"isBlockCoverage":true},{"functionName":"getDefaultTriggerAsyncId","ranges":[{"startOffset":14899,"endOffset":15189,"count":2},{"startOffset":15155,"endOffset":15188,"count":0}],"isBlockCoverage":true},{"functionName":"hasHooks","ranges":[{"startOffset":16004,"endOffset":16067,"count":10}],"isBlockCoverage":true},{"functionName":"enabledHooksExist","ranges":[{"startOffset":16069,"endOffset":16128,"count":2}],"isBlockCoverage":true},{"functionName":"initHooksExist","ranges":[{"startOffset":16130,"endOffset":16185,"count":2}],"isBlockCoverage":true},{"functionName":"destroyHooksExist","ranges":[{"startOffset":16246,"endOffset":16307,"count":2}],"isBlockCoverage":true},{"functionName":"emitBeforeScript","ranges":[{"startOffset":16798,"endOffset":16974,"count":2},{"startOffset":16946,"endOffset":16972,"count":0}],"isBlockCoverage":true},{"functionName":"emitAfterScript","ranges":[{"startOffset":16977,"endOffset":17097,"count":2},{"startOffset":17041,"endOffset":17066,"count":0}],"isBlockCoverage":true},{"functionName":"pushAsyncContext","ranges":[{"startOffset":17442,"endOffset":18012,"count":2},{"startOffset":17662,"endOffset":17712,"count":0}],"isBlockCoverage":true},{"functionName":"popAsyncContext","ranges":[{"startOffset":18077,"endOffset":18688,"count":2},{"startOffset":18193,"endOffset":18206,"count":0},{"startOffset":18285,"endOffset":18391,"count":0}],"isBlockCoverage":true}]},{"scriptId":"21","url":"node:internal/util","functions":[{"functionName":"deprecate","ranges":[{"startOffset":2756,"endOffset":3950,"count":16}],"isBlockCoverage":false},{"functionName":"deprecated","ranges":[{"startOffset":3080,"endOffset":3562,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeEncoding","ranges":[{"startOffset":4473,"endOffset":4604,"count":3550},{"startOffset":4525,"endOffset":4542,"count":193},{"startOffset":4543,"endOffset":4561,"count":0},{"startOffset":4577,"endOffset":4603,"count":0}],"isBlockCoverage":true},{"functionName":"promisify","ranges":[{"startOffset":9133,"endOffset":10992,"count":8}],"isBlockCoverage":false},{"functionName":"fn","ranges":[{"startOffset":9872,"endOffset":10391,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9918,"endOffset":10385,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9972,"endOffset":10335,"count":1},{"startOffset":10011,"endOffset":10052,"count":0},{"startOffset":10093,"endOffset":10113,"count":0},{"startOffset":10115,"endOffset":10280,"count":0}],"isBlockCoverage":true},{"functionName":"defineOperation","ranges":[{"startOffset":13666,"endOffset":13866,"count":1}],"isBlockCoverage":false},{"functionName":"filterOwnProperties","ranges":[{"startOffset":14639,"endOffset":14910,"count":56},{"startOffset":14763,"endOffset":14888,"count":280},{"startOffset":14842,"endOffset":14884,"count":106}],"isBlockCoverage":true},{"functionName":"setOwnProperty","ranges":[{"startOffset":15078,"endOffset":15268,"count":200}],"isBlockCoverage":true}]},{"scriptId":"22","url":"node:internal/validators","functions":[{"functionName":"isUint32","ranges":[{"startOffset":944,"endOffset":1006,"count":175}],"isBlockCoverage":true},{"functionName":"parseFileMode","ranges":[{"startOffset":1630,"endOffset":1941,"count":328},{"startOffset":1723,"endOffset":1891,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2187,"endOffset":2568,"count":336},{"startOffset":2307,"endOffset":2361,"count":0},{"startOffset":2401,"endOffset":2455,"count":0},{"startOffset":2498,"endOffset":2564,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2811,"endOffset":3274,"count":3780},{"startOffset":2983,"endOffset":3051,"count":0},{"startOffset":3085,"endOffset":3153,"count":0},{"startOffset":3190,"endOffset":3270,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3511,"endOffset":3943,"count":529},{"startOffset":3581,"endOffset":3645,"count":0},{"startOffset":3677,"endOffset":3741,"count":0},{"startOffset":3765,"endOffset":3768,"count":0},{"startOffset":3865,"endOffset":3941,"count":0}],"isBlockCoverage":true},{"functionName":"validateString","ranges":[{"startOffset":4096,"endOffset":4228,"count":7816}],"isBlockCoverage":false},{"functionName":"validateNumber","ranges":[{"startOffset":4429,"endOffset":4897,"count":201},{"startOffset":4527,"endOffset":4581,"count":0},{"startOffset":4602,"endOffset":4616,"count":0},{"startOffset":4634,"endOffset":4648,"count":0},{"startOffset":4689,"endOffset":4710,"count":0},{"startOffset":4713,"endOffset":4895,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5083,"endOffset":5416,"count":1},{"startOffset":5154,"endOffset":5414,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5227,"endOffset":5288,"count":0}],"isBlockCoverage":false},{"functionName":"validateBoolean","ranges":[{"startOffset":5572,"endOffset":5707,"count":174},{"startOffset":5650,"endOffset":5705,"count":0}],"isBlockCoverage":true},{"functionName":"getOwnPropertyValueOrDefault","ranges":[{"startOffset":5819,"endOffset":6000,"count":18},{"startOffset":5912,"endOffset":5959,"count":3},{"startOffset":5960,"endOffset":5978,"count":15},{"startOffset":5979,"endOffset":5997,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6265,"endOffset":6820,"count":6},{"startOffset":6570,"endOffset":6587,"count":5},{"startOffset":6613,"endOffset":6635,"count":5},{"startOffset":6675,"endOffset":6745,"count":0},{"startOffset":6748,"endOffset":6816,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7774,"endOffset":8052,"count":199},{"startOffset":7836,"endOffset":7899,"count":0},{"startOffset":7932,"endOffset":8050,"count":0}],"isBlockCoverage":true},{"functionName":"validateStringArray","ranges":[{"startOffset":8217,"endOffset":8386,"count":99},{"startOffset":8332,"endOffset":8384,"count":495}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9420,"endOffset":9650,"count":161},{"startOffset":9485,"endOffset":9648,"count":0}],"isBlockCoverage":true},{"functionName":"validateEncoding","ranges":[{"startOffset":9714,"endOffset":10048,"count":3357},{"startOffset":9882,"endOffset":9901,"count":0},{"startOffset":9903,"endOffset":10046,"count":0}],"isBlockCoverage":true},{"functionName":"validatePort","ranges":[{"startOffset":10310,"endOffset":10689,"count":3},{"startOffset":10405,"endOffset":10432,"count":0},{"startOffset":10469,"endOffset":10510,"count":0},{"startOffset":10605,"endOffset":10668,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10857,"endOffset":11074,"count":1},{"startOffset":10904,"endOffset":11000,"count":0},{"startOffset":11002,"endOffset":11072,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11274,"endOffset":11390,"count":146}],"isBlockCoverage":false}]},{"scriptId":"23","url":"node:internal/util/types","functions":[{"functionName":"isUint8Array","ranges":[{"startOffset":236,"endOffset":342,"count":509}],"isBlockCoverage":true},{"functionName":"isBigInt64Array","ranges":[{"startOffset":1232,"endOffset":1344,"count":19}],"isBlockCoverage":true}]},{"scriptId":"27","url":"node:internal/assert","functions":[{"functionName":"assert","ranges":[{"startOffset":157,"endOffset":307,"count":106},{"startOffset":205,"endOffset":305,"count":0}],"isBlockCoverage":true}]},{"scriptId":"28","url":"node:internal/util/debuglog","functions":[{"functionName":"initializeDebugEnv","ranges":[{"startOffset":519,"endOffset":991,"count":1},{"startOffset":610,"endOffset":947,"count":0}],"isBlockCoverage":true},{"functionName":"testEnabled","ranges":[{"startOffset":885,"endOffset":942,"count":0}],"isBlockCoverage":false},{"functionName":"testEnabled","ranges":[{"startOffset":973,"endOffset":984,"count":4}],"isBlockCoverage":true},{"functionName":"noop","ranges":[{"startOffset":1419,"endOffset":1427,"count":619}],"isBlockCoverage":true},{"functionName":"debuglogImpl","ranges":[{"startOffset":1430,"endOffset":1995,"count":4},{"startOffset":1505,"endOffset":1967,"count":3},{"startOffset":1524,"endOffset":1920,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":1613,"endOffset":1913,"count":0}],"isBlockCoverage":false},{"functionName":"debuglog","ranges":[{"startOffset":2215,"endOffset":3240,"count":11}],"isBlockCoverage":false},{"functionName":"init","ranges":[{"startOffset":2246,"endOffset":2342,"count":4}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":2357,"endOffset":2751,"count":4},{"startOffset":2604,"endOffset":2634,"count":1},{"startOffset":2641,"endOffset":2680,"count":2},{"startOffset":2687,"endOffset":2741,"count":1}],"isBlockCoverage":true},{"functionName":"test","ranges":[{"startOffset":2781,"endOffset":2850,"count":0}],"isBlockCoverage":false},{"functionName":"logger","ranges":[{"startOffset":2869,"endOffset":3064,"count":4},{"startOffset":2917,"endOffset":2947,"count":1},{"startOffset":2954,"endOffset":2993,"count":2},{"startOffset":3000,"endOffset":3054,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3135,"endOffset":3169,"count":0}],"isBlockCoverage":false}]},{"scriptId":"29","url":"node:events","functions":[{"functionName":"lazyEventEmitterAsyncResource","ranges":[{"startOffset":2848,"endOffset":6158,"count":3},{"startOffset":2938,"endOffset":6120,"count":1}],"isBlockCoverage":true},{"functionName":"EventEmitterReferencingAsyncResource","ranges":[{"startOffset":3392,"endOffset":3496,"count":0}],"isBlockCoverage":false},{"functionName":"get eventEmitter","ranges":[{"startOffset":3554,"endOffset":3743,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitterAsyncResource","ranges":[{"startOffset":4032,"endOffset":4556,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":4693,"endOffset":5063,"count":0}],"isBlockCoverage":false},{"functionName":"emitDestroy","ranges":[{"startOffset":5124,"endOffset":5312,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncId","ranges":[{"startOffset":5372,"endOffset":5563,"count":0}],"isBlockCoverage":false},{"functionName":"get triggerAsyncId","ranges":[{"startOffset":5623,"endOffset":5828,"count":0}],"isBlockCoverage":false},{"functionName":"get asyncResource","ranges":[{"startOffset":5918,"endOffset":6107,"count":0}],"isBlockCoverage":false},{"functionName":"EventEmitter","ranges":[{"startOffset":6292,"endOffset":6361,"count":26}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6744,"endOffset":6800,"count":3}],"isBlockCoverage":true},{"functionName":"checkListener","ranges":[{"startOffset":7708,"endOffset":7786,"count":35}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7894,"endOffset":7942,"count":4}],"isBlockCoverage":false},{"functionName":"EventEmitter.init","ranges":[{"startOffset":9836,"endOffset":10433,"count":26}],"isBlockCoverage":false},{"functionName":"setMaxListeners","ranges":[{"startOffset":11806,"endOffset":12005,"count":1},{"startOffset":11892,"endOffset":11962,"count":0}],"isBlockCoverage":true},{"functionName":"_getMaxListeners","ranges":[{"startOffset":12008,"endOffset":12157,"count":1},{"startOffset":12126,"endOffset":12156,"count":0}],"isBlockCoverage":true},{"functionName":"emit","ranges":[{"startOffset":13314,"endOffset":15616,"count":55}],"isBlockCoverage":false},{"functionName":"_addListener","ranges":[{"startOffset":15619,"endOffset":17512,"count":20}],"isBlockCoverage":false},{"functionName":"addListener","ranges":[{"startOffset":17690,"endOffset":17782,"count":20}],"isBlockCoverage":false},{"functionName":"removeListener","ranges":[{"startOffset":19609,"endOffset":20903,"count":15},{"startOffset":19758,"endOffset":19770,"count":0},{"startOffset":19843,"endOffset":19855,"count":1},{"startOffset":19855,"endOffset":19885,"count":14},{"startOffset":19885,"endOffset":19914,"count":0},{"startOffset":19916,"endOffset":20176,"count":14},{"startOffset":19967,"endOffset":20001,"count":0},{"startOffset":20176,"endOffset":20877,"count":0},{"startOffset":20877,"endOffset":20902,"count":14}],"isBlockCoverage":true},{"functionName":"listenerCount","ranges":[{"startOffset":24113,"endOffset":24403,"count":13},{"startOffset":24286,"endOffset":24309,"count":0},{"startOffset":24345,"endOffset":24384,"count":0}],"isBlockCoverage":true}]},{"scriptId":"30","url":"node:buffer","functions":[{"functionName":"createPool","ranges":[{"startOffset":4010,"endOffset":4169,"count":21}],"isBlockCoverage":false},{"functionName":"alignPool","ranges":[{"startOffset":4185,"endOffset":4307,"count":110}],"isBlockCoverage":false},{"functionName":"from","ranges":[{"startOffset":8617,"endOffset":9581,"count":14}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10393,"endOffset":10548,"count":201},{"startOffset":10479,"endOffset":10546,"count":0}],"isBlockCoverage":true},{"functionName":"alloc","ranges":[{"startOffset":10651,"endOffset":10896,"count":20},{"startOffset":10735,"endOffset":10748,"count":0},{"startOffset":10749,"endOffset":10760,"count":0},{"startOffset":10762,"endOffset":10863,"count":0}],"isBlockCoverage":true},{"functionName":"allocUnsafe","ranges":[{"startOffset":11075,"endOffset":11150,"count":161}],"isBlockCoverage":true},{"functionName":"allocUnsafeSlow","ranges":[{"startOffset":11391,"endOffset":11480,"count":20}],"isBlockCoverage":true},{"functionName":"allocate","ranges":[{"startOffset":11780,"endOffset":12112,"count":161},{"startOffset":11823,"endOffset":11857,"count":0},{"startOffset":11896,"endOffset":12075,"count":103},{"startOffset":11944,"endOffset":11957,"count":18},{"startOffset":12075,"endOffset":12111,"count":58}],"isBlockCoverage":true},{"functionName":"fromStringFast","ranges":[{"startOffset":12114,"endOffset":12660,"count":14}],"isBlockCoverage":false},{"functionName":"fromString","ranges":[{"startOffset":12662,"endOffset":13115,"count":14}],"isBlockCoverage":false},{"functionName":"isEncoding","ranges":[{"startOffset":14979,"endOffset":15130,"count":173}],"isBlockCoverage":true},{"functionName":"base64ByteLength","ranges":[{"startOffset":16346,"endOffset":16614,"count":7},{"startOffset":16468,"endOffset":16476,"count":5},{"startOffset":16552,"endOffset":16560,"count":2}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":16749,"endOffset":16813,"count":3}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":16826,"endOffset":16872,"count":180}],"isBlockCoverage":true},{"functionName":"byteLength","ranges":[{"startOffset":18686,"endOffset":18737,"count":7}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":18750,"endOffset":18816,"count":4}],"isBlockCoverage":true},{"functionName":"getEncodingOps","ranges":[{"startOffset":20132,"endOffset":21956,"count":193},{"startOffset":20219,"endOffset":20518,"count":186},{"startOffset":20282,"endOffset":20518,"count":0},{"startOffset":20523,"endOffset":20942,"count":0},{"startOffset":20947,"endOffset":21101,"count":0},{"startOffset":21106,"endOffset":21262,"count":0},{"startOffset":21267,"endOffset":21648,"count":7},{"startOffset":21341,"endOffset":21367,"count":0},{"startOffset":21427,"endOffset":21539,"count":0},{"startOffset":21549,"endOffset":21648,"count":0},{"startOffset":21653,"endOffset":21785,"count":0},{"startOffset":21790,"endOffset":21950,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":23357,"endOffset":23936,"count":180},{"startOffset":23429,"endOffset":23477,"count":0},{"startOffset":23529,"endOffset":23539,"count":0},{"startOffset":23569,"endOffset":23579,"count":0},{"startOffset":23628,"endOffset":23640,"count":0},{"startOffset":23656,"endOffset":23677,"count":0},{"startOffset":23703,"endOffset":23713,"count":0},{"startOffset":23749,"endOffset":23783,"count":0},{"startOffset":23854,"endOffset":23895,"count":0}],"isBlockCoverage":true}]},{"scriptId":"31","url":"node:internal/buffer","functions":[{"functionName":"FastBuffer","ranges":[{"startOffset":26363,"endOffset":26463,"count":229}],"isBlockCoverage":false},{"functionName":"markAsUntransferable","ranges":[{"startOffset":29762,"endOffset":30011,"count":21}],"isBlockCoverage":false},{"functionName":"createUnsafeBuffer","ranges":[{"startOffset":30289,"endOffset":30425,"count":99}],"isBlockCoverage":false},{"functionName":"reconnectZeroFillToggle","ranges":[{"startOffset":30680,"endOffset":30752,"count":1}],"isBlockCoverage":true}]},{"scriptId":"33","url":"node:internal/encoding","functions":[{"functionName":"getEncodingFromLabel","ranges":[{"startOffset":8806,"endOffset":8985,"count":1},{"startOffset":8917,"endOffset":8984,"count":0}],"isBlockCoverage":true},{"functionName":"TextDecoder","ranges":[{"startOffset":10492,"endOffset":11429,"count":1},{"startOffset":10802,"endOffset":10849,"count":0},{"startOffset":10933,"endOffset":10956,"count":0},{"startOffset":10997,"endOffset":11025,"count":0},{"startOffset":11380,"endOffset":11423,"count":0}],"isBlockCoverage":true}]},{"scriptId":"37","url":"node:internal/process/per_thread","functions":[{"functionName":"refreshHrtimeBuffer","ranges":[{"startOffset":1408,"endOffset":1876,"count":1}],"isBlockCoverage":false},{"functionName":"exit","ranges":[{"startOffset":4815,"endOffset":5826,"count":1}],"isBlockCoverage":true},{"functionName":"toggleTraceCategoryState","ranges":[{"startOffset":11879,"endOffset":12209,"count":1},{"startOffset":11959,"endOffset":12134,"count":0},{"startOffset":12166,"endOffset":12207,"count":0}],"isBlockCoverage":true}]},{"scriptId":"39","url":"node:internal/process/task_queues","functions":[{"functionName":"setHasTickScheduled","ranges":[{"startOffset":1056,"endOffset":1142,"count":4},{"startOffset":1132,"endOffset":1135,"count":2},{"startOffset":1136,"endOffset":1139,"count":2}],"isBlockCoverage":true},{"functionName":"processTicksAndRejections","ranges":[{"startOffset":1442,"endOffset":2421,"count":2},{"startOffset":1745,"endOffset":1778,"count":0},{"startOffset":1911,"endOffset":1953,"count":0},{"startOffset":1966,"endOffset":2017,"count":0},{"startOffset":2030,"endOffset":2090,"count":0},{"startOffset":2103,"endOffset":2130,"count":0},{"startOffset":2214,"endOffset":2235,"count":0}],"isBlockCoverage":true},{"functionName":"nextTick","ranges":[{"startOffset":2565,"endOffset":3438,"count":2},{"startOffset":2666,"endOffset":2673,"count":0},{"startOffset":2721,"endOffset":2735,"count":0},{"startOffset":2782,"endOffset":2833,"count":0},{"startOffset":2838,"endOffset":2903,"count":0},{"startOffset":2908,"endOffset":3051,"count":0},{"startOffset":3350,"endOffset":3410,"count":0}],"isBlockCoverage":true}]},{"scriptId":"40","url":"node:internal/process/promises","functions":[{"functionName":"setHasRejectionToWarn","ranges":[{"startOffset":2114,"endOffset":2204,"count":2},{"startOffset":2194,"endOffset":2197,"count":0}],"isBlockCoverage":true},{"functionName":"processPromiseRejections","ranges":[{"startOffset":6628,"endOffset":9787,"count":2},{"startOffset":6786,"endOffset":6965,"count":0},{"startOffset":7030,"endOffset":9691,"count":0}],"isBlockCoverage":true}]},{"scriptId":"41","url":"node:internal/fixed_queue","functions":[{"functionName":"isEmpty","ranges":[{"startOffset":3077,"endOffset":3129,"count":8}],"isBlockCoverage":true},{"functionName":"isFull","ranges":[{"startOffset":3133,"endOffset":3200,"count":2}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3204,"endOffset":3291,"count":2}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3295,"endOffset":3510,"count":4},{"startOffset":3388,"endOffset":3509,"count":2}],"isBlockCoverage":true},{"functionName":"isEmpty","ranges":[{"startOffset":3630,"endOffset":3677,"count":4}],"isBlockCoverage":true},{"functionName":"push","ranges":[{"startOffset":3681,"endOffset":3945,"count":2},{"startOffset":3722,"endOffset":3915,"count":0}],"isBlockCoverage":true},{"functionName":"shift","ranges":[{"startOffset":3949,"endOffset":4204,"count":4},{"startOffset":4064,"endOffset":4183,"count":0}],"isBlockCoverage":true}]},{"scriptId":"47","url":"node:internal/event_target","functions":[{"functionName":"EventEmitterMixin","ranges":[{"startOffset":27448,"endOffset":28138,"count":1},{"startOffset":27879,"endOffset":28041,"count":18}],"isBlockCoverage":true},{"functionName":"MixedEventEmitter","ranges":[{"startOffset":27517,"endOffset":27658,"count":20}],"isBlockCoverage":true}]},{"scriptId":"48","url":"node:util","functions":[{"functionName":"lazyAbortController","ranges":[{"startOffset":2539,"endOffset":2659,"count":30}],"isBlockCoverage":true},{"functionName":"inherits","ranges":[{"startOffset":6082,"endOffset":6719,"count":1},{"startOffset":6167,"endOffset":6224,"count":0},{"startOffset":6283,"endOffset":6350,"count":0},{"startOffset":6393,"endOffset":6523,"count":0}],"isBlockCoverage":true},{"functionName":"get transferableAbortSignal","ranges":[{"startOffset":10581,"endOffset":10674,"count":15}],"isBlockCoverage":true},{"functionName":"get transferableAbortController","ranges":[{"startOffset":10678,"endOffset":10779,"count":15}],"isBlockCoverage":true}]},{"scriptId":"52","url":"node:internal/perf/utils","functions":[{"functionName":"refreshTimeOrigin","ranges":[{"startOffset":499,"endOffset":563,"count":1}],"isBlockCoverage":true}]},{"scriptId":"58","url":"node:internal/streams/destroy","functions":[{"functionName":"undestroy","ranges":[{"startOffset":2799,"endOffset":3489,"count":2}],"isBlockCoverage":true},{"functionName":"construct","ranges":[{"startOffset":4412,"endOffset":4818,"count":4},{"startOffset":4509,"endOffset":4817,"count":0}],"isBlockCoverage":true}]},{"scriptId":"59","url":"node:internal/streams/duplex","functions":[{"functionName":"Duplex","ranges":[{"startOffset":1996,"endOffset":2663,"count":2},{"startOffset":2060,"endOffset":2087,"count":0},{"startOffset":2266,"endOffset":2402,"count":0},{"startOffset":2440,"endOffset":2615,"count":0},{"startOffset":2619,"endOffset":2661,"count":0}],"isBlockCoverage":true}]},{"scriptId":"60","url":"node:internal/streams/readable","functions":[{"functionName":"ReadableState","ranges":[{"startOffset":2604,"endOffset":6333,"count":2},{"startOffset":3003,"endOffset":3046,"count":0},{"startOffset":3579,"endOffset":3615,"count":0},{"startOffset":6232,"endOffset":6331,"count":0}],"isBlockCoverage":true},{"functionName":"Readable","ranges":[{"startOffset":6336,"endOffset":7224,"count":2},{"startOffset":6404,"endOffset":6433,"count":0},{"startOffset":6756,"endOffset":6782,"count":0},{"startOffset":6837,"endOffset":6869,"count":0},{"startOffset":6926,"endOffset":6962,"count":0},{"startOffset":6987,"endOffset":6999,"count":0},{"startOffset":7007,"endOffset":7044,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7111,"endOffset":7220,"count":0}],"isBlockCoverage":false},{"functionName":"Readable.on","ranges":[{"startOffset":28005,"endOffset":28912,"count":2},{"startOffset":28137,"endOffset":28469,"count":0},{"startOffset":28498,"endOffset":28895,"count":0}],"isBlockCoverage":true}]},{"scriptId":"61","url":"node:internal/streams/legacy","functions":[{"functionName":"Stream","ranges":[{"startOffset":112,"endOffset":160,"count":4}],"isBlockCoverage":true}]},{"scriptId":"63","url":"node:internal/streams/buffer_list","functions":[{"functionName":"BufferList","ranges":[{"startOffset":254,"endOffset":338,"count":2}],"isBlockCoverage":true}]},{"scriptId":"64","url":"node:internal/streams/state","functions":[{"functionName":"highWaterMarkFrom","ranges":[{"startOffset":142,"endOffset":309,"count":4},{"startOffset":240,"endOffset":263,"count":0},{"startOffset":300,"endOffset":306,"count":0}],"isBlockCoverage":true},{"functionName":"getDefaultHighWaterMark","ranges":[{"startOffset":311,"endOffset":397,"count":2},{"startOffset":378,"endOffset":382,"count":0}],"isBlockCoverage":true},{"functionName":"getHighWaterMark","ranges":[{"startOffset":399,"endOffset":832,"count":4},{"startOffset":546,"endOffset":758,"count":2},{"startOffset":590,"endOffset":727,"count":0},{"startOffset":758,"endOffset":831,"count":2}],"isBlockCoverage":true}]},{"scriptId":"65","url":"node:string_decoder","functions":[{"functionName":"normalizeEncoding","ranges":[{"startOffset":2130,"endOffset":2392,"count":20},{"startOffset":2242,"endOffset":2375,"count":0}],"isBlockCoverage":true},{"functionName":"StringDecoder","ranges":[{"startOffset":2709,"endOffset":2908,"count":20}],"isBlockCoverage":true}]},{"scriptId":"67","url":"node:internal/streams/writable","functions":[{"functionName":"WritableState","ranges":[{"startOffset":2450,"endOffset":6973,"count":2},{"startOffset":2845,"endOffset":2888,"count":0},{"startOffset":3439,"endOffset":3475,"count":0}],"isBlockCoverage":true},{"functionName":"resetBuffer","ranges":[{"startOffset":6975,"endOffset":7107,"count":2}],"isBlockCoverage":true},{"functionName":"Writable","ranges":[{"startOffset":7401,"endOffset":8929,"count":2},{"startOffset":8042,"endOffset":8096,"count":0},{"startOffset":8102,"endOffset":8131,"count":0},{"startOffset":8270,"endOffset":8298,"count":0},{"startOffset":8352,"endOffset":8382,"count":0},{"startOffset":8437,"endOffset":8469,"count":0},{"startOffset":8522,"endOffset":8550,"count":0},{"startOffset":8607,"endOffset":8643,"count":0},{"startOffset":8675,"endOffset":8712,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8779,"endOffset":8925,"count":0}],"isBlockCoverage":false}]},{"scriptId":"72","url":"node:internal/process/execution","functions":[{"functionName":"tryGetCwd","ranges":[{"startOffset":609,"endOffset":939,"count":1},{"startOffset":670,"endOffset":937,"count":0}],"isBlockCoverage":true}]},{"scriptId":"73","url":"node:path","functions":[{"functionName":"isPosixPathSeparator","ranges":[{"startOffset":1825,"endOffset":1902,"count":705997}],"isBlockCoverage":true},{"functionName":"normalizeString","ranges":[{"startOffset":2137,"endOffset":4085,"count":9064},{"startOffset":2354,"endOffset":4069,"count":705943},{"startOffset":2387,"endOffset":2429,"count":696879},{"startOffset":2429,"endOffset":2520,"count":9064},{"startOffset":2472,"endOffset":2478,"count":9010},{"startOffset":2478,"endOffset":2520,"count":54},{"startOffset":2520,"endOffset":2553,"count":696933},{"startOffset":2553,"endOffset":3970,"count":85438},{"startOffset":2585,"endOffset":2598,"count":76085},{"startOffset":2600,"endOffset":2625,"count":9564},{"startOffset":2625,"endOffset":3927,"count":75874},{"startOffset":2647,"endOffset":3682,"count":18},{"startOffset":2676,"endOffset":2702,"count":11},{"startOffset":2703,"endOffset":2777,"count":0},{"startOffset":2778,"endOffset":2852,"count":0},{"startOffset":2886,"endOffset":3363,"count":11},{"startOffset":3006,"endOffset":3082,"count":0},{"startOffset":3363,"endOffset":3532,"count":7},{"startOffset":3391,"endOffset":3532,"count":0},{"startOffset":3542,"endOffset":3674,"count":7},{"startOffset":3605,"endOffset":3623,"count":0},{"startOffset":3682,"endOffset":3927,"count":75856},{"startOffset":3728,"endOffset":3797,"count":66801},{"startOffset":3797,"endOffset":3872,"count":9055},{"startOffset":3927,"endOffset":3970,"count":85427},{"startOffset":3970,"endOffset":4065,"count":611495},{"startOffset":3998,"endOffset":4012,"count":5214},{"startOffset":4014,"endOffset":4035,"count":283},{"startOffset":4035,"endOffset":4065,"count":611212}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33660,"endOffset":33679,"count":1190}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":33804,"endOffset":34721,"count":9010},{"startOffset":33927,"endOffset":33947,"count":18907},{"startOffset":33954,"endOffset":34275,"count":11087},{"startOffset":33982,"endOffset":33991,"count":9897},{"startOffset":33992,"endOffset":34004,"count":1190},{"startOffset":34101,"endOffset":34128,"count":2},{"startOffset":34128,"endOffset":34275,"count":11085},{"startOffset":34660,"endOffset":34710,"count":0},{"startOffset":34711,"endOffset":34716,"count":0}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":34787,"endOffset":35400,"count":54},{"startOffset":34873,"endOffset":34884,"count":0},{"startOffset":35212,"endOffset":35306,"count":0},{"startOffset":35340,"endOffset":35352,"count":0},{"startOffset":35376,"endOffset":35388,"count":2},{"startOffset":35389,"endOffset":35395,"count":52}],"isBlockCoverage":true},{"functionName":"isAbsolute","ranges":[{"startOffset":35467,"endOffset":35623,"count":2010},{"startOffset":35547,"endOffset":35618,"count":1991}],"isBlockCoverage":true},{"functionName":"join","ranges":[{"startOffset":35692,"endOffset":36106,"count":2},{"startOffset":35741,"endOffset":35752,"count":0},{"startOffset":35811,"endOffset":36018,"count":6},{"startOffset":35947,"endOffset":35960,"count":2},{"startOffset":35960,"endOffset":36004,"count":4},{"startOffset":36055,"endOffset":36066,"count":0}],"isBlockCoverage":true},{"functionName":"relative","ranges":[{"startOffset":36196,"endOffset":38556,"count":3771},{"startOffset":36309,"endOffset":36319,"count":0},{"startOffset":36446,"endOffset":36456,"count":0},{"startOffset":36719,"endOffset":36728,"count":3429},{"startOffset":36729,"endOffset":36736,"count":342},{"startOffset":36810,"endOffset":37045,"count":194789},{"startOffset":36958,"endOffset":36964,"count":448},{"startOffset":36964,"endOffset":37039,"count":194341},{"startOffset":37021,"endOffset":37039,"count":19527},{"startOffset":37068,"endOffset":38030,"count":3323},{"startOffset":37377,"endOffset":37559,"count":0},{"startOffset":37567,"endOffset":38024,"count":0},{"startOffset":38030,"endOffset":38208,"count":448},{"startOffset":38208,"endOffset":38369,"count":7968},{"startOffset":38234,"endOffset":38304,"count":7520},{"startOffset":38306,"endOffset":38363,"count":1232},{"startOffset":38340,"endOffset":38346,"count":448},{"startOffset":38347,"endOffset":38354,"count":784},{"startOffset":38369,"endOffset":38555,"count":448}],"isBlockCoverage":true},{"functionName":"toNamespacedPath","ranges":[{"startOffset":38622,"endOffset":38698,"count":1357}],"isBlockCoverage":true},{"functionName":"dirname","ranges":[{"startOffset":38764,"endOffset":39440,"count":1011},{"startOffset":38847,"endOffset":38858,"count":0},{"startOffset":39032,"endOffset":39285,"count":13689},{"startOffset":39103,"endOffset":39187,"count":980},{"startOffset":39187,"endOffset":39279,"count":12709},{"startOffset":39313,"endOffset":39340,"count":31},{"startOffset":39328,"endOffset":39333,"count":1},{"startOffset":39334,"endOffset":39339,"count":30},{"startOffset":39340,"endOffset":39357,"count":980},{"startOffset":39357,"endOffset":39369,"count":452},{"startOffset":39377,"endOffset":39389,"count":0},{"startOffset":39389,"endOffset":39439,"count":980}],"isBlockCoverage":true},{"functionName":"basename","ranges":[{"startOffset":39536,"endOffset":41963,"count":100},{"startOffset":39597,"endOffset":39627,"count":0},{"startOffset":39759,"endOffset":39779,"count":0},{"startOffset":39780,"endOffset":39811,"count":0},{"startOffset":39813,"endOffset":41337,"count":0},{"startOffset":41385,"endOffset":41870,"count":1152},{"startOffset":41456,"endOffset":41680,"count":100},{"startOffset":41680,"endOffset":41864,"count":1052},{"startOffset":41702,"endOffset":41864,"count":100},{"startOffset":41898,"endOffset":41908,"count":0}],"isBlockCoverage":true},{"functionName":"extname","ranges":[{"startOffset":42029,"endOffset":43719,"count":15},{"startOffset":42362,"endOffset":43324,"count":188},{"startOffset":42458,"endOffset":42704,"count":1},{"startOffset":42678,"endOffset":42704,"count":0},{"startOffset":42704,"endOffset":42727,"count":187},{"startOffset":42727,"endOffset":42884,"count":15},{"startOffset":42884,"endOffset":42914,"count":187},{"startOffset":42914,"endOffset":43114,"count":15},{"startOffset":43043,"endOffset":43106,"count":0},{"startOffset":43114,"endOffset":43318,"count":172},{"startOffset":43141,"endOffset":43318,"count":134},{"startOffset":43563,"endOffset":43595,"count":0},{"startOffset":43596,"endOffset":43634,"count":0},{"startOffset":43637,"endOffset":43661,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":43946,"endOffset":46418,"count":21},{"startOffset":44096,"endOffset":44107,"count":0},{"startOffset":44277,"endOffset":44307,"count":0},{"startOffset":44627,"endOffset":45589,"count":248},{"startOffset":44723,"endOffset":44969,"count":21},{"startOffset":44943,"endOffset":44969,"count":0},{"startOffset":44969,"endOffset":44992,"count":227},{"startOffset":44992,"endOffset":45149,"count":21},{"startOffset":45149,"endOffset":45179,"count":227},{"startOffset":45179,"endOffset":45379,"count":20},{"startOffset":45308,"endOffset":45371,"count":0},{"startOffset":45379,"endOffset":45583,"count":207},{"startOffset":45406,"endOffset":45583,"count":161},{"startOffset":45649,"endOffset":45662,"count":0},{"startOffset":45663,"endOffset":45666,"count":0},{"startOffset":45706,"endOffset":45803,"count":20},{"startOffset":45804,"endOffset":45979,"count":20},{"startOffset":45905,"endOffset":45938,"count":0},{"startOffset":45939,"endOffset":45978,"count":0},{"startOffset":45981,"endOffset":46060,"count":1},{"startOffset":46060,"endOffset":46259,"count":20},{"startOffset":46351,"endOffset":46397,"count":0}],"isBlockCoverage":true}]},{"scriptId":"75","url":"node:fs","functions":[{"functionName":"makeCallback","ranges":[{"startOffset":4910,"endOffset":5022,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4978,"endOffset":5019,"count":1}],"isBlockCoverage":true},{"functionName":"makeStatsCallback","ranges":[{"startOffset":5203,"endOffset":5370,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5276,"endOffset":5367,"count":1},{"startOffset":5307,"endOffset":5322,"count":0}],"isBlockCoverage":true},{"functionName":"isFileType","ranges":[{"startOffset":5396,"endOffset":5656,"count":1970},{"startOffset":5595,"endOffset":5615,"count":191}],"isBlockCoverage":true},{"functionName":"tryStatSync","ranges":[{"startOffset":10914,"endOffset":11144,"count":161},{"startOffset":11057,"endOffset":11069,"count":0},{"startOffset":11071,"endOffset":11126,"count":0}],"isBlockCoverage":true},{"functionName":"tryCreateBuffer","ranges":[{"startOffset":11146,"endOffset":11457,"count":161},{"startOffset":11264,"endOffset":11316,"count":0},{"startOffset":11403,"endOffset":11415,"count":0},{"startOffset":11417,"endOffset":11434,"count":0}],"isBlockCoverage":true},{"functionName":"tryReadSync","ranges":[{"startOffset":11459,"endOffset":11714,"count":161},{"startOffset":11657,"endOffset":11669,"count":0},{"startOffset":11671,"endOffset":11688,"count":0}],"isBlockCoverage":true},{"functionName":"readFileSync","ranges":[{"startOffset":11938,"endOffset":13336,"count":161},{"startOffset":12107,"endOffset":12113,"count":0},{"startOffset":12253,"endOffset":12256,"count":0},{"startOffset":12386,"endOffset":12409,"count":0},{"startOffset":12661,"endOffset":13030,"count":0},{"startOffset":13090,"endOffset":13186,"count":0},{"startOffset":13208,"endOffset":13248,"count":0},{"startOffset":13274,"endOffset":13317,"count":153}],"isBlockCoverage":true},{"functionName":"closeSync","ranges":[{"startOffset":13881,"endOffset":14021,"count":234}],"isBlockCoverage":true},{"functionName":"openSync","ranges":[{"startOffset":15013,"endOffset":15409,"count":234}],"isBlockCoverage":true},{"functionName":"readSync","ranges":[{"startOffset":18078,"endOffset":19079,"count":161},{"startOffset":18220,"endOffset":18426,"count":0},{"startOffset":18450,"endOffset":18471,"count":0},{"startOffset":18562,"endOffset":18581,"count":0},{"startOffset":18614,"endOffset":18744,"count":0}],"isBlockCoverage":true},{"functionName":"writeSync","ranges":[{"startOffset":23057,"endOffset":24199,"count":3371},{"startOffset":23250,"endOffset":23870,"count":14},{"startOffset":23288,"endOffset":23438,"count":0},{"startOffset":23518,"endOffset":23543,"count":0},{"startOffset":23643,"endOffset":23679,"count":0},{"startOffset":23870,"endOffset":24149,"count":3357}],"isBlockCoverage":true},{"functionName":"rmdir","ranges":[{"startOffset":29711,"endOffset":30573,"count":1},{"startOffset":29959,"endOffset":29970,"count":0},{"startOffset":29972,"endOffset":30420,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30096,"endOffset":30414,"count":0}],"isBlockCoverage":false},{"functionName":"mkdirSync","ranges":[{"startOffset":35098,"endOffset":35804,"count":73},{"startOffset":35245,"endOffset":35270,"count":0}],"isBlockCoverage":true},{"functionName":"readdirSync","ranges":[{"startOffset":36919,"endOffset":37341,"count":8},{"startOffset":37303,"endOffset":37329,"count":0}],"isBlockCoverage":true},{"functionName":"lstat","ranges":[{"startOffset":38194,"endOffset":38579,"count":1}],"isBlockCoverage":true},{"functionName":"statSync","ranges":[{"startOffset":40711,"endOffset":41132,"count":46},{"startOffset":41010,"endOffset":41033,"count":0},{"startOffset":41035,"endOffset":41062,"count":0}],"isBlockCoverage":true},{"functionName":"writeFileSync","ranges":[{"startOffset":58682,"endOffset":59473,"count":14},{"startOffset":58840,"endOffset":59046,"count":6},{"startOffset":58930,"endOffset":58976,"count":0},{"startOffset":59031,"endOffset":59040,"count":0},{"startOffset":59076,"endOffset":59082,"count":0},{"startOffset":59167,"endOffset":59173,"count":0}],"isBlockCoverage":true},{"functionName":"splitRoot","ranges":[{"startOffset":64888,"endOffset":65098,"count":101},{"startOffset":64955,"endOffset":65078,"count":202},{"startOffset":65033,"endOffset":65072,"count":101},{"startOffset":65078,"endOffset":65097,"count":0}],"isBlockCoverage":true},{"functionName":"encodeRealpathResult","ranges":[{"startOffset":65103,"endOffset":65390,"count":100},{"startOffset":65188,"endOffset":65218,"count":0},{"startOffset":65238,"endOffset":65389,"count":0}],"isBlockCoverage":true},{"functionName":"nextPart","ranges":[{"startOffset":65796,"endOffset":65871,"count":1000}],"isBlockCoverage":true},{"functionName":"realpathSync","ranges":[{"startOffset":66045,"endOffset":69957,"count":125},{"startOffset":66169,"endOffset":66187,"count":0},{"startOffset":66348,"endOffset":66383,"count":25},{"startOffset":66383,"endOffset":66945,"count":100},{"startOffset":66945,"endOffset":67117,"count":0},{"startOffset":67117,"endOffset":67254,"count":100},{"startOffset":67254,"endOffset":69884,"count":1000},{"startOffset":67366,"endOffset":67497,"count":101},{"startOffset":67497,"endOffset":67655,"count":899},{"startOffset":67742,"endOffset":67770,"count":993},{"startOffset":67772,"endOffset":67925,"count":809},{"startOffset":67879,"endOffset":67903,"count":0},{"startOffset":67925,"endOffset":67991,"count":191},{"startOffset":68028,"endOffset":68077,"count":0},{"startOffset":68077,"endOffset":69381,"count":191},{"startOffset":68429,"endOffset":68517,"count":190},{"startOffset":68517,"endOffset":68938,"count":1},{"startOffset":68877,"endOffset":68930,"count":0},{"startOffset":68938,"endOffset":69301,"count":1},{"startOffset":69345,"endOffset":69375,"count":1},{"startOffset":69381,"endOffset":69673,"count":1},{"startOffset":69673,"endOffset":69696,"count":0},{"startOffset":69698,"endOffset":69880,"count":0},{"startOffset":69884,"endOffset":69898,"count":100}],"isBlockCoverage":true},{"functionName":"lazyLoadStreams","ranges":[{"startOffset":78617,"endOffset":78808,"count":88},{"startOffset":78665,"endOffset":78806,"count":1}],"isBlockCoverage":true},{"functionName":"get ReadStream","ranges":[{"startOffset":81023,"endOffset":81091,"count":22}],"isBlockCoverage":true},{"functionName":"get WriteStream","ranges":[{"startOffset":81148,"endOffset":81218,"count":22}],"isBlockCoverage":true},{"functionName":"get FileReadStream","ranges":[{"startOffset":81410,"endOffset":81486,"count":22}],"isBlockCoverage":true},{"functionName":"get FileWriteStream","ranges":[{"startOffset":81551,"endOffset":81629,"count":22}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":82232,"endOffset":82328,"count":24}],"isBlockCoverage":true}]},{"scriptId":"76","url":"node:internal/url","functions":[{"functionName":"URLContext","ranges":[{"startOffset":3741,"endOffset":3964,"count":2171}],"isBlockCoverage":true},{"functionName":"URLSearchParams","ranges":[{"startOffset":4366,"endOffset":7233,"count":2167},{"startOffset":4481,"endOffset":7171,"count":0}],"isBlockCoverage":true},{"functionName":"onParseComplete","ranges":[{"startOffset":14720,"endOffset":15413,"count":2167},{"startOffset":14975,"endOffset":14985,"count":0},{"startOffset":15048,"endOffset":15058,"count":0},{"startOffset":15139,"endOffset":15143,"count":0}],"isBlockCoverage":true},{"functionName":"onParseError","ranges":[{"startOffset":15415,"endOffset":15490,"count":4}],"isBlockCoverage":true},{"functionName":"onParsePathComplete","ranges":[{"startOffset":16675,"endOffset":17169,"count":258},{"startOffset":16941,"endOffset":17009,"count":0}],"isBlockCoverage":true},{"functionName":"isURLThis","ranges":[{"startOffset":17513,"endOffset":17620,"count":6096}],"isBlockCoverage":true},{"functionName":"URL","ranges":[{"startOffset":17636,"endOffset":18040,"count":2171},{"startOffset":17783,"endOffset":17835,"count":42}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18129,"endOffset":18222,"count":2423}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":19438,"endOffset":20697,"count":310},{"startOffset":19482,"endOffset":19517,"count":0},{"startOffset":19952,"endOffset":20101,"count":0},{"startOffset":20131,"endOffset":20166,"count":0},{"startOffset":20216,"endOffset":20238,"count":0},{"startOffset":20273,"endOffset":20306,"count":0},{"startOffset":20342,"endOffset":20364,"count":0},{"startOffset":20365,"endOffset":20386,"count":0},{"startOffset":20388,"endOffset":20418,"count":0},{"startOffset":20570,"endOffset":20593,"count":0},{"startOffset":20651,"endOffset":20677,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":20754,"endOffset":20865,"count":30},{"startOffset":20799,"endOffset":20833,"count":0}],"isBlockCoverage":true},{"functionName":"get href","ranges":[{"startOffset":20869,"endOffset":20980,"count":280},{"startOffset":20914,"endOffset":20948,"count":0}],"isBlockCoverage":true},{"functionName":"get origin","ranges":[{"startOffset":21308,"endOffset":21944,"count":10},{"startOffset":21355,"endOffset":21389,"count":0},{"startOffset":21514,"endOffset":21742,"count":0},{"startOffset":21749,"endOffset":21761,"count":0},{"startOffset":21768,"endOffset":21781,"count":0},{"startOffset":21788,"endOffset":21802,"count":0},{"startOffset":21809,"endOffset":21820,"count":0},{"startOffset":21827,"endOffset":21908,"count":0}],"isBlockCoverage":true},{"functionName":"get protocol","ranges":[{"startOffset":21948,"endOffset":22068,"count":1835},{"startOffset":21997,"endOffset":22031,"count":0}],"isBlockCoverage":true},{"functionName":"get hostname","ranges":[{"startOffset":24164,"endOffset":24288,"count":1828},{"startOffset":24213,"endOffset":24247,"count":0}],"isBlockCoverage":true},{"functionName":"get pathname","ranges":[{"startOffset":25222,"endOffset":25494,"count":1855},{"startOffset":25271,"endOffset":25305,"count":0},{"startOffset":25371,"endOffset":25390,"count":7},{"startOffset":25390,"endOffset":25428,"count":1848},{"startOffset":25428,"endOffset":25438,"count":0},{"startOffset":25438,"endOffset":25493,"count":1848}],"isBlockCoverage":true},{"functionName":"set pathname","ranges":[{"startOffset":25498,"endOffset":25779,"count":258},{"startOffset":25551,"endOffset":25585,"count":0},{"startOffset":25676,"endOffset":25683,"count":0}],"isBlockCoverage":true},{"functionName":"initSearchParams","ranges":[{"startOffset":29511,"endOffset":29651,"count":2167},{"startOffset":29608,"endOffset":29650,"count":0}],"isBlockCoverage":true},{"functionName":"getPathFromURLPosix","ranges":[{"startOffset":40257,"endOffset":40761,"count":1828},{"startOffset":40320,"endOffset":40376,"count":0},{"startOffset":40454,"endOffset":40720,"count":176481},{"startOffset":40485,"endOffset":40716,"count":0}],"isBlockCoverage":true},{"functionName":"fileURLToPath","ranges":[{"startOffset":40763,"endOffset":41110,"count":1828},{"startOffset":40830,"endOffset":40851,"count":1818},{"startOffset":40851,"endOffset":40953,"count":10},{"startOffset":40889,"endOffset":40953,"count":0},{"startOffset":40991,"endOffset":41032,"count":0},{"startOffset":41052,"endOffset":41079,"count":0}],"isBlockCoverage":true},{"functionName":"encodePathChars","ranges":[{"startOffset":41870,"endOffset":42586,"count":258},{"startOffset":41957,"endOffset":42022,"count":0},{"startOffset":42144,"endOffset":42211,"count":0},{"startOffset":42263,"endOffset":42328,"count":0},{"startOffset":42380,"endOffset":42452,"count":0},{"startOffset":42504,"endOffset":42565,"count":0}],"isBlockCoverage":true},{"functionName":"pathToFileURL","ranges":[{"startOffset":42588,"endOffset":43839,"count":258},{"startOffset":42676,"endOffset":42722,"count":0},{"startOffset":42724,"endOffset":43326,"count":0},{"startOffset":43648,"endOffset":43687,"count":0},{"startOffset":43690,"endOffset":43743,"count":0},{"startOffset":43751,"endOffset":43767,"count":0}],"isBlockCoverage":true},{"functionName":"isURLInstance","ranges":[{"startOffset":43841,"endOffset":43960,"count":519},{"startOffset":43934,"endOffset":43957,"count":10}],"isBlockCoverage":true},{"functionName":"toPathIfFileURL","ranges":[{"startOffset":43962,"endOffset":44107,"count":509},{"startOffset":44066,"endOffset":44106,"count":0}],"isBlockCoverage":true}]},{"scriptId":"79","url":"node:internal/fs/utils","functions":[{"functionName":"assertEncoding","ranges":[{"startOffset":3558,"endOffset":3758,"count":298},{"startOffset":3609,"endOffset":3640,"count":173},{"startOffset":3642,"endOffset":3756,"count":0}],"isBlockCoverage":true},{"functionName":"getOptions","ranges":[{"startOffset":7253,"endOffset":7878,"count":328},{"startOffset":7337,"endOffset":7369,"count":298},{"startOffset":7371,"endOffset":7403,"count":30},{"startOffset":7403,"endOffset":7440,"count":298},{"startOffset":7440,"endOffset":7558,"count":173},{"startOffset":7558,"endOffset":7680,"count":125},{"startOffset":7597,"endOffset":7680,"count":0},{"startOffset":7680,"endOffset":7794,"count":298},{"startOffset":7794,"endOffset":7858,"count":0},{"startOffset":7858,"endOffset":7877,"count":298}],"isBlockCoverage":true},{"functionName":"handleErrorFromBinding","ranges":[{"startOffset":7936,"endOffset":8465,"count":4320},{"startOffset":8006,"endOffset":8141,"count":28},{"startOffset":8141,"endOffset":8173,"count":4292},{"startOffset":8173,"endOffset":8463,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8606,"endOffset":9195,"count":509},{"startOffset":8836,"endOffset":8856,"count":0},{"startOffset":8926,"endOffset":8994,"count":0},{"startOffset":9013,"endOffset":9194,"count":0}],"isBlockCoverage":true},{"functionName":"StatsBase","ranges":[{"startOffset":9938,"endOffset":10245,"count":19}],"isBlockCoverage":true},{"functionName":"StatsBase.isDirectory","ranges":[{"startOffset":10281,"endOffset":10338,"count":3}],"isBlockCoverage":true},{"functionName":"StatsBase.isFile","ranges":[{"startOffset":10370,"endOffset":10427,"count":16}],"isBlockCoverage":true},{"functionName":"msFromTimeSpec","ranges":[{"startOffset":11026,"endOffset":11108,"count":76}],"isBlockCoverage":true},{"functionName":"dateFromMs","ranges":[{"startOffset":11595,"endOffset":11706,"count":76}],"isBlockCoverage":true},{"functionName":"Stats","ranges":[{"startOffset":12878,"endOffset":13420,"count":19}],"isBlockCoverage":true},{"functionName":"Stats._checkModeProperty","ranges":[{"startOffset":13761,"endOffset":13991,"count":19},{"startOffset":13798,"endOffset":13876,"count":0},{"startOffset":13878,"endOffset":13945,"count":0}],"isBlockCoverage":true},{"functionName":"getStatsFromBinding","ranges":[{"startOffset":14109,"endOffset":15186,"count":19},{"startOffset":14189,"endOffset":14714,"count":0}],"isBlockCoverage":true},{"functionName":"stringToFlags","ranges":[{"startOffset":15188,"endOffset":16444,"count":254},{"startOffset":15269,"endOffset":15324,"count":0},{"startOffset":15347,"endOffset":15373,"count":0},{"startOffset":15398,"endOffset":15425,"count":181},{"startOffset":15430,"endOffset":15441,"count":0},{"startOffset":15463,"endOffset":15500,"count":0},{"startOffset":15505,"endOffset":15531,"count":0},{"startOffset":15536,"endOffset":15548,"count":0},{"startOffset":15570,"endOffset":15606,"count":0},{"startOffset":15612,"endOffset":15659,"count":73},{"startOffset":15664,"endOffset":15675,"count":0},{"startOffset":15697,"endOffset":15754,"count":0},{"startOffset":15760,"endOffset":15806,"count":0},{"startOffset":15811,"endOffset":15822,"count":0},{"startOffset":15844,"endOffset":15899,"count":0},{"startOffset":15905,"endOffset":15953,"count":0},{"startOffset":15958,"endOffset":15969,"count":0},{"startOffset":15991,"endOffset":16049,"count":0},{"startOffset":16054,"endOffset":16065,"count":0},{"startOffset":16087,"endOffset":16145,"count":0},{"startOffset":16151,"endOffset":16198,"count":0},{"startOffset":16203,"endOffset":16214,"count":0},{"startOffset":16236,"endOffset":16292,"count":0},{"startOffset":16297,"endOffset":16308,"count":0},{"startOffset":16330,"endOffset":16386,"count":0},{"startOffset":16390,"endOffset":16443,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17421,"endOffset":17800,"count":161},{"startOffset":17477,"endOffset":17544,"count":0},{"startOffset":17565,"endOffset":17632,"count":0},{"startOffset":17673,"endOffset":17796,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":17858,"endOffset":18262,"count":14},{"startOffset":17921,"endOffset":18000,"count":0},{"startOffset":18040,"endOffset":18128,"count":0},{"startOffset":18150,"endOffset":18217,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18304,"endOffset":18574,"count":509},{"startOffset":18366,"endOffset":18388,"count":0},{"startOffset":18390,"endOffset":18476,"count":0},{"startOffset":18552,"endOffset":18572,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18619,"endOffset":18754,"count":384}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18797,"endOffset":18918,"count":3766},{"startOffset":18848,"endOffset":18867,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":22893,"endOffset":23290,"count":1},{"startOffset":22993,"endOffset":23289,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23762,"endOffset":24134,"count":6},{"startOffset":23833,"endOffset":23895,"count":0},{"startOffset":23896,"endOffset":23940,"count":0},{"startOffset":23941,"endOffset":23997,"count":0},{"startOffset":24002,"endOffset":24133,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24206,"endOffset":24389,"count":3357},{"startOffset":24260,"endOffset":24387,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24434,"endOffset":24904,"count":161},{"startOffset":24534,"endOffset":24902,"count":0}],"isBlockCoverage":true}]},{"scriptId":"84","url":"node:internal/v8/startup_snapshot","functions":[{"functionName":"isBuildingSnapshot","ranges":[{"startOffset":349,"endOffset":510,"count":101}],"isBlockCoverage":true},{"functionName":"runDeserializeCallbacks","ranges":[{"startOffset":704,"endOffset":877,"count":1},{"startOffset":783,"endOffset":875,"count":0}],"isBlockCoverage":true}]},{"scriptId":"87","url":"node:internal/options","functions":[{"functionName":"getCLIOptionsFromBinding","ranges":[{"startOffset":464,"endOffset":598,"count":256},{"startOffset":521,"endOffset":575,"count":1}],"isBlockCoverage":true},{"functionName":"getEmbedderOptions","ranges":[{"startOffset":733,"endOffset":877,"count":2},{"startOffset":789,"endOffset":849,"count":1}],"isBlockCoverage":true},{"functionName":"refreshOptions","ranges":[{"startOffset":879,"endOffset":960,"count":1}],"isBlockCoverage":true},{"functionName":"getOptionValue","ranges":[{"startOffset":962,"endOffset":1228,"count":256},{"startOffset":1084,"endOffset":1185,"count":5},{"startOffset":1185,"endOffset":1225,"count":251}],"isBlockCoverage":true}]},{"scriptId":"89","url":"node:internal/vm","functions":[{"functionName":"internalCompileFunction","ranges":[{"startOffset":556,"endOffset":2737,"count":99},{"startOffset":1151,"endOffset":1200,"count":0},{"startOffset":1304,"endOffset":1565,"count":0},{"startOffset":2043,"endOffset":2116,"count":0},{"startOffset":2143,"endOffset":2200,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1674,"endOffset":1823,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":2671,"endOffset":2704,"count":0}],"isBlockCoverage":false}]},{"scriptId":"110","url":"node:internal/console/constructor","functions":[{"functionName":"value","ranges":[{"startOffset":5725,"endOffset":6367,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5934,"endOffset":6029,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6041,"endOffset":6071,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6200,"endOffset":6299,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6311,"endOffset":6341,"count":0}],"isBlockCoverage":false},{"functionName":"value","ranges":[{"startOffset":6458,"endOffset":7860,"count":1}],"isBlockCoverage":true},{"functionName":"createWriteErrorHandler","ranges":[{"startOffset":10620,"endOffset":11509,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10688,"endOffset":11506,"count":0}],"isBlockCoverage":false},{"functionName":"initializeGlobalConsole","ranges":[{"startOffset":20377,"endOffset":21378,"count":1},{"startOffset":20707,"endOffset":21377,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21273,"endOffset":21374,"count":0}],"isBlockCoverage":false}]},{"scriptId":"118","url":"node:internal/perf/performance","functions":[{"functionName":"refreshTimeOrigin","ranges":[{"startOffset":4952,"endOffset":5156,"count":1}],"isBlockCoverage":true}]},{"scriptId":"131","url":"node:internal/bootstrap/switches/is_main_thread","functions":[{"functionName":"createWritableStdioStream","ranges":[{"startOffset":1386,"endOffset":2985,"count":2},{"startOffset":1678,"endOffset":1872,"count":0},{"startOffset":1878,"endOffset":1890,"count":0},{"startOffset":1895,"endOffset":2605,"count":0},{"startOffset":2611,"endOffset":2864,"count":0}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":2801,"endOffset":2848,"count":0}],"isBlockCoverage":false},{"functionName":"addCleanup","ranges":[{"startOffset":3598,"endOffset":3689,"count":2},{"startOffset":3652,"endOffset":3687,"count":0}],"isBlockCoverage":true},{"functionName":"getStdout","ranges":[{"startOffset":3691,"endOffset":4383,"count":4},{"startOffset":3728,"endOffset":3742,"count":3},{"startOffset":3742,"endOffset":4382,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStdout","ranges":[{"startOffset":4049,"endOffset":4227,"count":0}],"isBlockCoverage":false},{"functionName":"getStderr","ranges":[{"startOffset":4385,"endOffset":5076,"count":2},{"startOffset":4422,"endOffset":5075,"count":1}],"isBlockCoverage":true},{"functionName":"cleanupStderr","ranges":[{"startOffset":4742,"endOffset":4920,"count":0}],"isBlockCoverage":false}]},{"scriptId":"132","url":"node:internal/process/signal","functions":[{"functionName":"isSignal","ranges":[{"startOffset":238,"endOffset":334,"count":17}],"isBlockCoverage":false},{"functionName":"startListeningIfSignal","ranges":[{"startOffset":398,"endOffset":904,"count":17}],"isBlockCoverage":false},{"functionName":"stopListeningIfSignal","ranges":[{"startOffset":906,"endOffset":1101,"count":14},{"startOffset":1008,"endOffset":1044,"count":13},{"startOffset":1046,"endOffset":1099,"count":13}],"isBlockCoverage":true}]},{"scriptId":"133","url":"node:internal/bootstrap/switches/does_own_process_state","functions":[{"functionName":"wrappedCwd","ranges":[{"startOffset":3324,"endOffset":3427,"count":1203},{"startOffset":3376,"endOffset":3405,"count":1}],"isBlockCoverage":true}]},{"scriptId":"438","url":"node:internal/main/run_main_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":792,"count":1}],"isBlockCoverage":false}]},{"scriptId":"439","url":"node:internal/process/pre_execution","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":20109,"count":1}],"isBlockCoverage":false},{"functionName":"prepareMainThreadExecution","ranges":[{"startOffset":665,"endOffset":841,"count":1}],"isBlockCoverage":true},{"functionName":"prepareWorkerThreadExecution","ranges":[{"startOffset":843,"endOffset":1041,"count":0}],"isBlockCoverage":false},{"functionName":"prepareExecution","ranges":[{"startOffset":1043,"endOffset":3435,"count":1},{"startOffset":2223,"endOffset":2327,"count":0},{"startOffset":3215,"endOffset":3377,"count":0}],"isBlockCoverage":true},{"functionName":"setupUserModules","ranges":[{"startOffset":3437,"endOffset":3726,"count":1}],"isBlockCoverage":true},{"functionName":"refreshRuntimeOptions","ranges":[{"startOffset":3728,"endOffset":3784,"count":1}],"isBlockCoverage":true},{"functionName":"patchProcessObject","ranges":[{"startOffset":3786,"endOffset":5896,"count":1},{"startOffset":4565,"endOffset":4617,"count":0}],"isBlockCoverage":true},{"functionName":"addReadOnlyProcessAlias","ranges":[{"startOffset":5898,"endOffset":6178,"count":13},{"startOffset":6019,"endOffset":6176,"count":1}],"isBlockCoverage":true},{"functionName":"setupWarningHandler","ranges":[{"startOffset":6180,"endOffset":6699,"count":1},{"startOffset":6554,"endOffset":6693,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6583,"endOffset":6685,"count":0}],"isBlockCoverage":false},{"functionName":"setupFetch","ranges":[{"startOffset":6735,"endOffset":7865,"count":1},{"startOffset":6866,"endOffset":6883,"count":0}],"isBlockCoverage":true},{"functionName":"lazyUndici","ranges":[{"startOffset":6901,"endOffset":7046,"count":0}],"isBlockCoverage":false},{"functionName":"fetch","ranges":[{"startOffset":7050,"endOffset":7145,"count":0}],"isBlockCoverage":false},{"functionName":"lazyInterface","ranges":[{"startOffset":7197,"endOffset":7437,"count":4}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":7298,"endOffset":7348,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7356,"endOffset":7426,"count":0}],"isBlockCoverage":false},{"functionName":"setupWebCrypto","ranges":[{"startOffset":7971,"endOffset":8820,"count":1},{"startOffset":8132,"endOffset":8818,"count":0}],"isBlockCoverage":true},{"functionName":"get crypto","ranges":[{"startOffset":8299,"endOffset":8471,"count":0}],"isBlockCoverage":false},{"functionName":"setupCustomEvent","ranges":[{"startOffset":8928,"endOffset":9214,"count":1},{"startOffset":9093,"endOffset":9213,"count":0}],"isBlockCoverage":true},{"functionName":"setupCoverageHooks","ranges":[{"startOffset":9326,"endOffset":10003,"count":1},{"startOffset":9796,"endOffset":9973,"count":0}],"isBlockCoverage":true},{"functionName":"setupStacktracePrinterOnSigint","ranges":[{"startOffset":10005,"endOffset":10230,"count":1},{"startOffset":10107,"endOffset":10229,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReport","ranges":[{"startOffset":10232,"endOffset":10476,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10434,"endOffset":10468,"count":0}],"isBlockCoverage":false},{"functionName":"setupDebugEnv","ranges":[{"startOffset":10478,"endOffset":10711,"count":1},{"startOffset":10629,"endOffset":10709,"count":0}],"isBlockCoverage":true},{"functionName":"initializeReportSignalHandlers","ranges":[{"startOffset":10773,"endOffset":10908,"count":1}],"isBlockCoverage":true},{"functionName":"initializeHeapSnapshotSignalHandlers","ranges":[{"startOffset":10910,"endOffset":11491,"count":1},{"startOffset":11045,"endOffset":11489,"count":0}],"isBlockCoverage":true},{"functionName":"doWriteHeapSnapshot","ranges":[{"startOffset":11158,"endOffset":11219,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11411,"endOffset":11483,"count":0}],"isBlockCoverage":false},{"functionName":"setupTraceCategoryState","ranges":[{"startOffset":11493,"endOffset":11752,"count":1}],"isBlockCoverage":true},{"functionName":"setupPerfHooks","ranges":[{"startOffset":11754,"endOffset":11897,"count":1}],"isBlockCoverage":true},{"functionName":"setupInspectorHooks","ranges":[{"startOffset":11899,"endOffset":12480,"count":1}],"isBlockCoverage":true},{"functionName":"initializeDeprecations","ranges":[{"startOffset":12675,"endOffset":14626,"count":1},{"startOffset":13387,"endOffset":13689,"count":16},{"startOffset":13432,"endOffset":13664,"count":0},{"startOffset":14006,"endOffset":14202,"count":0},{"startOffset":14230,"endOffset":14624,"count":0}],"isBlockCoverage":true},{"functionName":"setupChildProcessIpcChannel","ranges":[{"startOffset":14628,"endOffset":15193,"count":1},{"startOffset":14704,"endOffset":15191,"count":0}],"isBlockCoverage":true},{"functionName":"initializeClusterIPC","ranges":[{"startOffset":15195,"endOffset":15465,"count":1},{"startOffset":15282,"endOffset":15463,"count":0}],"isBlockCoverage":true},{"functionName":"readPolicyFromDisk","ranges":[{"startOffset":15467,"endOffset":17290,"count":1},{"startOffset":15595,"endOffset":17288,"count":0}],"isBlockCoverage":true},{"functionName":"initializeWASI","ranges":[{"startOffset":17292,"endOffset":17523,"count":1}],"isBlockCoverage":true},{"functionName":"initializeCJSLoader","ranges":[{"startOffset":17525,"endOffset":17868,"count":1}],"isBlockCoverage":true},{"functionName":"initializeESMLoader","ranges":[{"startOffset":17870,"endOffset":18986,"count":1},{"startOffset":18100,"endOffset":18107,"count":0},{"startOffset":18739,"endOffset":18984,"count":0}],"isBlockCoverage":true},{"functionName":"initializeSourceMapsHandlers","ranges":[{"startOffset":18988,"endOffset":19275,"count":1}],"isBlockCoverage":true},{"functionName":"initializeFrozenIntrinsics","ranges":[{"startOffset":19277,"endOffset":19534,"count":1},{"startOffset":19362,"endOffset":19532,"count":0}],"isBlockCoverage":true},{"functionName":"loadPreloadModules","ranges":[{"startOffset":19536,"endOffset":19883,"count":1},{"startOffset":19730,"endOffset":19881,"count":0}],"isBlockCoverage":true},{"functionName":"markBootstrapComplete","ranges":[{"startOffset":19885,"endOffset":19979,"count":1}],"isBlockCoverage":true}]},{"scriptId":"440","url":"node:internal/inspector_async_hook","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1972,"count":1}],"isBlockCoverage":false},{"functionName":"lazyHookCreation","ranges":[{"startOffset":75,"endOffset":1257,"count":0}],"isBlockCoverage":false},{"functionName":"enable","ranges":[{"startOffset":1259,"endOffset":1840,"count":0}],"isBlockCoverage":false},{"functionName":"disable","ranges":[{"startOffset":1842,"endOffset":1928,"count":0}],"isBlockCoverage":false}]},{"scriptId":"441","url":"node:internal/wasm_web_api","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1947,"count":1}],"isBlockCoverage":false},{"functionName":"lazyUndici","ranges":[{"startOffset":169,"endOffset":254,"count":0}],"isBlockCoverage":false},{"functionName":"wasmStreamingCallback","ranges":[{"startOffset":552,"endOffset":1899,"count":0}],"isBlockCoverage":false}]},{"scriptId":"442","url":"node:internal/source_map/source_map_cache","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10423,"count":1}],"isBlockCoverage":false},{"functionName":"ObjectGetValueSafe","ranges":[{"startOffset":260,"endOffset":438,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":620,"endOffset":645,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapsEnabled","ranges":[{"startOffset":1812,"endOffset":1986,"count":12},{"startOffset":1885,"endOffset":1956,"count":1}],"isBlockCoverage":true},{"functionName":"setSourceMapsEnabled","ranges":[{"startOffset":1988,"endOffset":2632,"count":1},{"startOffset":2199,"endOffset":2353,"count":0},{"startOffset":2396,"endOffset":2602,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceURLMagicComment","ranges":[{"startOffset":2634,"endOffset":3234,"count":11},{"startOffset":2936,"endOffset":2969,"count":0},{"startOffset":3022,"endOffset":3158,"count":0},{"startOffset":3160,"endOffset":3233,"count":0}],"isBlockCoverage":true},{"functionName":"extractSourceMapURLMagicComment","ranges":[{"startOffset":3236,"endOffset":3679,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCacheSourceMap","ranges":[{"startOffset":3681,"endOffset":5303,"count":11},{"startOffset":3883,"endOffset":3903,"count":0},{"startOffset":3906,"endOffset":3913,"count":0},{"startOffset":3973,"endOffset":4097,"count":0},{"startOffset":4133,"endOffset":4199,"count":0},{"startOffset":4288,"endOffset":4305,"count":0},{"startOffset":4478,"endOffset":4492,"count":0},{"startOffset":4519,"endOffset":4676,"count":0},{"startOffset":4705,"endOffset":4947,"count":0},{"startOffset":5243,"endOffset":5297,"count":0}],"isBlockCoverage":true},{"functionName":"maybeCacheGeneratedSourceMap","ranges":[{"startOffset":5305,"endOffset":5833,"count":0}],"isBlockCoverage":false},{"functionName":"dataFromUrl","ranges":[{"startOffset":5898,"endOffset":6418,"count":11},{"startOffset":6035,"endOffset":6110,"count":7},{"startOffset":6117,"endOffset":6197,"count":0},{"startOffset":6208,"endOffset":6416,"count":4}],"isBlockCoverage":true},{"functionName":"lineLengths","ranges":[{"startOffset":6608,"endOffset":6953,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6910,"endOffset":6949,"count":1827}],"isBlockCoverage":true},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":6955,"endOffset":7205,"count":4},{"startOffset":7153,"endOffset":7203,"count":0}],"isBlockCoverage":true},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":7299,"endOffset":7970,"count":7},{"startOffset":7702,"endOffset":7708,"count":0},{"startOffset":7830,"endOffset":7886,"count":0},{"startOffset":7890,"endOffset":7968,"count":0}],"isBlockCoverage":true},{"functionName":"sourcesToAbsolute","ranges":[{"startOffset":8155,"endOffset":8482,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8233,"endOffset":8339,"count":18}],"isBlockCoverage":true},{"functionName":"sourceMapCacheToObject","ranges":[{"startOffset":8920,"endOffset":9167,"count":0}],"isBlockCoverage":false},{"functionName":"appendCJSCache","ranges":[{"startOffset":9169,"endOffset":9458,"count":0}],"isBlockCoverage":false},{"functionName":"findSourceMap","ranges":[{"startOffset":9460,"endOffset":10285,"count":0}],"isBlockCoverage":false}]},{"scriptId":"443","url":"node:internal/util/iterable_weak_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1958,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":373,"endOffset":1818,"count":1}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":521,"endOffset":1032,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":1036,"endOffset":1092,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":1096,"endOffset":1145,"count":0}],"isBlockCoverage":false},{"functionName":"delete","ranges":[{"startOffset":1149,"endOffset":1387,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1391,"endOffset":1816,"count":0}],"isBlockCoverage":false},{"functionName":"cleanup","ranges":[{"startOffset":1820,"endOffset":1873,"count":0}],"isBlockCoverage":false}]},{"scriptId":"444","url":"node:internal/modules/cjs/helpers","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7047,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":864,"endOffset":889,"count":1}],"isBlockCoverage":true},{"functionName":"loadBuiltinModule","ranges":[{"startOffset":1180,"endOffset":1489,"count":198},{"startOffset":1284,"endOffset":1306,"count":98},{"startOffset":1308,"endOffset":1487,"count":98}],"isBlockCoverage":true},{"functionName":"makeRequireFunction","ranges":[{"startOffset":1738,"endOffset":3755,"count":99},{"startOffset":1852,"endOffset":3129,"count":0}],"isBlockCoverage":true},{"functionName":"require","ranges":[{"startOffset":1990,"endOffset":3124,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":3151,"endOffset":3213,"count":240}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":3222,"endOffset":3368,"count":0}],"isBlockCoverage":false},{"functionName":"paths","ranges":[{"startOffset":3402,"endOffset":3524,"count":0}],"isBlockCoverage":false},{"functionName":"stripBOM","ranges":[{"startOffset":3940,"endOffset":4095,"count":1},{"startOffset":4022,"endOffset":4075,"count":0}],"isBlockCoverage":true},{"functionName":"addBuiltinLibsToObject","ranges":[{"startOffset":4097,"endOffset":6056,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeReferrerURL","ranges":[{"startOffset":6124,"endOffset":6312,"count":11},{"startOffset":6277,"endOffset":6311,"count":0}],"isBlockCoverage":true},{"functionName":"hasEsmSyntax","ranges":[{"startOffset":6382,"endOffset":6884,"count":0}],"isBlockCoverage":false}]},{"scriptId":"445","url":"node:internal/process/report","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2545,"count":1}],"isBlockCoverage":false},{"functionName":"writeReport","ranges":[{"startOffset":292,"endOffset":674,"count":0}],"isBlockCoverage":false},{"functionName":"getReport","ranges":[{"startOffset":678,"endOffset":843,"count":0}],"isBlockCoverage":false},{"functionName":"get directory","ranges":[{"startOffset":847,"endOffset":898,"count":0}],"isBlockCoverage":false},{"functionName":"set directory","ranges":[{"startOffset":902,"endOffset":990,"count":0}],"isBlockCoverage":false},{"functionName":"get filename","ranges":[{"startOffset":994,"endOffset":1043,"count":0}],"isBlockCoverage":false},{"functionName":"set filename","ranges":[{"startOffset":1047,"endOffset":1135,"count":0}],"isBlockCoverage":false},{"functionName":"get compact","ranges":[{"startOffset":1139,"endOffset":1186,"count":0}],"isBlockCoverage":false},{"functionName":"set compact","ranges":[{"startOffset":1190,"endOffset":1267,"count":0}],"isBlockCoverage":false},{"functionName":"get signal","ranges":[{"startOffset":1271,"endOffset":1316,"count":0}],"isBlockCoverage":false},{"functionName":"set signal","ranges":[{"startOffset":1320,"endOffset":1457,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnFatalError","ranges":[{"startOffset":1461,"endOffset":1533,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnFatalError","ranges":[{"startOffset":1537,"endOffset":1655,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnSignal","ranges":[{"startOffset":1659,"endOffset":1723,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnSignal","ranges":[{"startOffset":1727,"endOffset":1888,"count":0}],"isBlockCoverage":false},{"functionName":"get reportOnUncaughtException","ranges":[{"startOffset":1892,"endOffset":1978,"count":0}],"isBlockCoverage":false},{"functionName":"set reportOnUncaughtException","ranges":[{"startOffset":1982,"endOffset":2114,"count":0}],"isBlockCoverage":false},{"functionName":"addSignalHandler","ranges":[{"startOffset":2119,"endOffset":2290,"count":1},{"startOffset":2185,"endOffset":2288,"count":0}],"isBlockCoverage":true},{"functionName":"removeSignalHandler","ranges":[{"startOffset":2292,"endOffset":2416,"count":0}],"isBlockCoverage":false},{"functionName":"signalHandler","ranges":[{"startOffset":2418,"endOffset":2492,"count":0}],"isBlockCoverage":false}]},{"scriptId":"446","url":"node:internal/dns/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9478,"count":1}],"isBlockCoverage":false},{"functionName":"lazyBinding","ranges":[{"startOffset":522,"endOffset":611,"count":0}],"isBlockCoverage":false},{"functionName":"validateTimeout","ranges":[{"startOffset":937,"endOffset":1084,"count":0}],"isBlockCoverage":false},{"functionName":"validateTries","ranges":[{"startOffset":1086,"endOffset":1221,"count":0}],"isBlockCoverage":false},{"functionName":"ResolverBase","ranges":[{"startOffset":1615,"endOffset":1964,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1968,"endOffset":2104,"count":0}],"isBlockCoverage":false},{"functionName":"cancel","ranges":[{"startOffset":2108,"endOffset":2149,"count":0}],"isBlockCoverage":false},{"functionName":"getServers","ranges":[{"startOffset":2153,"endOffset":2421,"count":0}],"isBlockCoverage":false},{"functionName":"setServers","ranges":[{"startOffset":2425,"endOffset":3826,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3830,"endOffset":4385,"count":0}],"isBlockCoverage":false},{"functionName":"setLocalAddress","ranges":[{"startOffset":4390,"endOffset":4675,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4795,"endOffset":5015,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5019,"endOffset":5367,"count":0}],"isBlockCoverage":false},{"functionName":"initializeDns","ranges":[{"startOffset":5407,"endOffset":5793,"count":1},{"startOffset":5550,"endOffset":5660,"count":0},{"startOffset":5708,"endOffset":5792,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5733,"endOffset":5789,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultResolver","ranges":[{"startOffset":6054,"endOffset":6335,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultResolver","ranges":[{"startOffset":6337,"endOffset":6408,"count":0}],"isBlockCoverage":false},{"functionName":"bindDefaultResolver","ranges":[{"startOffset":6410,"endOffset":6632,"count":0}],"isBlockCoverage":false},{"functionName":"validateHints","ranges":[{"startOffset":6634,"endOffset":6853,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidHostnameWarning","ranges":[{"startOffset":6898,"endOffset":7251,"count":0}],"isBlockCoverage":false},{"functionName":"getDefaultVerbatim","ranges":[{"startOffset":7253,"endOffset":7321,"count":0}],"isBlockCoverage":false},{"functionName":"setDefaultResultOrder","ranges":[{"startOffset":7323,"endOffset":7447,"count":0}],"isBlockCoverage":false},{"functionName":"createResolverClass","ranges":[{"startOffset":7449,"endOffset":8555,"count":0}],"isBlockCoverage":false}]},{"scriptId":"447","url":"node:internal/net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2222,"count":1}],"isBlockCoverage":false},{"functionName":"isIPv4","ranges":[{"startOffset":997,"endOffset":1270,"count":0}],"isBlockCoverage":false},{"functionName":"isIPv6","ranges":[{"startOffset":1272,"endOffset":1545,"count":0}],"isBlockCoverage":false},{"functionName":"isIP","ranges":[{"startOffset":1547,"endOffset":1633,"count":0}],"isBlockCoverage":false},{"functionName":"makeSyncWrite","ranges":[{"startOffset":1635,"endOffset":2049,"count":0}],"isBlockCoverage":false}]},{"scriptId":"448","url":"node:internal/modules/cjs/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":44331,"count":1}],"isBlockCoverage":false},{"functionName":"get hasLoadedAnyUserCJSModule","ranges":[{"startOffset":2290,"endOffset":2359,"count":1}],"isBlockCoverage":true},{"functionName":"stat","ranges":[{"startOffset":4872,"endOffset":5282,"count":695},{"startOffset":4970,"endOffset":5064,"count":605},{"startOffset":5046,"endOffset":5060,"count":135},{"startOffset":5064,"endOffset":5137,"count":560},{"startOffset":5137,"endOffset":5151,"count":470},{"startOffset":5153,"endOffset":5263,"count":139},{"startOffset":5263,"endOffset":5281,"count":560}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":5363,"endOffset":5386,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":5390,"endOffset":5485,"count":0}],"isBlockCoverage":false},{"functionName":"updateChildren","ranges":[{"startOffset":5514,"endOffset":5710,"count":143},{"startOffset":5586,"endOffset":5596,"count":142},{"startOffset":5613,"endOffset":5666,"count":142},{"startOffset":5623,"endOffset":5665,"count":43},{"startOffset":5672,"endOffset":5708,"count":141}],"isBlockCoverage":true},{"functionName":"reportModuleToWatchMode","ranges":[{"startOffset":5712,"endOffset":5866,"count":340},{"startOffset":5791,"endOffset":5806,"count":0},{"startOffset":5808,"endOffset":5864,"count":0}],"isBlockCoverage":true},{"functionName":"reportModuleNotFoundToWatchMode","ranges":[{"startOffset":5868,"endOffset":6105,"count":15},{"startOffset":5967,"endOffset":5982,"count":0},{"startOffset":5984,"endOffset":6103,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6052,"endOffset":6094,"count":0}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":6152,"endOffset":6422,"count":100}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6714,"endOffset":6740,"count":66}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6794,"endOffset":6841,"count":1}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":7153,"endOffset":7230,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7396,"endOffset":7518,"count":0}],"isBlockCoverage":false},{"functionName":"defineProperty","ranges":[{"startOffset":7523,"endOffset":7656,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7722,"endOffset":7750,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7755,"endOffset":7809,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":7878,"endOffset":7914,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":7919,"endOffset":7981,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8014,"endOffset":8044,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleParent","ranges":[{"startOffset":8204,"endOffset":8272,"count":0}],"isBlockCoverage":false},{"functionName":"setModuleParent","ranges":[{"startOffset":8274,"endOffset":8347,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8945,"endOffset":8970,"count":1}],"isBlockCoverage":true},{"functionName":"readPackage","ranges":[{"startOffset":9318,"endOffset":10070,"count":479},{"startOffset":9498,"endOffset":9514,"count":392},{"startOffset":9514,"endOffset":9612,"count":87},{"startOffset":9612,"endOffset":9618,"count":0},{"startOffset":9619,"endOffset":9634,"count":87},{"startOffset":9662,"endOffset":9728,"count":31},{"startOffset":9728,"endOffset":9953,"count":56},{"startOffset":9953,"endOffset":10068,"count":0}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10172,"endOffset":10202,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":10206,"endOffset":10329,"count":0}],"isBlockCoverage":false},{"functionName":"readPackageScope","ranges":[{"startOffset":10358,"endOffset":10902,"count":218},{"startOffset":10493,"endOffset":10839,"count":334},{"startOffset":10700,"endOffset":10713,"count":0},{"startOffset":10778,"endOffset":10835,"count":218},{"startOffset":10839,"endOffset":10901,"count":0}],"isBlockCoverage":true},{"functionName":"tryPackage","ranges":[{"startOffset":10904,"endOffset":12182,"count":61},{"startOffset":11027,"endOffset":11108,"count":24},{"startOffset":11108,"endOffset":11202,"count":37},{"startOffset":11202,"endOffset":11246,"count":1},{"startOffset":11247,"endOffset":11314,"count":0},{"startOffset":11340,"endOffset":12163,"count":0},{"startOffset":12163,"endOffset":12181,"count":37}],"isBlockCoverage":true},{"functionName":"tryFile","ranges":[{"startOffset":12527,"endOffset":12738,"count":342},{"startOffset":12616,"endOffset":12623,"count":229},{"startOffset":12623,"endOffset":12647,"count":113},{"startOffset":12647,"endOffset":12657,"count":0},{"startOffset":12659,"endOffset":12702,"count":0},{"startOffset":12702,"endOffset":12737,"count":113}],"isBlockCoverage":true},{"functionName":"toRealPath","ranges":[{"startOffset":12740,"endOffset":12871,"count":125}],"isBlockCoverage":true},{"functionName":"tryExtensions","ranges":[{"startOffset":12946,"endOffset":13152,"count":143},{"startOffset":13028,"endOffset":13134,"count":295},{"startOffset":13100,"endOffset":13130,"count":67},{"startOffset":13134,"endOffset":13151,"count":76}],"isBlockCoverage":true},{"functionName":"findLongestRegisteredExtension","ranges":[{"startOffset":13241,"endOffset":13709,"count":100},{"startOffset":13465,"endOffset":13691,"count":102},{"startOffset":13516,"endOffset":13525,"count":0},{"startOffset":13663,"endOffset":13687,"count":95},{"startOffset":13691,"endOffset":13708,"count":5}],"isBlockCoverage":true},{"functionName":"trySelfParentPath","ranges":[{"startOffset":13711,"endOffset":14000,"count":124},{"startOffset":13763,"endOffset":13776,"count":1},{"startOffset":13776,"endOffset":13834,"count":123},{"startOffset":13834,"endOffset":13998,"count":0}],"isBlockCoverage":true},{"functionName":"trySelf","ranges":[{"startOffset":14002,"endOffset":14842,"count":124},{"startOffset":14061,"endOffset":14074,"count":1},{"startOffset":14074,"endOffset":14144,"count":123},{"startOffset":14144,"endOffset":14149,"count":0},{"startOffset":14162,"endOffset":14190,"count":123},{"startOffset":14192,"endOffset":14205,"count":110},{"startOffset":14205,"endOffset":14242,"count":13},{"startOffset":14242,"endOffset":14255,"count":0},{"startOffset":14255,"endOffset":14302,"count":13},{"startOffset":14302,"endOffset":14328,"count":0},{"startOffset":14328,"endOffset":14494,"count":13},{"startOffset":14390,"endOffset":14465,"count":0},{"startOffset":14494,"endOffset":14840,"count":0}],"isBlockCoverage":true},{"functionName":"resolveExports","ranges":[{"startOffset":15003,"endOffset":15712,"count":136},{"startOffset":15210,"endOffset":15225,"count":52},{"startOffset":15244,"endOffset":15251,"count":52},{"startOffset":15251,"endOffset":15353,"count":84},{"startOffset":15363,"endOffset":15710,"count":10},{"startOffset":15557,"endOffset":15706,"count":0}],"isBlockCoverage":true},{"functionName":"Module._findPath","ranges":[{"startOffset":15980,"endOffset":19884,"count":125},{"startOffset":16090,"endOffset":16113,"count":4},{"startOffset":16113,"endOffset":16176,"count":121},{"startOffset":16153,"endOffset":16176,"count":0},{"startOffset":16313,"endOffset":16326,"count":1},{"startOffset":16326,"endOffset":16909,"count":124},{"startOffset":16548,"endOffset":16902,"count":0},{"startOffset":16984,"endOffset":17440,"count":52},{"startOffset":17090,"endOffset":17175,"count":7},{"startOffset":17110,"endOffset":17174,"count":0},{"startOffset":17176,"endOffset":17434,"count":7},{"startOffset":17345,"endOffset":17432,"count":0},{"startOffset":17485,"endOffset":17639,"count":52},{"startOffset":17602,"endOffset":17635,"count":7},{"startOffset":17639,"endOffset":17701,"count":124},{"startOffset":17701,"endOffset":19865,"count":234},{"startOffset":17833,"endOffset":17843,"count":227},{"startOffset":17844,"endOffset":17865,"count":224},{"startOffset":17867,"endOffset":17876,"count":95},{"startOffset":17876,"endOffset":17904,"count":139},{"startOffset":17904,"endOffset":18034,"count":136},{"startOffset":18005,"endOffset":18028,"count":10},{"startOffset":18034,"endOffset":19342,"count":129},{"startOffset":18186,"endOffset":19119,"count":11},{"startOffset":18219,"endOffset":18387,"count":10},{"startOffset":18253,"endOffset":18313,"count":0},{"startOffset":18387,"endOffset":19111,"count":1},{"startOffset":18419,"endOffset":19051,"count":0},{"startOffset":19142,"endOffset":19336,"count":118},{"startOffset":19232,"endOffset":19270,"count":103},{"startOffset":19342,"endOffset":19362,"count":129},{"startOffset":19362,"endOffset":19373,"count":76},{"startOffset":19375,"endOffset":19591,"count":61},{"startOffset":19485,"endOffset":19523,"count":0},{"startOffset":19591,"endOffset":19611,"count":129},{"startOffset":19611,"endOffset":19687,"count":114},{"startOffset":19687,"endOffset":19865,"count":15},{"startOffset":19865,"endOffset":19883,"count":0}],"isBlockCoverage":true},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":20128,"endOffset":21644,"count":0}],"isBlockCoverage":false},{"functionName":"Module._nodeModulePaths","ranges":[{"startOffset":21736,"endOffset":22875,"count":100},{"startOffset":22014,"endOffset":22039,"count":0},{"startOffset":22332,"endOffset":22753,"count":8378},{"startOffset":22428,"endOffset":22623,"count":891},{"startOffset":22465,"endOffset":22582,"count":783},{"startOffset":22623,"endOffset":22747,"count":7487},{"startOffset":22643,"endOffset":22747,"count":2300},{"startOffset":22678,"endOffset":22704,"count":1517},{"startOffset":22704,"endOffset":22739,"count":783}],"isBlockCoverage":true},{"functionName":"Module._resolveLookupPaths","ranges":[{"startOffset":22909,"endOffset":24367,"count":124},{"startOffset":22993,"endOffset":23068,"count":0},{"startOffset":23126,"endOffset":23182,"count":0},{"startOffset":23188,"endOffset":23254,"count":0},{"startOffset":23339,"endOffset":23538,"count":52},{"startOffset":23419,"endOffset":23469,"count":45},{"startOffset":23470,"endOffset":23537,"count":0},{"startOffset":23540,"endOffset":23839,"count":72},{"startOffset":23572,"endOffset":23587,"count":71},{"startOffset":23589,"endOffset":23699,"count":71},{"startOffset":23699,"endOffset":23739,"count":1},{"startOffset":23828,"endOffset":23834,"count":0},{"startOffset":23839,"endOffset":23907,"count":52},{"startOffset":23908,"endOffset":23927,"count":52},{"startOffset":23929,"endOffset":24178,"count":0},{"startOffset":24178,"endOffset":24366,"count":52}],"isBlockCoverage":true},{"functionName":"emitCircularRequireWarning","ranges":[{"startOffset":24370,"endOffset":24553,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":24766,"endOffset":25138,"count":0}],"isBlockCoverage":false},{"functionName":"getOwnPropertyDescriptor","ranges":[{"startOffset":25143,"endOffset":25384,"count":0}],"isBlockCoverage":false},{"functionName":"getExportsForCircularRequire","ranges":[{"startOffset":25390,"endOffset":26034,"count":1},{"startOffset":25559,"endOffset":25852,"count":0},{"startOffset":25854,"endOffset":26006,"count":0}],"isBlockCoverage":true},{"functionName":"Module._load","ranges":[{"startOffset":26447,"endOffset":29519,"count":241},{"startOffset":26530,"endOffset":27346,"count":240},{"startOffset":26989,"endOffset":27342,"count":19},{"startOffset":27179,"endOffset":27229,"count":0},{"startOffset":27274,"endOffset":27342,"count":0},{"startOffset":27346,"endOffset":27399,"count":222},{"startOffset":27399,"endOffset":27661,"count":0},{"startOffset":27661,"endOffset":27814,"count":222},{"startOffset":27814,"endOffset":28174,"count":24},{"startOffset":27894,"endOffset":28122,"count":1},{"startOffset":27990,"endOffset":28017,"count":0},{"startOffset":28077,"endOffset":28122,"count":0},{"startOffset":28122,"endOffset":28170,"count":23},{"startOffset":28174,"endOffset":28237,"count":198},{"startOffset":28237,"endOffset":28259,"count":98},{"startOffset":28260,"endOffset":28319,"count":98},{"startOffset":28321,"endOffset":28350,"count":98},{"startOffset":28350,"endOffset":28480,"count":100},{"startOffset":28497,"endOffset":28556,"count":1},{"startOffset":28556,"endOffset":29491,"count":100},{"startOffset":28834,"endOffset":29237,"count":0},{"startOffset":29419,"endOffset":29487,"count":0},{"startOffset":29491,"endOffset":29518,"count":100}],"isBlockCoverage":true},{"functionName":"Module._resolveFilename","ranges":[{"startOffset":29548,"endOffset":32755,"count":222},{"startOffset":29656,"endOffset":29733,"count":0},{"startOffset":29795,"endOffset":29853,"count":98},{"startOffset":29864,"endOffset":29889,"count":98},{"startOffset":29889,"endOffset":29939,"count":124},{"startOffset":29939,"endOffset":29958,"count":0},{"startOffset":29960,"endOffset":31037,"count":0},{"startOffset":31037,"endOffset":31132,"count":124},{"startOffset":31132,"endOffset":31180,"count":0},{"startOffset":31182,"endOffset":31689,"count":0},{"startOffset":31689,"endOffset":31850,"count":124},{"startOffset":31850,"endOffset":32046,"count":0},{"startOffset":32046,"endOffset":32209,"count":124},{"startOffset":32209,"endOffset":32754,"count":0}],"isBlockCoverage":true},{"functionName":"finalizeEsmResolution","ranges":[{"startOffset":32758,"endOffset":33256,"count":10},{"startOffset":32889,"endOffset":33008,"count":0},{"startOffset":33121,"endOffset":33255,"count":0}],"isBlockCoverage":true},{"functionName":"createEsmNotFoundErr","ranges":[{"startOffset":33258,"endOffset":33548,"count":0}],"isBlockCoverage":false},{"functionName":"Module.load","ranges":[{"startOffset":33637,"endOffset":34458,"count":100},{"startOffset":33972,"endOffset":34002,"count":0},{"startOffset":34008,"endOffset":34050,"count":0},{"startOffset":34324,"endOffset":34372,"count":0}],"isBlockCoverage":true},{"functionName":"Module.require","ranges":[{"startOffset":34576,"endOffset":34875,"count":240},{"startOffset":34636,"endOffset":34754,"count":0}],"isBlockCoverage":true},{"functionName":"wrapSafe","ranges":[{"startOffset":35055,"endOffset":36524,"count":99},{"startOffset":35128,"endOffset":35765,"count":0},{"startOffset":36272,"endOffset":36370,"count":11},{"startOffset":36404,"endOffset":36522,"count":0}],"isBlockCoverage":true},{"functionName":"importModuleDynamically","ranges":[{"startOffset":35281,"endOffset":35495,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":35949,"endOffset":36177,"count":0}],"isBlockCoverage":false},{"functionName":"Module._compile","ranges":[{"startOffset":36724,"endOffset":38525,"count":99},{"startOffset":36800,"endOffset":36810,"count":0},{"startOffset":36812,"endOffset":36979,"count":0},{"startOffset":37112,"endOffset":37136,"count":0},{"startOffset":37138,"endOffset":37874,"count":0},{"startOffset":38097,"endOffset":38123,"count":1},{"startOffset":38148,"endOffset":38287,"count":0},{"startOffset":38489,"endOffset":38506,"count":1}],"isBlockCoverage":true},{"functionName":"Module._extensions..js","ranges":[{"startOffset":38584,"endOffset":40344,"count":99},{"startOffset":38745,"endOffset":38753,"count":0},{"startOffset":38755,"endOffset":38820,"count":0},{"startOffset":38929,"endOffset":40304,"count":94},{"startOffset":39070,"endOffset":40300,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..json","ranges":[{"startOffset":40408,"endOffset":40790,"count":1},{"startOffset":40503,"endOffset":40513,"count":0},{"startOffset":40515,"endOffset":40624,"count":0},{"startOffset":40707,"endOffset":40788,"count":0}],"isBlockCoverage":true},{"functionName":"Module._extensions..node","ranges":[{"startOffset":40854,"endOffset":41172,"count":0}],"isBlockCoverage":false},{"functionName":"createRequireFromPath","ranges":[{"startOffset":41175,"endOffset":41636,"count":0}],"isBlockCoverage":false},{"functionName":"createRequire","ranges":[{"startOffset":41744,"endOffset":42297,"count":0}],"isBlockCoverage":false},{"functionName":"Module._initPaths","ranges":[{"startOffset":42358,"endOffset":43322,"count":1},{"startOffset":42399,"endOffset":42424,"count":0},{"startOffset":42476,"endOffset":42499,"count":0},{"startOffset":42707,"endOffset":42749,"count":0},{"startOffset":43048,"endOffset":43189,"count":0}],"isBlockCoverage":true},{"functionName":"Module._preloadModules","ranges":[{"startOffset":43350,"endOffset":43932,"count":0}],"isBlockCoverage":false},{"functionName":"syncBuiltinESMExports","ranges":[{"startOffset":43966,"endOffset":44183,"count":0}],"isBlockCoverage":false},{"functionName":"isBuiltin","ranges":[{"startOffset":44205,"endOffset":44277,"count":0}],"isBlockCoverage":false}]},{"scriptId":"449","url":"node:internal/modules/package_json_reader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":983,"count":1}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":279,"endOffset":954,"count":87},{"startOffset":332,"endOffset":369,"count":0},{"startOffset":601,"endOffset":904,"count":56},{"startOffset":635,"endOffset":769,"count":1},{"startOffset":694,"endOffset":747,"count":0},{"startOffset":797,"endOffset":900,"count":0}],"isBlockCoverage":true}]},{"scriptId":"450","url":"node:internal/process/esm_loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2985,"count":1}],"isBlockCoverage":false},{"functionName":"exports.initializeImportMetaObject","ranges":[{"startOffset":450,"endOffset":746,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamicallyCallback","ranges":[{"startOffset":791,"endOffset":1238,"count":0}],"isBlockCoverage":false},{"functionName":"initializeLoader","ranges":[{"startOffset":1650,"endOffset":2628,"count":0}],"isBlockCoverage":false},{"functionName":"loadESM","ranges":[{"startOffset":2648,"endOffset":2983,"count":0}],"isBlockCoverage":false}]},{"scriptId":"451","url":"node:internal/modules/esm/loader","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26138,"count":1}],"isBlockCoverage":false},{"functionName":"nextHookFactory","ranges":[{"startOffset":3459,"endOffset":5540,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":5762,"endOffset":26055,"count":1}],"isBlockCoverage":false},{"functionName":"ESMLoader","ranges":[{"startOffset":7038,"endOffset":7655,"count":1},{"startOffset":7114,"endOffset":7174,"count":0},{"startOffset":7233,"endOffset":7290,"count":0},{"startOffset":7421,"endOffset":7651,"count":0}],"isBlockCoverage":true},{"functionName":"pluckHooks","ranges":[{"startOffset":7749,"endOffset":9028,"count":0}],"isBlockCoverage":false},{"functionName":"addCustomLoaders","ranges":[{"startOffset":9292,"endOffset":10112,"count":0}],"isBlockCoverage":false},{"functionName":"eval","ranges":[{"startOffset":10116,"endOffset":10857,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleJob","ranges":[{"startOffset":11592,"endOffset":12525,"count":0}],"isBlockCoverage":false},{"functionName":"#createModuleJob","ranges":[{"startOffset":13163,"endOffset":14150,"count":0}],"isBlockCoverage":false},{"functionName":"import","ranges":[{"startOffset":14860,"endOffset":16192,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":16682,"endOffset":19929,"count":0}],"isBlockCoverage":false},{"functionName":"preload","ranges":[{"startOffset":19933,"endOffset":22586,"count":0}],"isBlockCoverage":false},{"functionName":"importMetaInitialize","ranges":[{"startOffset":22590,"endOffset":22679,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":23360,"endOffset":26053,"count":0}],"isBlockCoverage":false}]},{"scriptId":"452","url":"node:internal/modules/esm/module_map","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1444,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":263,"endOffset":288,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleMap","ranges":[{"startOffset":507,"endOffset":535,"count":1}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":584,"endOffset":727,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":730,"endOffset":1253,"count":0}],"isBlockCoverage":false},{"functionName":"has","ranges":[{"startOffset":1256,"endOffset":1413,"count":0}],"isBlockCoverage":false}]},{"scriptId":"453","url":"node:internal/modules/esm/module_job","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8163,"count":1}],"isBlockCoverage":false},{"functionName":"isCommonJSGlobalLikeNotDefinedError","ranges":[{"startOffset":919,"endOffset":1049,"count":0}],"isBlockCoverage":false},{"functionName":"ModuleJob","ranges":[{"startOffset":1287,"endOffset":3099,"count":0}],"isBlockCoverage":false},{"functionName":"instantiate","ranges":[{"startOffset":3103,"endOffset":3248,"count":0}],"isBlockCoverage":false},{"functionName":"_instantiate","ranges":[{"startOffset":3252,"endOffset":6871,"count":0}],"isBlockCoverage":false},{"functionName":"run","ranges":[{"startOffset":6875,"endOffset":8083,"count":0}],"isBlockCoverage":false}]},{"scriptId":"454","url":"node:internal/modules/esm/assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3631,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1295,"endOffset":1333,"count":5}],"isBlockCoverage":true},{"functionName":"validateAssertions","ranges":[{"startOffset":1754,"endOffset":2915,"count":0}],"isBlockCoverage":false},{"functionName":"handleInvalidType","ranges":[{"startOffset":3147,"endOffset":3561,"count":0}],"isBlockCoverage":false}]},{"scriptId":"455","url":"node:internal/modules/esm/resolve","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39620,"count":1}],"isBlockCoverage":false},{"functionName":"emitTrailingSlashPatternDeprecation","ranges":[{"startOffset":2543,"endOffset":3128,"count":0}],"isBlockCoverage":false},{"functionName":"emitInvalidSegmentDeprecation","ranges":[{"startOffset":3170,"endOffset":3903,"count":0}],"isBlockCoverage":false},{"functionName":"emitLegacyIndexDeprecation","ranges":[{"startOffset":4049,"endOffset":5145,"count":0}],"isBlockCoverage":false},{"functionName":"getConditionsSet","ranges":[{"startOffset":5215,"endOffset":5567,"count":0}],"isBlockCoverage":false},{"functionName":"tryStatSync","ranges":[{"startOffset":5700,"endOffset":5766,"count":0}],"isBlockCoverage":false},{"functionName":"fileExists","ranges":[{"startOffset":5828,"endOffset":5926,"count":0}],"isBlockCoverage":false},{"functionName":"legacyMainResolve","ranges":[{"startOffset":6314,"endOffset":8153,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensionsWithTryExactName","ranges":[{"startOffset":8216,"endOffset":8347,"count":0}],"isBlockCoverage":false},{"functionName":"resolveExtensions","ranges":[{"startOffset":8465,"endOffset":8722,"count":0}],"isBlockCoverage":false},{"functionName":"resolveDirectoryEntry","ranges":[{"startOffset":8785,"endOffset":9316,"count":0}],"isBlockCoverage":false},{"functionName":"finalizeResolution","ranges":[{"startOffset":9496,"endOffset":11254,"count":0}],"isBlockCoverage":false},{"functionName":"importNotDefined","ranges":[{"startOffset":11366,"endOffset":11577,"count":0}],"isBlockCoverage":false},{"functionName":"exportsNotFound","ranges":[{"startOffset":11687,"endOffset":11882,"count":0}],"isBlockCoverage":false},{"functionName":"throwInvalidSubpath","ranges":[{"startOffset":12049,"endOffset":12432,"count":0}],"isBlockCoverage":false},{"functionName":"invalidPackageTarget","ranges":[{"startOffset":12434,"endOffset":12812,"count":0}],"isBlockCoverage":false},{"functionName":"resolvePackageTargetString","ranges":[{"startOffset":13535,"endOffset":16326,"count":10},{"startOffset":13704,"endOffset":13715,"count":0},{"startOffset":13716,"endOffset":13752,"count":0},{"startOffset":13758,"endOffset":13832,"count":0},{"startOffset":13882,"endOffset":14494,"count":0},{"startOffset":14586,"endOffset":15196,"count":0},{"startOffset":15419,"endOffset":15493,"count":0},{"startOffset":15533,"endOffset":16325,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14269,"endOffset":14282,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14795,"endOffset":14808,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":14941,"endOffset":14954,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15668,"endOffset":15681,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15908,"endOffset":15921,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16261,"endOffset":16274,"count":0}],"isBlockCoverage":false},{"functionName":"isArrayIndex","ranges":[{"startOffset":16381,"endOffset":16521,"count":25},{"startOffset":16473,"endOffset":16518,"count":0}],"isBlockCoverage":true},{"functionName":"resolvePackageTarget","ranges":[{"startOffset":16785,"endOffset":19033,"count":29},{"startOffset":16978,"endOffset":17132,"count":10},{"startOffset":17132,"endOffset":18916,"count":19},{"startOffset":17164,"endOffset":18002,"count":9},{"startOffset":17195,"endOffset":17221,"count":0},{"startOffset":17541,"endOffset":17689,"count":0},{"startOffset":17729,"endOffset":17756,"count":0},{"startOffset":17791,"endOffset":17848,"count":0},{"startOffset":17882,"endOffset":17944,"count":0},{"startOffset":17952,"endOffset":18002,"count":0},{"startOffset":18002,"endOffset":18916,"count":10},{"startOffset":18155,"endOffset":18383,"count":25},{"startOffset":18213,"endOffset":18377,"count":0},{"startOffset":18426,"endOffset":18841,"count":23},{"startOffset":18507,"endOffset":18835,"count":10},{"startOffset":18788,"endOffset":18797,"count":0},{"startOffset":18841,"endOffset":18916,"count":0},{"startOffset":18916,"endOffset":19032,"count":0}],"isBlockCoverage":true},{"functionName":"isConditionalExportsMainSugar","ranges":[{"startOffset":19218,"endOffset":20153,"count":10},{"startOffset":19350,"endOffset":19362,"count":0},{"startOffset":19418,"endOffset":19431,"count":0},{"startOffset":19571,"endOffset":20122,"count":20},{"startOffset":19681,"endOffset":20118,"count":10},{"startOffset":19794,"endOffset":20118,"count":0}],"isBlockCoverage":true},{"functionName":"packageExportsResolve","ranges":[{"startOffset":20363,"endOffset":22921,"count":10},{"startOffset":20575,"endOffset":20602,"count":0},{"startOffset":21003,"endOffset":21077,"count":0},{"startOffset":21108,"endOffset":22920,"count":0}],"isBlockCoverage":true},{"functionName":"patternKeyCompare","ranges":[{"startOffset":22923,"endOffset":23454,"count":0}],"isBlockCoverage":false},{"functionName":"packageImportsResolve","ranges":[{"startOffset":23583,"endOffset":26039,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageType","ranges":[{"startOffset":26144,"endOffset":26257,"count":0}],"isBlockCoverage":false},{"functionName":"parsePackageName","ranges":[{"startOffset":26419,"endOffset":27471,"count":0}],"isBlockCoverage":false},{"functionName":"packageResolve","ranges":[{"startOffset":27633,"endOffset":29724,"count":0}],"isBlockCoverage":false},{"functionName":"isBareSpecifier","ranges":[{"startOffset":29785,"endOffset":29895,"count":0}],"isBlockCoverage":false},{"functionName":"isRelativeSpecifier","ranges":[{"startOffset":29897,"endOffset":30168,"count":0}],"isBlockCoverage":false},{"functionName":"shouldBeTreatedAsRelativeOrAbsolutePath","ranges":[{"startOffset":30170,"endOffset":30353,"count":0}],"isBlockCoverage":false},{"functionName":"moduleResolve","ranges":[{"startOffset":30546,"endOffset":31337,"count":0}],"isBlockCoverage":false},{"functionName":"resolveAsCommonJS","ranges":[{"startOffset":31483,"endOffset":32940,"count":0}],"isBlockCoverage":false},{"functionName":"checkIfDisallowedImport","ranges":[{"startOffset":33002,"endOffset":34194,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfUnsupportedURLProtocol","ranges":[{"startOffset":34196,"endOffset":34394,"count":0}],"isBlockCoverage":false},{"functionName":"throwIfUnsupportedURLScheme","ranges":[{"startOffset":34396,"endOffset":34911,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":34913,"endOffset":38850,"count":0}],"isBlockCoverage":false},{"functionName":"defaultResolve","ranges":[{"startOffset":39216,"endOffset":39616,"count":0}],"isBlockCoverage":false}]},{"scriptId":"456","url":"node:internal/modules/esm/package_config","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3627,"count":1}],"isBlockCoverage":false},{"functionName":"getPackageConfig","ranges":[{"startOffset":883,"endOffset":2391,"count":0}],"isBlockCoverage":false},{"functionName":"getPackageScopeConfig","ranges":[{"startOffset":2464,"endOffset":3557,"count":0}],"isBlockCoverage":false}]},{"scriptId":"457","url":"node:internal/modules/esm/get_format","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4148,"count":1}],"isBlockCoverage":false},{"functionName":"node:","ranges":[{"startOffset":1080,"endOffset":1111,"count":0}],"isBlockCoverage":false},{"functionName":"getDataProtocolModuleFormat","ranges":[{"startOffset":1176,"endOffset":1392,"count":0}],"isBlockCoverage":false},{"functionName":"getFileProtocolModuleFormat","ranges":[{"startOffset":1516,"endOffset":2857,"count":0}],"isBlockCoverage":false},{"functionName":"getHttpProtocolModuleFormat","ranges":[{"startOffset":2993,"endOffset":3263,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormatWithoutErrors","ranges":[{"startOffset":3422,"endOffset":3666,"count":0}],"isBlockCoverage":false},{"functionName":"defaultGetFormat","ranges":[{"startOffset":3825,"endOffset":4049,"count":0}],"isBlockCoverage":false}]},{"scriptId":"458","url":"node:internal/modules/esm/fetch_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7825,"count":1}],"isBlockCoverage":false},{"functionName":"HTTPSGet","ranges":[{"startOffset":1468,"endOffset":1678,"count":0}],"isBlockCoverage":false},{"functionName":"HTTPGet","ranges":[{"startOffset":1695,"endOffset":1898,"count":0}],"isBlockCoverage":false},{"functionName":"dnsLookup","ranges":[{"startOffset":1900,"endOffset":2057,"count":0}],"isBlockCoverage":false},{"functionName":"createBrotliDecompress","ranges":[{"startOffset":2069,"endOffset":2277,"count":0}],"isBlockCoverage":false},{"functionName":"createUnzip","ranges":[{"startOffset":2279,"endOffset":2443,"count":0}],"isBlockCoverage":false},{"functionName":"isRedirect","ranges":[{"startOffset":2691,"endOffset":2997,"count":0}],"isBlockCoverage":false},{"functionName":"fetchWithRedirects","ranges":[{"startOffset":3077,"endOffset":5937,"count":0}],"isBlockCoverage":false},{"functionName":"isLocalAddress","ranges":[{"startOffset":6297,"endOffset":6758,"count":0}],"isBlockCoverage":false},{"functionName":"fetchModule","ranges":[{"startOffset":7216,"endOffset":7786,"count":0}],"isBlockCoverage":false}]},{"scriptId":"459","url":"node:net","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":61939,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1538,"endOffset":1563,"count":0}],"isBlockCoverage":false},{"functionName":"noop","ranges":[{"startOffset":3873,"endOffset":3881,"count":0}],"isBlockCoverage":false},{"functionName":"lazyChannels","ranges":[{"startOffset":4016,"endOffset":4572,"count":0}],"isBlockCoverage":false},{"functionName":"getFlags","ranges":[{"startOffset":4661,"endOffset":4755,"count":0}],"isBlockCoverage":false},{"functionName":"createHandle","ranges":[{"startOffset":4757,"endOffset":5138,"count":0}],"isBlockCoverage":false},{"functionName":"getNewAsyncId","ranges":[{"startOffset":5141,"endOffset":5279,"count":4},{"startOffset":5236,"endOffset":5254,"count":0}],"isBlockCoverage":true},{"functionName":"isPipeName","ranges":[{"startOffset":5282,"endOffset":5365,"count":0}],"isBlockCoverage":false},{"functionName":"createServer","ranges":[{"startOffset":5566,"endOffset":5670,"count":0}],"isBlockCoverage":false},{"functionName":"connect","ranges":[{"startOffset":5893,"endOffset":6311,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeArgs","ranges":[{"startOffset":6806,"endOffset":7532,"count":0}],"isBlockCoverage":false},{"functionName":"initSocketHandle","ranges":[{"startOffset":7604,"endOffset":8207,"count":2},{"startOffset":7960,"endOffset":8201,"count":0}],"isBlockCoverage":true},{"functionName":"closeSocketHandle","ranges":[{"startOffset":8209,"endOffset":8549,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":8801,"endOffset":13340,"count":2},{"startOffset":8861,"endOffset":8888,"count":0},{"startOffset":8916,"endOffset":9044,"count":0},{"startOffset":9114,"endOffset":9361,"count":0},{"startOffset":9423,"endOffset":9618,"count":0},{"startOffset":10180,"endOffset":10206,"count":0},{"startOffset":10720,"endOffset":11959,"count":0},{"startOffset":12046,"endOffset":12123,"count":0},{"startOffset":12124,"endOffset":12170,"count":0},{"startOffset":12172,"endOffset":12387,"count":0},{"startOffset":12955,"endOffset":13124,"count":0},{"startOffset":13156,"endOffset":13183,"count":0}],"isBlockCoverage":true},{"functionName":"_unrefTimer","ranges":[{"startOffset":13513,"endOffset":13643,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._final","ranges":[{"startOffset":13763,"endOffset":14379,"count":0}],"isBlockCoverage":false},{"functionName":"afterShutdown","ranges":[{"startOffset":14382,"endOffset":14528,"count":0}],"isBlockCoverage":false},{"functionName":"writeAfterFIN","ranges":[{"startOffset":14735,"endOffset":15242,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._onTimeout","ranges":[{"startOffset":15324,"endOffset":15828,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setNoDelay","ranges":[{"startOffset":15862,"endOffset":16239,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setKeepAlive","ranges":[{"startOffset":16275,"endOffset":16881,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":16912,"endOffset":16956,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17042,"endOffset":17086,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17165,"endOffset":17221,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17331,"endOffset":17646,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17734,"endOffset":17814,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":17901,"endOffset":17946,"count":0}],"isBlockCoverage":false},{"functionName":"tryReadStart","ranges":[{"startOffset":17953,"endOffset":18199,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._read","ranges":[{"startOffset":18291,"endOffset":18520,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.end","ranges":[{"startOffset":18547,"endOffset":18734,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resetAndDestroy","ranges":[{"startOffset":18772,"endOffset":19122,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.pause","ranges":[{"startOffset":19150,"endOffset":19484,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.resume","ranges":[{"startOffset":19514,"endOffset":19698,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.read","ranges":[{"startOffset":19726,"endOffset":19912,"count":0}],"isBlockCoverage":false},{"functionName":"onReadableStreamEnd","ranges":[{"startOffset":19959,"endOffset":20058,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.destroySoon","ranges":[{"startOffset":20092,"endOffset":20239,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._destroy","ranges":[{"startOffset":20271,"endOffset":21781,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._reset","ranges":[{"startOffset":21810,"endOffset":21909,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getpeername","ranges":[{"startOffset":21944,"endOffset":22241,"count":0}],"isBlockCoverage":false},{"functionName":"protoGetter","ranges":[{"startOffset":22244,"endOffset":22425,"count":9}],"isBlockCoverage":true},{"functionName":"bytesRead","ranges":[{"startOffset":22452,"endOffset":22543,"count":0}],"isBlockCoverage":false},{"functionName":"remoteAddress","ranges":[{"startOffset":22576,"endOffset":22642,"count":0}],"isBlockCoverage":false},{"functionName":"remoteFamily","ranges":[{"startOffset":22674,"endOffset":22738,"count":0}],"isBlockCoverage":false},{"functionName":"remotePort","ranges":[{"startOffset":22768,"endOffset":22828,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._getsockname","ranges":[{"startOffset":22865,"endOffset":23141,"count":0}],"isBlockCoverage":false},{"functionName":"localAddress","ranges":[{"startOffset":23173,"endOffset":23238,"count":0}],"isBlockCoverage":false},{"functionName":"localPort","ranges":[{"startOffset":23268,"endOffset":23327,"count":0}],"isBlockCoverage":false},{"functionName":"localFamily","ranges":[{"startOffset":23358,"endOffset":23421,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.<computed>","ranges":[{"startOffset":23462,"endOffset":23509,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writeGeneric","ranges":[{"startOffset":23545,"endOffset":24457,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._writev","ranges":[{"startOffset":24488,"endOffset":24556,"count":0}],"isBlockCoverage":false},{"functionName":"Socket._write","ranges":[{"startOffset":24586,"endOffset":24667,"count":0}],"isBlockCoverage":false},{"functionName":"_bytesDispatched","ranges":[{"startOffset":24860,"endOffset":24964,"count":0}],"isBlockCoverage":false},{"functionName":"bytesWritten","ranges":[{"startOffset":24996,"endOffset":25925,"count":0}],"isBlockCoverage":false},{"functionName":"checkBindError","ranges":[{"startOffset":25930,"endOffset":26729,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnect","ranges":[{"startOffset":26732,"endOffset":28619,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultiple","ranges":[{"startOffset":28622,"endOffset":30667,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":30696,"endOffset":32146,"count":0}],"isBlockCoverage":false},{"functionName":"socketToDnsFamily","ranges":[{"startOffset":32149,"endOffset":32295,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnect","ranges":[{"startOffset":32297,"endOffset":36001,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndConnectMultiple","ranges":[{"startOffset":36003,"endOffset":38997,"count":0}],"isBlockCoverage":false},{"functionName":"connectErrorNT","ranges":[{"startOffset":38999,"endOffset":39058,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":39084,"endOffset":39271,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":39300,"endOffset":39493,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnect","ranges":[{"startOffset":39497,"endOffset":41078,"count":0}],"isBlockCoverage":false},{"functionName":"afterConnectMultiple","ranges":[{"startOffset":41080,"endOffset":42780,"count":0}],"isBlockCoverage":false},{"functionName":"internalConnectMultipleTimeout","ranges":[{"startOffset":42782,"endOffset":42912,"count":0}],"isBlockCoverage":false},{"functionName":"addAbortSignalOption","ranges":[{"startOffset":42914,"endOffset":43354,"count":0}],"isBlockCoverage":false},{"functionName":"Server","ranges":[{"startOffset":43356,"endOffset":44627,"count":0}],"isBlockCoverage":false},{"functionName":"toNumber","ranges":[{"startOffset":44738,"endOffset":44803,"count":0}],"isBlockCoverage":false},{"functionName":"createServerHandle","ranges":[{"startOffset":44871,"endOffset":46323,"count":0}],"isBlockCoverage":false},{"functionName":"setupListenHandle","ranges":[{"startOffset":46325,"endOffset":48676,"count":0}],"isBlockCoverage":false},{"functionName":"emitErrorNT","ranges":[{"startOffset":48743,"endOffset":48805,"count":0}],"isBlockCoverage":false},{"functionName":"emitListeningNT","ranges":[{"startOffset":48808,"endOffset":48923,"count":0}],"isBlockCoverage":false},{"functionName":"listenInCluster","ranges":[{"startOffset":48926,"endOffset":50186,"count":0}],"isBlockCoverage":false},{"functionName":"Server.listen","ranges":[{"startOffset":50215,"endOffset":54041,"count":0}],"isBlockCoverage":false},{"functionName":"lookupAndListen","ranges":[{"startOffset":54044,"endOffset":54456,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":54538,"endOffset":54581,"count":0}],"isBlockCoverage":false},{"functionName":"Server.address","ranges":[{"startOffset":54656,"endOffset":54945,"count":0}],"isBlockCoverage":false},{"functionName":"onconnection","ranges":[{"startOffset":54948,"endOffset":56808,"count":0}],"isBlockCoverage":false},{"functionName":"Server.getConnections","ranges":[{"startOffset":56957,"endOffset":57710,"count":0}],"isBlockCoverage":false},{"functionName":"Server.close","ranges":[{"startOffset":57739,"endOffset":58606,"count":0}],"isBlockCoverage":false},{"functionName":"Server._emitCloseIfDrained","ranges":[{"startOffset":58648,"endOffset":59034,"count":0}],"isBlockCoverage":false},{"functionName":"emitCloseNT","ranges":[{"startOffset":59038,"endOffset":59121,"count":0}],"isBlockCoverage":false},{"functionName":"Server.<computed>","ranges":[{"startOffset":59180,"endOffset":59342,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":59564,"endOffset":59600,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":59604,"endOffset":59645,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":59724,"endOffset":59755,"count":16}],"isBlockCoverage":true},{"functionName":"set","ranges":[{"startOffset":59759,"endOffset":59795,"count":2}],"isBlockCoverage":true},{"functionName":"Server._setupWorker","ranges":[{"startOffset":59833,"endOffset":60074,"count":0}],"isBlockCoverage":false},{"functionName":"Server.ref","ranges":[{"startOffset":60100,"endOffset":60198,"count":0}],"isBlockCoverage":false},{"functionName":"Server.unref","ranges":[{"startOffset":60226,"endOffset":60325,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":60467,"endOffset":61136,"count":0}],"isBlockCoverage":false},{"functionName":"_setSimultaneousAccepts","ranges":[{"startOffset":61175,"endOffset":61416,"count":0}],"isBlockCoverage":false},{"functionName":"get BlockList","ranges":[{"startOffset":61545,"endOffset":61647,"count":1}],"isBlockCoverage":true},{"functionName":"get SocketAddress","ranges":[{"startOffset":61651,"endOffset":61773,"count":0}],"isBlockCoverage":false}]},{"scriptId":"460","url":"node:internal/dtrace","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":568,"count":1}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_REQUEST","ranges":[{"startOffset":97,"endOffset":105,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_CLIENT_RESPONSE","ranges":[{"startOffset":139,"endOffset":147,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_REQUEST","ranges":[{"startOffset":180,"endOffset":188,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_HTTP_SERVER_RESPONSE","ranges":[{"startOffset":222,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_SERVER_CONNECTION","ranges":[{"startOffset":265,"endOffset":273,"count":0}],"isBlockCoverage":false},{"functionName":"DTRACE_NET_STREAM_END","ranges":[{"startOffset":301,"endOffset":309,"count":0}],"isBlockCoverage":false}]},{"scriptId":"461","url":"node:internal/blocklist","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3877,"count":1}],"isBlockCoverage":false},{"functionName":"BlockList","ranges":[{"startOffset":764,"endOffset":879,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":883,"endOffset":1135,"count":0}],"isBlockCoverage":false},{"functionName":"addAddress","ranges":[{"startOffset":1139,"endOffset":1460,"count":1}],"isBlockCoverage":true},{"functionName":"addRange","ranges":[{"startOffset":1464,"endOffset":2142,"count":1},{"startOffset":2066,"endOffset":2138,"count":0}],"isBlockCoverage":true},{"functionName":"addSubnet","ranges":[{"startOffset":2146,"endOffset":2691,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":2695,"endOffset":3160,"count":0}],"isBlockCoverage":false},{"functionName":"get rules","ranges":[{"startOffset":3164,"endOffset":3218,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3222,"endOffset":3379,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3383,"endOffset":3483,"count":0}],"isBlockCoverage":false},{"functionName":"InternalBlockList","ranges":[{"startOffset":3538,"endOffset":3669,"count":0}],"isBlockCoverage":false}]},{"scriptId":"462","url":"node:internal/socketaddress","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3387,"count":1}],"isBlockCoverage":false},{"functionName":"isSocketAddress","ranges":[{"startOffset":743,"endOffset":814,"count":3}],"isBlockCoverage":true},{"functionName":"SocketAddress","ranges":[{"startOffset":818,"endOffset":1787,"count":3},{"startOffset":995,"endOffset":1008,"count":0},{"startOffset":1009,"endOffset":1015,"count":0},{"startOffset":1203,"endOffset":1254,"count":2},{"startOffset":1261,"endOffset":1313,"count":1},{"startOffset":1320,"endOffset":1403,"count":0}],"isBlockCoverage":true},{"functionName":"get address","ranges":[{"startOffset":1791,"endOffset":1844,"count":0}],"isBlockCoverage":false},{"functionName":"get port","ranges":[{"startOffset":1848,"endOffset":1895,"count":0}],"isBlockCoverage":false},{"functionName":"get family","ranges":[{"startOffset":1899,"endOffset":1980,"count":0}],"isBlockCoverage":false},{"functionName":"get flowlabel","ranges":[{"startOffset":1984,"endOffset":2092,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2096,"endOffset":2334,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2338,"endOffset":2503,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2507,"endOffset":2713,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2717,"endOffset":2863,"count":0}],"isBlockCoverage":false},{"functionName":"InternalSocketAddress","ranges":[{"startOffset":2922,"endOffset":3142,"count":0}],"isBlockCoverage":false}]},{"scriptId":"463","url":"node:internal/modules/esm/formats","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1199,"count":1}],"isBlockCoverage":false},{"functionName":"mimeToFormat","ranges":[{"startOffset":674,"endOffset":997,"count":0}],"isBlockCoverage":false},{"functionName":"getLegacyExtensionFormat","ranges":[{"startOffset":999,"endOffset":1081,"count":0}],"isBlockCoverage":false}]},{"scriptId":"464","url":"node:internal/modules/esm/initialize_import_meta","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":980,"count":1}],"isBlockCoverage":false},{"functionName":"createImportMetaResolve","ranges":[{"startOffset":289,"endOffset":660,"count":0}],"isBlockCoverage":false},{"functionName":"initializeImportMeta","ranges":[{"startOffset":728,"endOffset":933,"count":0}],"isBlockCoverage":false}]},{"scriptId":"465","url":"node:internal/modules/esm/load","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2783,"count":1}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":976,"endOffset":2078,"count":0}],"isBlockCoverage":false},{"functionName":"defaultLoad","ranges":[{"startOffset":2190,"endOffset":2744,"count":0}],"isBlockCoverage":false}]},{"scriptId":"466","url":"node:internal/fs/promises","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":25285,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCpPromises","ranges":[{"startOffset":2906,"endOffset":2998,"count":0}],"isBlockCoverage":false},{"functionName":"lazyFsStreams","ranges":[{"startOffset":3060,"endOffset":3143,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":3145,"endOffset":7969,"count":20}],"isBlockCoverage":false},{"functionName":"FileHandle","ranges":[{"startOffset":3286,"endOffset":3463,"count":20},{"startOffset":3400,"endOffset":3404,"count":0}],"isBlockCoverage":true},{"functionName":"getAsyncId","ranges":[{"startOffset":3467,"endOffset":3524,"count":0}],"isBlockCoverage":false},{"functionName":"get fd","ranges":[{"startOffset":3528,"endOffset":3564,"count":40}],"isBlockCoverage":true},{"functionName":"appendFile","ranges":[{"startOffset":3568,"endOffset":3650,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":3654,"endOffset":3710,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":3714,"endOffset":3778,"count":0}],"isBlockCoverage":false},{"functionName":"datasync","ranges":[{"startOffset":3782,"endOffset":3834,"count":0}],"isBlockCoverage":false},{"functionName":"sync","ranges":[{"startOffset":3838,"endOffset":3882,"count":0}],"isBlockCoverage":false},{"functionName":"read","ranges":[{"startOffset":3886,"endOffset":3995,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":3999,"endOffset":4080,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":4084,"endOffset":4151,"count":0}],"isBlockCoverage":false},{"functionName":"readLines","ranges":[{"startOffset":4155,"endOffset":4298,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":4302,"endOffset":4362,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":4366,"endOffset":4430,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":4434,"endOffset":4508,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":4512,"endOffset":4623,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":4627,"endOffset":4710,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":4714,"endOffset":4795,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":4807,"endOffset":5597,"count":20},{"startOffset":4841,"endOffset":4879,"count":0},{"startOffset":4910,"endOffset":4951,"count":0},{"startOffset":5176,"endOffset":5536,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5119,"endOffset":5161,"count":20}],"isBlockCoverage":true},{"functionName":"<computed>.SafePromisePrototypeFinally.<computed>","ranges":[{"startOffset":5261,"endOffset":5373,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5376,"endOffset":5521,"count":0}],"isBlockCoverage":false},{"functionName":"readableWebStream","ranges":[{"startOffset":5736,"endOffset":6307,"count":0}],"isBlockCoverage":false},{"functionName":"createReadStream","ranges":[{"startOffset":6605,"endOffset":6756,"count":0}],"isBlockCoverage":false},{"functionName":"createWriteStream","ranges":[{"startOffset":7005,"endOffset":7159,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7163,"endOffset":7562,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7566,"endOffset":7619,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7623,"endOffset":7710,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7714,"endOffset":7747,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7751,"endOffset":7967,"count":0}],"isBlockCoverage":false},{"functionName":"handleFdClose","ranges":[{"startOffset":7971,"endOffset":8340,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8082,"endOffset":8141,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8128,"endOffset":8140,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8147,"endOffset":8333,"count":0}],"isBlockCoverage":false},{"functionName":"fsCall","ranges":[{"startOffset":8342,"endOffset":8802,"count":0}],"isBlockCoverage":false},{"functionName":"checkAborted","ranges":[{"startOffset":8804,"endOffset":8924,"count":80},{"startOffset":8848,"endOffset":8857,"count":0},{"startOffset":8863,"endOffset":8922,"count":0}],"isBlockCoverage":true},{"functionName":"writeFileHandle","ranges":[{"startOffset":8926,"endOffset":10067,"count":0}],"isBlockCoverage":false},{"functionName":"readFileHandle","ranges":[{"startOffset":10069,"endOffset":12208,"count":20},{"startOffset":10570,"endOffset":10576,"count":0},{"startOffset":10602,"endOffset":10650,"count":0},{"startOffset":10683,"endOffset":10721,"count":0},{"startOffset":10963,"endOffset":11035,"count":0},{"startOffset":11179,"endOffset":11183,"count":0},{"startOffset":11268,"endOffset":11324,"count":0},{"startOffset":11418,"endOffset":11429,"count":0},{"startOffset":11486,"endOffset":11546,"count":0},{"startOffset":11569,"endOffset":11751,"count":0},{"startOffset":11826,"endOffset":12202,"count":0}],"isBlockCoverage":true},{"functionName":"access","ranges":[{"startOffset":12361,"endOffset":12582,"count":0}],"isBlockCoverage":false},{"functionName":"cp","ranges":[{"startOffset":12584,"endOffset":12853,"count":0}],"isBlockCoverage":false},{"functionName":"copyFile","ranges":[{"startOffset":12855,"endOffset":13213,"count":0}],"isBlockCoverage":false},{"functionName":"open","ranges":[{"startOffset":13333,"endOffset":13658,"count":20}],"isBlockCoverage":true},{"functionName":"read","ranges":[{"startOffset":13660,"endOffset":14882,"count":0}],"isBlockCoverage":false},{"functionName":"readv","ranges":[{"startOffset":14884,"endOffset":15204,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":15206,"endOffset":16413,"count":0}],"isBlockCoverage":false},{"functionName":"writev","ranges":[{"startOffset":16415,"endOffset":16823,"count":0}],"isBlockCoverage":false},{"functionName":"rename","ranges":[{"startOffset":16825,"endOffset":17131,"count":0}],"isBlockCoverage":false},{"functionName":"truncate","ranges":[{"startOffset":17133,"endOffset":17266,"count":0}],"isBlockCoverage":false},{"functionName":"ftruncate","ranges":[{"startOffset":17268,"endOffset":17427,"count":0}],"isBlockCoverage":false},{"functionName":"rm","ranges":[{"startOffset":17429,"endOffset":17633,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":17635,"endOffset":18006,"count":0}],"isBlockCoverage":false},{"functionName":"fdatasync","ranges":[{"startOffset":18008,"endOffset":18097,"count":0}],"isBlockCoverage":false},{"functionName":"fsync","ranges":[{"startOffset":18099,"endOffset":18180,"count":0}],"isBlockCoverage":false},{"functionName":"mkdir","ranges":[{"startOffset":18182,"endOffset":18658,"count":1},{"startOffset":18286,"endOffset":18324,"count":0},{"startOffset":18389,"endOffset":18404,"count":0}],"isBlockCoverage":true},{"functionName":"readdir","ranges":[{"startOffset":18660,"endOffset":19108,"count":0}],"isBlockCoverage":false},{"functionName":"readlink","ranges":[{"startOffset":19110,"endOffset":19349,"count":0}],"isBlockCoverage":false},{"functionName":"symlink","ranges":[{"startOffset":19351,"endOffset":19764,"count":0}],"isBlockCoverage":false},{"functionName":"fstat","ranges":[{"startOffset":19766,"endOffset":19944,"count":0}],"isBlockCoverage":false},{"functionName":"lstat","ranges":[{"startOffset":19946,"endOffset":20216,"count":0}],"isBlockCoverage":false},{"functionName":"stat","ranges":[{"startOffset":20218,"endOffset":20485,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":20487,"endOffset":20810,"count":0}],"isBlockCoverage":false},{"functionName":"unlink","ranges":[{"startOffset":20812,"endOffset":20950,"count":0}],"isBlockCoverage":false},{"functionName":"fchmod","ranges":[{"startOffset":20952,"endOffset":21085,"count":0}],"isBlockCoverage":false},{"functionName":"chmod","ranges":[{"startOffset":21087,"endOffset":21273,"count":0}],"isBlockCoverage":false},{"functionName":"lchmod","ranges":[{"startOffset":21275,"endOffset":21503,"count":0}],"isBlockCoverage":false},{"functionName":"lchown","ranges":[{"startOffset":21505,"endOffset":21781,"count":0}],"isBlockCoverage":false},{"functionName":"fchown","ranges":[{"startOffset":21783,"endOffset":21980,"count":0}],"isBlockCoverage":false},{"functionName":"chown","ranges":[{"startOffset":21982,"endOffset":22255,"count":0}],"isBlockCoverage":false},{"functionName":"utimes","ranges":[{"startOffset":22257,"endOffset":22529,"count":0}],"isBlockCoverage":false},{"functionName":"futimes","ranges":[{"startOffset":22531,"endOffset":22730,"count":0}],"isBlockCoverage":false},{"functionName":"lutimes","ranges":[{"startOffset":22732,"endOffset":23009,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":23011,"endOffset":23184,"count":0}],"isBlockCoverage":false},{"functionName":"mkdtemp","ranges":[{"startOffset":23186,"endOffset":23434,"count":0}],"isBlockCoverage":false},{"functionName":"writeFile","ranges":[{"startOffset":23436,"endOffset":24120,"count":0}],"isBlockCoverage":false},{"functionName":"isCustomIterable","ranges":[{"startOffset":24122,"endOffset":24236,"count":0}],"isBlockCoverage":false},{"functionName":"appendFile","ranges":[{"startOffset":24238,"endOffset":24479,"count":0}],"isBlockCoverage":false},{"functionName":"readFile","ranges":[{"startOffset":24481,"endOffset":24825,"count":20},{"startOffset":24598,"endOffset":24604,"count":0},{"startOffset":24645,"endOffset":24682,"count":0}],"isBlockCoverage":true}]},{"scriptId":"467","url":"node:internal/fs/rimraf","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7453,"count":1}],"isBlockCoverage":false},{"functionName":"rimraf","ranges":[{"startOffset":1174,"endOffset":1634,"count":0}],"isBlockCoverage":false},{"functionName":"_rimraf","ranges":[{"startOffset":1637,"endOffset":2495,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":2498,"endOffset":2933,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdir","ranges":[{"startOffset":2936,"endOffset":3234,"count":0}],"isBlockCoverage":false},{"functionName":"_rmchildren","ranges":[{"startOffset":3237,"endOffset":3924,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafPromises","ranges":[{"startOffset":3927,"endOffset":4125,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":4128,"endOffset":4811,"count":0}],"isBlockCoverage":false},{"functionName":"_unlinkSync","ranges":[{"startOffset":4814,"endOffset":5443,"count":0}],"isBlockCoverage":false},{"functionName":"_rmdirSync","ranges":[{"startOffset":5446,"endOffset":6943,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":6946,"endOffset":7393,"count":0}],"isBlockCoverage":false}]},{"scriptId":"468","url":"node:internal/readline/interface","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":39480,"count":1}],"isBlockCoverage":false},{"functionName":"InterfaceConstructor","ranges":[{"startOffset":3762,"endOffset":9424,"count":0}],"isBlockCoverage":false},{"functionName":"Interface","ranges":[{"startOffset":9665,"endOffset":9765,"count":0}],"isBlockCoverage":false},{"functionName":"get columns","ranges":[{"startOffset":9768,"endOffset":9880,"count":0}],"isBlockCoverage":false},{"functionName":"setPrompt","ranges":[{"startOffset":9989,"endOffset":10040,"count":0}],"isBlockCoverage":false},{"functionName":"getPrompt","ranges":[{"startOffset":10134,"endOffset":10177,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10181,"endOffset":10372,"count":0}],"isBlockCoverage":false},{"functionName":"prompt","ranges":[{"startOffset":10511,"endOffset":10765,"count":0}],"isBlockCoverage":false},{"functionName":"question","ranges":[{"startOffset":10769,"endOffset":11073,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11077,"endOffset":11319,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11323,"endOffset":11410,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11414,"endOffset":11582,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11586,"endOffset":11783,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":11787,"endOffset":12965,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":12969,"endOffset":13974,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":14058,"endOffset":14229,"count":0}],"isBlockCoverage":false},{"functionName":"pause","ranges":[{"startOffset":14310,"endOffset":14441,"count":0}],"isBlockCoverage":false},{"functionName":"resume","ranges":[{"startOffset":14533,"endOffset":14669,"count":0}],"isBlockCoverage":false},{"functionName":"write","ranges":[{"startOffset":14940,"endOffset":15099,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15103,"endOffset":16749,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16753,"endOffset":17421,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17425,"endOffset":17824,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":17828,"endOffset":20034,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20038,"endOffset":20498,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20502,"endOffset":20760,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20764,"endOffset":21246,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21250,"endOffset":21730,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21734,"endOffset":22492,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22496,"endOffset":22923,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22927,"endOffset":23205,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23209,"endOffset":23467,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23471,"endOffset":23731,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23735,"endOffset":23890,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":23894,"endOffset":24569,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":24573,"endOffset":24722,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24726,"endOffset":24880,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24884,"endOffset":25071,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25075,"endOffset":25383,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25387,"endOffset":25695,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26130,"endOffset":26764,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26768,"endOffset":27476,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27551,"endOffset":28491,"count":0}],"isBlockCoverage":false},{"functionName":"getCursorPos","ranges":[{"startOffset":28668,"endOffset":28837,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":28956,"endOffset":29513,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":29550,"endOffset":37586,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":37894,"endOffset":38912,"count":0}],"isBlockCoverage":false}]},{"scriptId":"469","url":"node:internal/readline/utils","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11900,"count":1}],"isBlockCoverage":false},{"functionName":"CSI","ranges":[{"startOffset":385,"endOffset":579,"count":4},{"startOffset":544,"endOffset":559,"count":0}],"isBlockCoverage":true},{"functionName":"charLengthLeft","ranges":[{"startOffset":958,"endOffset":1220,"count":0}],"isBlockCoverage":false},{"functionName":"charLengthAt","ranges":[{"startOffset":1222,"endOffset":1484,"count":0}],"isBlockCoverage":false},{"functionName":"emitKeys","ranges":[{"startOffset":2213,"endOffset":11345,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefix","ranges":[{"startOffset":11375,"endOffset":11788,"count":0}],"isBlockCoverage":false}]},{"scriptId":"470","url":"node:internal/readline/callbacks","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2754,"count":1}],"isBlockCoverage":false},{"functionName":"cursorTo","ranges":[{"startOffset":460,"endOffset":1146,"count":0}],"isBlockCoverage":false},{"functionName":"moveCursor","ranges":[{"startOffset":1210,"endOffset":1722,"count":0}],"isBlockCoverage":false},{"functionName":"clearLine","ranges":[{"startOffset":1869,"endOffset":2272,"count":0}],"isBlockCoverage":false},{"functionName":"clearScreenDown","ranges":[{"startOffset":2349,"endOffset":2672,"count":0}],"isBlockCoverage":false}]},{"scriptId":"471","url":"node:internal/modules/esm/translators","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10731,"count":1}],"isBlockCoverage":false},{"functionName":"lazyTypes","ranges":[{"startOffset":381,"endOffset":493,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1021,"endOffset":1046,"count":0}],"isBlockCoverage":false},{"functionName":"initCJSParse","ranges":[{"startOffset":1581,"endOffset":1979,"count":0}],"isBlockCoverage":false},{"functionName":"assertBufferSource","ranges":[{"startOffset":2113,"endOffset":2533,"count":0}],"isBlockCoverage":false},{"functionName":"stringify","ranges":[{"startOffset":2535,"endOffset":2753,"count":0}],"isBlockCoverage":false},{"functionName":"errPath","ranges":[{"startOffset":2755,"endOffset":2900,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamically","ranges":[{"startOffset":2902,"endOffset":3040,"count":0}],"isBlockCoverage":false},{"functionName":"moduleStrategy","ranges":[{"startOffset":3122,"endOffset":3570,"count":0}],"isBlockCoverage":false},{"functionName":"enrichCJSError","ranges":[{"startOffset":3737,"endOffset":4275,"count":0}],"isBlockCoverage":false},{"functionName":"commonjsStrategy","ranges":[{"startOffset":4406,"endOffset":5844,"count":0}],"isBlockCoverage":false},{"functionName":"cjsPreparseModuleExports","ranges":[{"startOffset":5848,"endOffset":7368,"count":0}],"isBlockCoverage":false},{"functionName":"builtinStrategy","ranges":[{"startOffset":7492,"endOffset":7875,"count":0}],"isBlockCoverage":false},{"functionName":"jsonStrategy","ranges":[{"startOffset":7939,"endOffset":9816,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":9882,"endOffset":10728,"count":0}],"isBlockCoverage":false}]},{"scriptId":"472","url":"node:internal/modules/esm/create_dynamic_module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1756,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":190,"endOffset":215,"count":0}],"isBlockCoverage":false},{"functionName":"createImport","ranges":[{"startOffset":219,"endOffset":409,"count":0}],"isBlockCoverage":false},{"functionName":"createExport","ranges":[{"startOffset":411,"endOffset":612,"count":0}],"isBlockCoverage":false},{"functionName":"createDynamicModule","ranges":[{"startOffset":642,"endOffset":1715,"count":0}],"isBlockCoverage":false}]},{"scriptId":"473","url":"node:internal/vm/module","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12080,"count":1}],"isBlockCoverage":false},{"functionName":"Module","ranges":[{"startOffset":1736,"endOffset":3842,"count":0}],"isBlockCoverage":false},{"functionName":"get identifier","ranges":[{"startOffset":3846,"endOffset":3983,"count":0}],"isBlockCoverage":false},{"functionName":"get context","ranges":[{"startOffset":3987,"endOffset":4120,"count":0}],"isBlockCoverage":false},{"functionName":"get namespace","ranges":[{"startOffset":4124,"endOffset":4401,"count":0}],"isBlockCoverage":false},{"functionName":"get status","ranges":[{"startOffset":4405,"endOffset":4558,"count":0}],"isBlockCoverage":false},{"functionName":"get error","ranges":[{"startOffset":4562,"endOffset":4812,"count":0}],"isBlockCoverage":false},{"functionName":"link","ranges":[{"startOffset":4816,"endOffset":5221,"count":0}],"isBlockCoverage":false},{"functionName":"evaluate","ranges":[{"startOffset":5225,"endOffset":5977,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5981,"endOffset":6731,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":6836,"endOffset":9993,"count":0}],"isBlockCoverage":false},{"functionName":"SyntheticModule","ranges":[{"startOffset":10036,"endOffset":11129,"count":0}],"isBlockCoverage":false},{"functionName":"setExport","ranges":[{"startOffset":11133,"endOffset":11435,"count":0}],"isBlockCoverage":false},{"functionName":"importModuleDynamicallyWrap","ranges":[{"startOffset":11439,"endOffset":11918,"count":99}],"isBlockCoverage":true},{"functionName":"importModuleDynamicallyWrapper","ranges":[{"startOffset":11544,"endOffset":11874,"count":0}],"isBlockCoverage":false},{"functionName":"getModuleFromWrap","ranges":[{"startOffset":12040,"endOffset":12075,"count":0}],"isBlockCoverage":false}]},{"scriptId":"474","url":"node:internal/modules/run_main","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2700,"count":1}],"isBlockCoverage":false},{"functionName":"resolveMainPath","ranges":[{"startOffset":374,"endOffset":812,"count":1},{"startOffset":641,"endOffset":648,"count":0}],"isBlockCoverage":true},{"functionName":"shouldUseESMLoader","ranges":[{"startOffset":814,"endOffset":1564,"count":1},{"startOffset":1101,"endOffset":1113,"count":0},{"startOffset":1261,"endOffset":1273,"count":0},{"startOffset":1384,"endOffset":1396,"count":0},{"startOffset":1463,"endOffset":1476,"count":0}],"isBlockCoverage":true},{"functionName":"runMainESM","ranges":[{"startOffset":1566,"endOffset":1925,"count":0}],"isBlockCoverage":false},{"functionName":"handleMainPromise","ranges":[{"startOffset":1927,"endOffset":2109,"count":0}],"isBlockCoverage":false},{"functionName":"executeUserEntryPoint","ranges":[{"startOffset":2295,"endOffset":2630,"count":1},{"startOffset":2475,"endOffset":2518,"count":0}],"isBlockCoverage":true}]},{"scriptId":"475","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/c8/bin/c8.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1325,"count":1}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":446,"endOffset":1247,"count":1},{"startOffset":540,"endOffset":602,"count":0},{"startOffset":758,"endOffset":823,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1067,"endOffset":1240,"count":1},{"startOffset":1138,"endOffset":1221,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1261,"endOffset":1323,"count":0}],"isBlockCoverage":false}]},{"scriptId":"476","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/foreground-child/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3382,"count":1},{"startOffset":112,"endOffset":136,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeFgArgs","ranges":[{"startOffset":423,"endOffset":922,"count":1},{"startOffset":657,"endOffset":695,"count":0},{"startOffset":770,"endOffset":889,"count":0}],"isBlockCoverage":true},{"functionName":"cb","ranges":[{"startOffset":674,"endOffset":690,"count":0}],"isBlockCoverage":false},{"functionName":"foregroundChild","ranges":[{"startOffset":1133,"endOffset":2781,"count":1},{"startOffset":1290,"endOffset":1327,"count":0},{"startOffset":2518,"endOffset":2763,"count":0}],"isBlockCoverage":true},{"functionName":"childHangup","ranges":[{"startOffset":1468,"endOffset":1522,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1544,"endOffset":2495,"count":1},{"startOffset":1671,"endOffset":1685,"count":0}],"isBlockCoverage":true},{"functionName":"doneCB","ranges":[{"startOffset":1735,"endOffset":2392,"count":1},{"startOffset":1759,"endOffset":1783,"count":0},{"startOffset":1894,"endOffset":2332,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2262,"endOffset":2276,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2587,"endOffset":2659,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2688,"endOffset":2758,"count":0}],"isBlockCoverage":false},{"functionName":"proxySignals","ranges":[{"startOffset":2983,"endOffset":3347,"count":1},{"startOffset":3096,"endOffset":3206,"count":13}],"isBlockCoverage":true},{"functionName":"listener","ranges":[{"startOffset":3119,"endOffset":3140,"count":0}],"isBlockCoverage":false},{"functionName":"unproxySignals","ranges":[{"startOffset":3217,"endOffset":3345,"count":1},{"startOffset":3291,"endOffset":3341,"count":13}],"isBlockCoverage":true}]},{"scriptId":"477","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/signal-exit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5708,"count":1},{"startOffset":778,"endOffset":844,"count":0},{"startOffset":1059,"endOffset":1089,"count":0},{"startOffset":1144,"endOffset":1195,"count":0}],"isBlockCoverage":true},{"functionName":"processOk","ranges":[{"startOffset":293,"endOffset":677,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":799,"endOffset":842,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":1703,"endOffset":2301,"count":0}],"isBlockCoverage":false},{"functionName":"unload","ranges":[{"startOffset":2318,"endOffset":2676,"count":0}],"isBlockCoverage":false},{"functionName":"emit","ranges":[{"startOffset":2724,"endOffset":2919,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3001,"endOffset":3890,"count":13}],"isBlockCoverage":true},{"functionName":"listener","ranges":[{"startOffset":3042,"endOffset":3886,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.signals","ranges":[{"startOffset":3920,"endOffset":3956,"count":1}],"isBlockCoverage":true},{"functionName":"load","ranges":[{"startOffset":3993,"endOffset":4602,"count":0}],"isBlockCoverage":false},{"functionName":"processReallyExit","ranges":[{"startOffset":4712,"endOffset":5108,"count":0}],"isBlockCoverage":false},{"functionName":"processEmit","ranges":[{"startOffset":5171,"endOffset":5705,"count":0}],"isBlockCoverage":false}]},{"scriptId":"478","url":"node:assert","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31783,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadComparison","ranges":[{"startOffset":2680,"endOffset":2864,"count":0}],"isBlockCoverage":false},{"functionName":"escapeFn","ranges":[{"startOffset":3445,"endOffset":3493,"count":0}],"isBlockCoverage":false},{"functionName":"innerFail","ranges":[{"startOffset":4047,"endOffset":4163,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":4324,"endOffset":5303,"count":0}],"isBlockCoverage":false},{"functionName":"findColumn","ranges":[{"startOffset":5419,"endOffset":6359,"count":0}],"isBlockCoverage":false},{"functionName":"getCode","ranges":[{"startOffset":6361,"endOffset":8006,"count":0}],"isBlockCoverage":false},{"functionName":"parseCode","ranges":[{"startOffset":8008,"endOffset":9312,"count":0}],"isBlockCoverage":false},{"functionName":"getErrMessage","ranges":[{"startOffset":9314,"endOffset":12533,"count":0}],"isBlockCoverage":false},{"functionName":"innerOk","ranges":[{"startOffset":12535,"endOffset":13142,"count":48},{"startOffset":12596,"endOffset":13140,"count":0}],"isBlockCoverage":true},{"functionName":"ok","ranges":[{"startOffset":13275,"endOffset":13336,"count":48}],"isBlockCoverage":true},{"functionName":"equal","ranges":[{"startOffset":13595,"endOffset":13966,"count":3},{"startOffset":13667,"endOffset":13726,"count":0},{"startOffset":13789,"endOffset":13840,"count":0},{"startOffset":13842,"endOffset":13964,"count":0}],"isBlockCoverage":true},{"functionName":"notEqual","ranges":[{"startOffset":14185,"endOffset":14560,"count":0}],"isBlockCoverage":false},{"functionName":"deepEqual","ranges":[{"startOffset":14760,"endOffset":15124,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepEqual","ranges":[{"startOffset":15330,"endOffset":15702,"count":0}],"isBlockCoverage":false},{"functionName":"deepStrictEqual","ranges":[{"startOffset":15945,"endOffset":16333,"count":0}],"isBlockCoverage":false},{"functionName":"notDeepStrictEqual","ranges":[{"startOffset":16582,"endOffset":16978,"count":0}],"isBlockCoverage":false},{"functionName":"strictEqual","ranges":[{"startOffset":17183,"endOffset":17495,"count":1},{"startOffset":17261,"endOffset":17320,"count":0},{"startOffset":17356,"endOffset":17493,"count":0}],"isBlockCoverage":true},{"functionName":"notStrictEqual","ranges":[{"startOffset":17707,"endOffset":18027,"count":6},{"startOffset":17788,"endOffset":17847,"count":0},{"startOffset":17882,"endOffset":18025,"count":0}],"isBlockCoverage":true},{"functionName":"Comparison","ranges":[{"startOffset":18051,"endOffset":18433,"count":0}],"isBlockCoverage":false},{"functionName":"compareExceptionKey","ranges":[{"startOffset":18437,"endOffset":19154,"count":0}],"isBlockCoverage":false},{"functionName":"expectedException","ranges":[{"startOffset":19156,"endOffset":22558,"count":0}],"isBlockCoverage":false},{"functionName":"getActual","ranges":[{"startOffset":22560,"endOffset":22700,"count":0}],"isBlockCoverage":false},{"functionName":"checkIsPromise","ranges":[{"startOffset":22702,"endOffset":23066,"count":0}],"isBlockCoverage":false},{"functionName":"waitForActual","ranges":[{"startOffset":23068,"endOffset":23782,"count":0}],"isBlockCoverage":false},{"functionName":"expectsError","ranges":[{"startOffset":23784,"endOffset":25398,"count":0}],"isBlockCoverage":false},{"functionName":"hasMatchingError","ranges":[{"startOffset":25400,"endOffset":26017,"count":0}],"isBlockCoverage":false},{"functionName":"expectsNoError","ranges":[{"startOffset":26019,"endOffset":26669,"count":0}],"isBlockCoverage":false},{"functionName":"throws","ranges":[{"startOffset":26827,"endOffset":26921,"count":0}],"isBlockCoverage":false},{"functionName":"rejects","ranges":[{"startOffset":27100,"endOffset":27212,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotThrow","ranges":[{"startOffset":27374,"endOffset":27468,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotReject","ranges":[{"startOffset":27634,"endOffset":27746,"count":0}],"isBlockCoverage":false},{"functionName":"ifError","ranges":[{"startOffset":27874,"endOffset":29661,"count":0}],"isBlockCoverage":false},{"functionName":"internalMatch","ranges":[{"startOffset":29664,"endOffset":30745,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":30941,"endOffset":31033,"count":0}],"isBlockCoverage":false},{"functionName":"doesNotMatch","ranges":[{"startOffset":31241,"endOffset":31347,"count":0}],"isBlockCoverage":false},{"functionName":"strict","ranges":[{"startOffset":31479,"endOffset":31548,"count":0}],"isBlockCoverage":false}]},{"scriptId":"479","url":"node:internal/assert/assertion_error","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":17113,"count":1}],"isBlockCoverage":false},{"functionName":"copyError","ranges":[{"startOffset":1464,"endOffset":1757,"count":0}],"isBlockCoverage":false},{"functionName":"inspectValue","ranges":[{"startOffset":1759,"endOffset":2366,"count":0}],"isBlockCoverage":false},{"functionName":"createErrDiff","ranges":[{"startOffset":2368,"endOffset":11104,"count":0}],"isBlockCoverage":false},{"functionName":"addEllipsis","ranges":[{"startOffset":11106,"endOffset":11409,"count":0}],"isBlockCoverage":false},{"functionName":"AssertionError","ranges":[{"startOffset":11450,"endOffset":16143,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":16147,"endOffset":16222,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16226,"endOffset":17076,"count":0}],"isBlockCoverage":false}]},{"scriptId":"480","url":"node:internal/util/colors","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":592,"count":1}],"isBlockCoverage":false},{"functionName":"refresh","ranges":[{"startOffset":118,"endOffset":561,"count":1},{"startOffset":267,"endOffset":271,"count":0},{"startOffset":327,"endOffset":331,"count":0},{"startOffset":387,"endOffset":391,"count":0},{"startOffset":445,"endOffset":449,"count":0},{"startOffset":502,"endOffset":506,"count":0}],"isBlockCoverage":true}]},{"scriptId":"481","url":"node:tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5055,"count":1}],"isBlockCoverage":false},{"functionName":"isatty","ranges":[{"startOffset":1534,"endOffset":1640,"count":2}],"isBlockCoverage":true},{"functionName":"ReadStream","ranges":[{"startOffset":1642,"endOffset":2110,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.setRawMode","ranges":[{"startOffset":2259,"endOffset":2476,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":2479,"endOffset":3450,"count":2},{"startOffset":2548,"endOffset":2575,"count":0},{"startOffset":2612,"endOffset":2641,"count":0},{"startOffset":2723,"endOffset":2768,"count":0}],"isBlockCoverage":true},{"functionName":"WriteStream._refreshSize","ranges":[{"startOffset":3741,"endOffset":4177,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.cursorTo","ranges":[{"startOffset":4233,"endOffset":4373,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.moveCursor","ranges":[{"startOffset":4410,"endOffset":4556,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearLine","ranges":[{"startOffset":4592,"endOffset":4731,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.clearScreenDown","ranges":[{"startOffset":4773,"endOffset":4908,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.getWindowSize","ranges":[{"startOffset":4948,"endOffset":4998,"count":0}],"isBlockCoverage":false}]},{"scriptId":"482","url":"node:internal/tty","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6482,"count":1}],"isBlockCoverage":false},{"functionName":"warnOnDeactivatedColors","ranges":[{"startOffset":2548,"endOffset":3000,"count":0}],"isBlockCoverage":false},{"functionName":"getColorDepth","ranges":[{"startOffset":3158,"endOffset":6154,"count":1},{"startOffset":3362,"endOffset":3720,"count":0},{"startOffset":4061,"endOffset":4087,"count":0},{"startOffset":4125,"endOffset":4683,"count":0},{"startOffset":4701,"endOffset":4729,"count":0},{"startOffset":4745,"endOffset":5008,"count":0},{"startOffset":5043,"endOffset":5173,"count":0},{"startOffset":5209,"endOffset":5410,"count":0},{"startOffset":5415,"endOffset":5432,"count":0},{"startOffset":5437,"endOffset":5477,"count":0},{"startOffset":5482,"endOffset":5529,"count":0},{"startOffset":5571,"endOffset":5599,"count":0},{"startOffset":5629,"endOffset":6153,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4897,"endOffset":4918,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":5946,"endOffset":5999,"count":0}],"isBlockCoverage":false},{"functionName":"hasColors","ranges":[{"startOffset":6156,"endOffset":6429,"count":1},{"startOffset":6243,"endOffset":6291,"count":0},{"startOffset":6332,"endOffset":6383,"count":0}],"isBlockCoverage":true}]},{"scriptId":"483","url":"node:internal/assert/calltracker","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3450,"count":1}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":462,"endOffset":1494,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":1496,"endOffset":3418,"count":0}],"isBlockCoverage":false}]},{"scriptId":"484","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/signal-exit/signals.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1295,"count":1},{"startOffset":1189,"endOffset":1294,"count":0}],"isBlockCoverage":true}]},{"scriptId":"485","url":"node:child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26948,"count":1}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1919,"endOffset":1948,"count":1}],"isBlockCoverage":true},{"functionName":"fork","ranges":[{"startOffset":3383,"endOffset":5041,"count":0}],"isBlockCoverage":false},{"functionName":"_forkChild","ranges":[{"startOffset":5043,"endOffset":5532,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecArgs","ranges":[{"startOffset":5534,"endOffset":6030,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":6567,"endOffset":6814,"count":0}],"isBlockCoverage":false},{"functionName":"customPromiseExecFunction","ranges":[{"startOffset":6850,"endOffset":7214,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6871,"endOffset":7211,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeExecFileArgs","ranges":[{"startOffset":7350,"endOffset":8248,"count":0}],"isBlockCoverage":false},{"functionName":"execFile","ranges":[{"startOffset":8855,"endOffset":13595,"count":0}],"isBlockCoverage":false},{"functionName":"copyProcessEnvToEnv","ranges":[{"startOffset":13738,"endOffset":13938,"count":1},{"startOffset":13836,"endOffset":13893,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeSpawnArguments","ranges":[{"startOffset":13940,"endOffset":19185,"count":1},{"startOffset":14101,"endOffset":14166,"count":0},{"startOffset":14237,"endOffset":14428,"count":0},{"startOffset":14508,"endOffset":14531,"count":0},{"startOffset":14660,"endOffset":14713,"count":0},{"startOffset":14783,"endOffset":14847,"count":0},{"startOffset":14910,"endOffset":14934,"count":0},{"startOffset":14936,"endOffset":15014,"count":0},{"startOffset":15077,"endOffset":15101,"count":0},{"startOffset":15103,"endOffset":15181,"count":0},{"startOffset":15248,"endOffset":15291,"count":0},{"startOffset":15292,"endOffset":15334,"count":0},{"startOffset":15336,"endOffset":15467,"count":0},{"startOffset":15531,"endOffset":15651,"count":0},{"startOffset":15727,"endOffset":15797,"count":0},{"startOffset":15937,"endOffset":16045,"count":0},{"startOffset":16068,"endOffset":16930,"count":0},{"startOffset":16973,"endOffset":17026,"count":0},{"startOffset":17371,"endOffset":17975,"count":0},{"startOffset":18072,"endOffset":18115,"count":49},{"startOffset":18153,"endOffset":18617,"count":0},{"startOffset":18648,"endOffset":18901,"count":49}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":18397,"endOffset":18606,"count":0}],"isBlockCoverage":false},{"functionName":"abortChildProcess","ranges":[{"startOffset":19187,"endOffset":19407,"count":0}],"isBlockCoverage":false},{"functionName":"spawn","ranges":[{"startOffset":19956,"endOffset":21125,"count":1},{"startOffset":20322,"endOffset":20696,"count":0},{"startOffset":20720,"endOffset":21106,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":20355,"endOffset":20543,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20587,"endOffset":20690,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":20952,"endOffset":21010,"count":0}],"isBlockCoverage":false},{"functionName":"onAbortListener","ranges":[{"startOffset":21024,"endOffset":21102,"count":0}],"isBlockCoverage":false},{"functionName":"spawnSync","ranges":[{"startOffset":21879,"endOffset":23365,"count":0}],"isBlockCoverage":false},{"functionName":"checkExecSyncError","ranges":[{"startOffset":23368,"endOffset":23754,"count":0}],"isBlockCoverage":false},{"functionName":"execFileSync","ranges":[{"startOffset":24261,"endOffset":24725,"count":0}],"isBlockCoverage":false},{"functionName":"execSync","ranges":[{"startOffset":25217,"endOffset":25593,"count":0}],"isBlockCoverage":false},{"functionName":"validateArgumentNullCheck","ranges":[{"startOffset":25596,"endOffset":25819,"count":105},{"startOffset":25721,"endOffset":25817,"count":0}],"isBlockCoverage":true},{"functionName":"validateArgumentsNullCheck","ranges":[{"startOffset":25822,"endOffset":25984,"count":1},{"startOffset":25916,"endOffset":25982,"count":6}],"isBlockCoverage":true},{"functionName":"validateTimeout","ranges":[{"startOffset":25987,"endOffset":26175,"count":1},{"startOffset":26045,"endOffset":26091,"count":0},{"startOffset":26093,"endOffset":26173,"count":0}],"isBlockCoverage":true},{"functionName":"validateMaxBuffer","ranges":[{"startOffset":26178,"endOffset":26451,"count":0}],"isBlockCoverage":false},{"functionName":"sanitizeKillSignal","ranges":[{"startOffset":26454,"endOffset":26817,"count":1},{"startOffset":26568,"endOffset":26618,"count":0},{"startOffset":26648,"endOffset":26815,"count":0}],"isBlockCoverage":true}]},{"scriptId":"486","url":"node:internal/child_process","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":31427,"count":1}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2379,"endOffset":2438,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2445,"endOffset":2499,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2560,"endOffset":2627,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":2634,"endOffset":2775,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":2804,"endOffset":4358,"count":0}],"isBlockCoverage":false},{"functionName":"postSend","ranges":[{"startOffset":4365,"endOffset":5111,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5118,"endOffset":5573,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5637,"endOffset":5696,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5703,"endOffset":5757,"count":0}],"isBlockCoverage":false},{"functionName":"send","ranges":[{"startOffset":5821,"endOffset":5941,"count":0}],"isBlockCoverage":false},{"functionName":"got","ranges":[{"startOffset":5948,"endOffset":6107,"count":0}],"isBlockCoverage":false},{"functionName":"stdioStringToArray","ranges":[{"startOffset":6116,"endOffset":6531,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess","ranges":[{"startOffset":6533,"endOffset":7911,"count":1}],"isBlockCoverage":true},{"functionName":"ChildProcess._handle.onexit","ranges":[{"startOffset":6874,"endOffset":7908,"count":1},{"startOffset":6922,"endOffset":6965,"count":0},{"startOffset":7032,"endOffset":7067,"count":0},{"startOffset":7143,"endOffset":7435,"count":0}],"isBlockCoverage":true},{"functionName":"flushStdio","ranges":[{"startOffset":8034,"endOffset":8512,"count":1},{"startOffset":8124,"endOffset":8131,"count":0},{"startOffset":8174,"endOffset":8510,"count":3},{"startOffset":8415,"endOffset":8434,"count":0},{"startOffset":8435,"endOffset":8460,"count":0},{"startOffset":8485,"endOffset":8510,"count":0}],"isBlockCoverage":true},{"functionName":"createSocket","ranges":[{"startOffset":8515,"endOffset":8605,"count":0}],"isBlockCoverage":false},{"functionName":"getHandleWrapType","ranges":[{"startOffset":8608,"endOffset":8837,"count":0}],"isBlockCoverage":false},{"functionName":"closePendingHandle","ranges":[{"startOffset":8839,"endOffset":8952,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.spawn","ranges":[{"startOffset":8986,"endOffset":12553,"count":1},{"startOffset":9137,"endOffset":9146,"count":0},{"startOffset":9481,"endOffset":9866,"count":0},{"startOffset":9984,"endOffset":10014,"count":0},{"startOffset":10355,"endOffset":10612,"count":0},{"startOffset":10627,"endOffset":10914,"count":0},{"startOffset":11035,"endOffset":11949,"count":3},{"startOffset":11100,"endOffset":11109,"count":0},{"startOffset":11131,"endOffset":11182,"count":0},{"startOffset":11403,"endOffset":11665,"count":0},{"startOffset":11690,"endOffset":11945,"count":0},{"startOffset":12017,"endOffset":12038,"count":0},{"startOffset":12114,"endOffset":12135,"count":0},{"startOffset":12211,"endOffset":12232,"count":0},{"startOffset":12303,"endOffset":12413,"count":3},{"startOffset":12394,"endOffset":12411,"count":0},{"startOffset":12497,"endOffset":12536,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11884,"endOffset":11929,"count":0}],"isBlockCoverage":false},{"functionName":"onErrorNT","ranges":[{"startOffset":12557,"endOffset":12618,"count":0}],"isBlockCoverage":false},{"functionName":"onSpawnNT","ranges":[{"startOffset":12621,"endOffset":12671,"count":1}],"isBlockCoverage":true},{"functionName":"ChildProcess.kill","ranges":[{"startOffset":12704,"endOffset":13369,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.ref","ranges":[{"startOffset":13402,"endOffset":13456,"count":0}],"isBlockCoverage":false},{"functionName":"ChildProcess.unref","ranges":[{"startOffset":13491,"endOffset":13547,"count":0}],"isBlockCoverage":false},{"functionName":"<instance_members_initializer>","ranges":[{"startOffset":13550,"endOffset":14547,"count":0}],"isBlockCoverage":false},{"functionName":"setupChannel","ranges":[{"startOffset":14695,"endOffset":26811,"count":0}],"isBlockCoverage":false},{"functionName":"isInternal","ranges":[{"startOffset":26846,"endOffset":27156,"count":0}],"isBlockCoverage":false},{"functionName":"getValidStdio","ranges":[{"startOffset":27190,"endOffset":30110,"count":1},{"startOffset":27322,"endOffset":27366,"count":0},{"startOffset":27398,"endOffset":27456,"count":0},{"startOffset":27700,"endOffset":27737,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27850,"endOffset":30069,"count":3},{"startOffset":28108,"endOffset":28156,"count":0},{"startOffset":28186,"endOffset":28244,"count":0},{"startOffset":28357,"endOffset":28610,"count":0},{"startOffset":28637,"endOffset":29030,"count":0},{"startOffset":29061,"endOffset":29149,"count":0},{"startOffset":29185,"endOffset":29216,"count":0},{"startOffset":29318,"endOffset":29328,"count":0},{"startOffset":29344,"endOffset":30048,"count":0}],"isBlockCoverage":true},{"functionName":"cleanup","ranges":[{"startOffset":27875,"endOffset":28067,"count":0}],"isBlockCoverage":false},{"functionName":"getSocketList","ranges":[{"startOffset":30113,"endOffset":30429,"count":0}],"isBlockCoverage":false},{"functionName":"maybeClose","ranges":[{"startOffset":30432,"endOffset":30633,"count":1}],"isBlockCoverage":true},{"functionName":"spawnSync","ranges":[{"startOffset":30635,"endOffset":31302,"count":0}],"isBlockCoverage":false}]},{"scriptId":"487","url":"node:dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":28020,"count":1}],"isBlockCoverage":false},{"functionName":"lazyLoadCluster","ranges":[{"startOffset":2807,"endOffset":2904,"count":0}],"isBlockCoverage":false},{"functionName":"Socket","ranges":[{"startOffset":3014,"endOffset":4413,"count":0}],"isBlockCoverage":false},{"functionName":"createSocket","ranges":[{"startOffset":4524,"endOffset":4602,"count":0}],"isBlockCoverage":false},{"functionName":"startListening","ranges":[{"startOffset":4605,"endOffset":5048,"count":0}],"isBlockCoverage":false},{"functionName":"replaceHandle","ranges":[{"startOffset":5050,"endOffset":5615,"count":0}],"isBlockCoverage":false},{"functionName":"bufferSize","ranges":[{"startOffset":5617,"endOffset":5909,"count":0}],"isBlockCoverage":false},{"functionName":"bindServerHandle","ranges":[{"startOffset":5977,"endOffset":6387,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.bind","ranges":[{"startOffset":6413,"endOffset":9854,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.connect","ranges":[{"startOffset":9884,"endOffset":10680,"count":0}],"isBlockCoverage":false},{"functionName":"_connect","ranges":[{"startOffset":10684,"endOffset":11029,"count":0}],"isBlockCoverage":false},{"functionName":"doConnect","ranges":[{"startOffset":11032,"endOffset":11674,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.disconnect","ranges":[{"startOffset":11707,"endOffset":12014,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.sendto","ranges":[{"startOffset":12119,"endOffset":12560,"count":0}],"isBlockCoverage":false},{"functionName":"sliceBuffer","ranges":[{"startOffset":12564,"endOffset":13324,"count":0}],"isBlockCoverage":false},{"functionName":"fixBufferList","ranges":[{"startOffset":13327,"endOffset":13711,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":13714,"endOffset":14141,"count":0}],"isBlockCoverage":false},{"functionName":"onListenSuccess","ranges":[{"startOffset":14144,"endOffset":14282,"count":0}],"isBlockCoverage":false},{"functionName":"onListenError","ranges":[{"startOffset":14285,"endOffset":14409,"count":0}],"isBlockCoverage":false},{"functionName":"clearQueue","ranges":[{"startOffset":14412,"endOffset":14609,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.send","ranges":[{"startOffset":15180,"endOffset":18072,"count":0}],"isBlockCoverage":false},{"functionName":"doSend","ranges":[{"startOffset":18075,"endOffset":19214,"count":0}],"isBlockCoverage":false},{"functionName":"afterSend","ranges":[{"startOffset":19216,"endOffset":19393,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.close","ranges":[{"startOffset":19420,"endOffset":19988,"count":0}],"isBlockCoverage":false},{"functionName":"socketCloseNT","ranges":[{"startOffset":19992,"endOffset":20046,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.address","ranges":[{"startOffset":20076,"endOffset":20266,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.remoteAddress","ranges":[{"startOffset":20302,"endOffset":20612,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setBroadcast","ranges":[{"startOffset":20648,"endOffset":20796,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setTTL","ranges":[{"startOffset":20826,"endOffset":21000,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastTTL","ranges":[{"startOffset":21039,"endOffset":21231,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastLoopback","ranges":[{"startOffset":21275,"endOffset":21475,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setMulticastInterface","ranges":[{"startOffset":21520,"endOffset":21782,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addMembership","ranges":[{"startOffset":21818,"endOffset":22192,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropMembership","ranges":[{"startOffset":22230,"endOffset":22607,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.addSourceSpecificMembership","ranges":[{"startOffset":22657,"endOffset":23264,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.dropSourceSpecificMembership","ranges":[{"startOffset":23316,"endOffset":23929,"count":0}],"isBlockCoverage":false},{"functionName":"healthCheck","ranges":[{"startOffset":23933,"endOffset":24096,"count":0}],"isBlockCoverage":false},{"functionName":"stopReceiving","ranges":[{"startOffset":24099,"endOffset":24263,"count":0}],"isBlockCoverage":false},{"functionName":"onMessage","ranges":[{"startOffset":24266,"endOffset":24520,"count":0}],"isBlockCoverage":false},{"functionName":"onError","ranges":[{"startOffset":24523,"endOffset":24638,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.ref","ranges":[{"startOffset":24664,"endOffset":24771,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.unref","ranges":[{"startOffset":24800,"endOffset":24909,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setRecvBufferSize","ranges":[{"startOffset":24950,"endOffset":25007,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.setSendBufferSize","ranges":[{"startOffset":25048,"endOffset":25105,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getRecvBufferSize","ranges":[{"startOffset":25146,"endOffset":25203,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendBufferSize","ranges":[{"startOffset":25244,"endOffset":25301,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueSize","ranges":[{"startOffset":25340,"endOffset":25409,"count":0}],"isBlockCoverage":false},{"functionName":"Socket.getSendQueueCount","ranges":[{"startOffset":25449,"endOffset":25519,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25638,"endOffset":25692,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25765,"endOffset":25821,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25973,"endOffset":26030,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26106,"endOffset":26165,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26320,"endOffset":26377,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26453,"endOffset":26512,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26663,"endOffset":26716,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26788,"endOffset":26843,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":26994,"endOffset":27051,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27127,"endOffset":27186,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27292,"endOffset":27327,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27436,"endOffset":27473,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":27758,"endOffset":27794,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":27798,"endOffset":27839,"count":0}],"isBlockCoverage":false}]},{"scriptId":"488","url":"node:internal/dgram","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1849,"count":1}],"isBlockCoverage":false},{"functionName":"lookup4","ranges":[{"startOffset":477,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"lookup6","ranges":[{"startOffset":581,"endOffset":676,"count":0}],"isBlockCoverage":false},{"functionName":"newHandle","ranges":[{"startOffset":678,"endOffset":1322,"count":0}],"isBlockCoverage":false},{"functionName":"_createSocketHandle","ranges":[{"startOffset":1325,"endOffset":1773,"count":0}],"isBlockCoverage":false}]},{"scriptId":"489","url":"node:diagnostics_channel","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3110,"count":1}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":540,"endOffset":678,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":682,"endOffset":1126,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":1130,"endOffset":1173,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":1177,"endOffset":1478,"count":0}],"isBlockCoverage":false},{"functionName":"Channel","ranges":[{"startOffset":1500,"endOffset":1580,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1591,"endOffset":1776,"count":0}],"isBlockCoverage":false},{"functionName":"subscribe","ranges":[{"startOffset":1780,"endOffset":1928,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":1932,"endOffset":1969,"count":0}],"isBlockCoverage":false},{"functionName":"get hasSubscribers","ranges":[{"startOffset":1973,"endOffset":2017,"count":0}],"isBlockCoverage":false},{"functionName":"publish","ranges":[{"startOffset":2021,"endOffset":2033,"count":0}],"isBlockCoverage":false},{"functionName":"channel","ranges":[{"startOffset":2075,"endOffset":2448,"count":1},{"startOffset":2156,"endOffset":2176,"count":0},{"startOffset":2192,"endOffset":2207,"count":0},{"startOffset":2240,"endOffset":2267,"count":0},{"startOffset":2269,"endOffset":2349,"count":0}],"isBlockCoverage":true},{"functionName":"subscribe","ranges":[{"startOffset":2450,"endOffset":2581,"count":0}],"isBlockCoverage":false},{"functionName":"unsubscribe","ranges":[{"startOffset":2583,"endOffset":2833,"count":0}],"isBlockCoverage":false},{"functionName":"hasSubscribers","ranges":[{"startOffset":2835,"endOffset":3019,"count":0}],"isBlockCoverage":false}]},{"scriptId":"490","url":"node:internal/socket_list","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2705,"count":1}],"isBlockCoverage":false},{"functionName":"SocketListSend","ranges":[{"startOffset":235,"endOffset":376,"count":0}],"isBlockCoverage":false},{"functionName":"_request","ranges":[{"startOffset":380,"endOffset":1035,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":1039,"endOffset":1189,"count":0}],"isBlockCoverage":false},{"functionName":"getConnections","ranges":[{"startOffset":1193,"endOffset":1428,"count":0}],"isBlockCoverage":false},{"functionName":"SocketListReceive","ranges":[{"startOffset":1542,"endOffset":2400,"count":0}],"isBlockCoverage":false},{"functionName":"add","ranges":[{"startOffset":2404,"endOffset":2645,"count":0}],"isBlockCoverage":false}]},{"scriptId":"491","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/c8/lib/commands/report.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1294,"count":1}],"isBlockCoverage":true},{"functionName":"exports.handler","ranges":[{"startOffset":210,"endOffset":270,"count":0}],"isBlockCoverage":false},{"functionName":"exports.outputReport","ranges":[{"startOffset":295,"endOffset":1293,"count":1},{"startOffset":466,"endOffset":596,"count":0},{"startOffset":814,"endOffset":831,"count":0},{"startOffset":1257,"endOffset":1291,"count":0}],"isBlockCoverage":true}]},{"scriptId":"492","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/c8/lib/commands/check-coverage.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2220,"count":1}],"isBlockCoverage":true},{"functionName":"exports.builder","ranges":[{"startOffset":203,"endOffset":354,"count":0}],"isBlockCoverage":false},{"functionName":"exports.handler","ranges":[{"startOffset":374,"endOffset":1112,"count":0}],"isBlockCoverage":false},{"functionName":"exports.checkCoverages","ranges":[{"startOffset":1139,"endOffset":1589,"count":0}],"isBlockCoverage":false},{"functionName":"checkCoverage","ranges":[{"startOffset":1591,"endOffset":2219,"count":0}],"isBlockCoverage":false}]},{"scriptId":"493","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/c8/lib/report.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10378,"count":1}],"isBlockCoverage":true},{"functionName":"Report","ranges":[{"startOffset":675,"endOffset":1702,"count":1}],"isBlockCoverage":true},{"functionName":"_getSrc","ranges":[{"startOffset":1706,"endOffset":1881,"count":1},{"startOffset":1755,"endOffset":1781,"count":0},{"startOffset":1811,"endOffset":1835,"count":0}],"isBlockCoverage":true},{"functionName":"run","ranges":[{"startOffset":1885,"endOffset":2354,"count":1},{"startOffset":2133,"endOffset":2350,"count":2},{"startOffset":2268,"endOffset":2274,"count":0}],"isBlockCoverage":true},{"functionName":"getCoverageMapFromAllCoverageFiles","ranges":[{"startOffset":2358,"endOffset":4186,"count":1},{"startOffset":2677,"endOffset":2706,"count":0},{"startOffset":2946,"endOffset":3892,"count":20},{"startOffset":3348,"endOffset":3432,"count":0},{"startOffset":3537,"endOffset":3673,"count":0},{"startOffset":3800,"endOffset":3886,"count":0},{"startOffset":3968,"endOffset":4115,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3150,"endOffset":3272,"count":234},{"startOffset":3200,"endOffset":3262,"count":0}],"isBlockCoverage":true},{"functionName":"_getSourceMap","ranges":[{"startOffset":4509,"endOffset":5144,"count":20},{"startOffset":4688,"endOffset":5121,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5003,"endOffset":5074,"count":0}],"isBlockCoverage":false},{"functionName":"_getMergedProcessCov","ranges":[{"startOffset":5412,"endOffset":7172,"count":1},{"startOffset":5960,"endOffset":7124,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6232,"endOffset":7109,"count":0}],"isBlockCoverage":false},{"functionName":"_isCoverageObject","ranges":[{"startOffset":7330,"endOffset":7445,"count":1}],"isBlockCoverage":true},{"functionName":"_loadReports","ranges":[{"startOffset":7610,"endOffset":7932,"count":1},{"startOffset":7849,"endOffset":7903,"count":0}],"isBlockCoverage":true},{"functionName":"_normalizeProcessCov","ranges":[{"startOffset":8556,"endOffset":9395,"count":1},{"startOffset":8678,"endOffset":9369,"count":1770},{"startOffset":8825,"endOffset":8906,"count":153},{"startOffset":8953,"endOffset":9164,"count":1597},{"startOffset":9079,"endOffset":9156,"count":0},{"startOffset":9228,"endOffset":9363,"count":1597},{"startOffset":9309,"endOffset":9355,"count":20}],"isBlockCoverage":true},{"functionName":"_normalizeSourceMapCache","ranges":[{"startOffset":9673,"endOffset":9909,"count":1},{"startOffset":9797,"endOffset":9888,"count":217}],"isBlockCoverage":true},{"functionName":"_shouldInstrument","ranges":[{"startOffset":10013,"endOffset":10311,"count":1597},{"startOffset":10144,"endOffset":10176,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":10332,"endOffset":10377,"count":1}],"isBlockCoverage":true}]},{"scriptId":"494","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/test-exclude/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5211,"count":1}],"isBlockCoverage":true},{"functionName":"TestExclude","ranges":[{"startOffset":292,"endOffset":1487,"count":1},{"startOffset":495,"endOffset":595,"count":5},{"startOffset":643,"endOffset":697,"count":0},{"startOffset":745,"endOffset":799,"count":0},{"startOffset":849,"endOffset":907,"count":0},{"startOffset":946,"endOffset":993,"count":0},{"startOffset":1048,"endOffset":1129,"count":0}],"isBlockCoverage":true},{"functionName":"handleNegation","ranges":[{"startOffset":1722,"endOffset":2337,"count":1},{"startOffset":1923,"endOffset":2136,"count":0}],"isBlockCoverage":true},{"functionName":"noNeg","ranges":[{"startOffset":1763,"endOffset":1787,"count":27}],"isBlockCoverage":true},{"functionName":"onlyNeg","ranges":[{"startOffset":1813,"endOffset":1837,"count":27}],"isBlockCoverage":true},{"functionName":"stripNeg","ranges":[{"startOffset":1864,"endOffset":1879,"count":0}],"isBlockCoverage":false},{"functionName":"shouldInstrument","ranges":[{"startOffset":2343,"endOffset":3245,"count":1597},{"startOffset":2498,"endOffset":2535,"count":1},{"startOffset":2535,"endOffset":2962,"count":1596},{"startOffset":2815,"endOffset":2860,"count":0},{"startOffset":2962,"endOffset":3116,"count":1596},{"startOffset":3116,"endOffset":3145,"count":0},{"startOffset":3147,"endOffset":3228,"count":1596},{"startOffset":3191,"endOffset":3227,"count":1576}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2457,"endOffset":2486,"count":1610}],"isBlockCoverage":true},{"functionName":"matches","ranges":[{"startOffset":3023,"endOffset":3070,"count":41516}],"isBlockCoverage":true},{"functionName":"globSync","ranges":[{"startOffset":3251,"endOffset":3831,"count":0}],"isBlockCoverage":false},{"functionName":"glob","ranges":[{"startOffset":3837,"endOffset":4421,"count":0}],"isBlockCoverage":false},{"functionName":"prepGlobPatterns","ranges":[{"startOffset":4425,"endOffset":4932,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4490,"endOffset":4924,"count":12},{"startOffset":4607,"endOffset":4690,"count":7},{"startOffset":4799,"endOffset":4878,"count":8}],"isBlockCoverage":true},{"functionName":"getExtensionPattern","ranges":[{"startOffset":4934,"endOffset":5179,"count":0}],"isBlockCoverage":false}]},{"scriptId":"495","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/glob/glob.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":19362,"count":1}],"isBlockCoverage":true},{"functionName":"glob","ranges":[{"startOffset":2096,"endOffset":2407,"count":0}],"isBlockCoverage":false},{"functionName":"extend","ranges":[{"startOffset":2517,"endOffset":2745,"count":1},{"startOffset":2619,"endOffset":2744,"count":0}],"isBlockCoverage":true},{"functionName":"glob.hasMagic","ranges":[{"startOffset":2763,"endOffset":3120,"count":1},{"startOffset":2945,"endOffset":2957,"count":0},{"startOffset":2985,"endOffset":2996,"count":0},{"startOffset":3040,"endOffset":3102,"count":9},{"startOffset":3087,"endOffset":3098,"count":0}],"isBlockCoverage":true},{"functionName":"Glob","ranges":[{"startOffset":3158,"endOffset":4588,"count":1},{"startOffset":3234,"endOffset":3275,"count":0},{"startOffset":3308,"endOffset":3427,"count":0},{"startOffset":3464,"endOffset":3501,"count":0},{"startOffset":3925,"endOffset":4044,"count":0},{"startOffset":4197,"endOffset":4587,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3989,"endOffset":4039,"count":0}],"isBlockCoverage":false},{"functionName":"done","ranges":[{"startOffset":4363,"endOffset":4586,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._finish","ranges":[{"startOffset":4615,"endOffset":4818,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._realpath","ranges":[{"startOffset":4847,"endOffset":5162,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._realpathSet","ranges":[{"startOffset":5194,"endOffset":6010,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._mark","ranges":[{"startOffset":6035,"endOffset":6081,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._makeAbs","ranges":[{"startOffset":6109,"endOffset":6158,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.abort","ranges":[{"startOffset":6183,"endOffset":6241,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.pause","ranges":[{"startOffset":6266,"endOffset":6353,"count":0}],"isBlockCoverage":false},{"functionName":"Glob.resume","ranges":[{"startOffset":6379,"endOffset":6961,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._process","ranges":[{"startOffset":6989,"endOffset":8755,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processReaddir","ranges":[{"startOffset":8790,"endOffset":9026,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processReaddir2","ranges":[{"startOffset":9062,"endOffset":11106,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._emitMatch","ranges":[{"startOffset":11136,"endOffset":11704,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirInGlobStar","ranges":[{"startOffset":11742,"endOffset":12544,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdir","ranges":[{"startOffset":12572,"endOffset":13089,"count":0}],"isBlockCoverage":false},{"functionName":"readdirCb","ranges":[{"startOffset":13091,"endOffset":13271,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirEntries","ranges":[{"startOffset":13306,"endOffset":13803,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._readdirError","ranges":[{"startOffset":13836,"endOffset":14921,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processGlobStar","ranges":[{"startOffset":14957,"endOffset":15187,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processGlobStar2","ranges":[{"startOffset":15225,"endOffset":16372,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processSimple","ranges":[{"startOffset":16406,"endOffset":16662,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._processSimple2","ranges":[{"startOffset":16696,"endOffset":17378,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat","ranges":[{"startOffset":17445,"endOffset":18836,"count":0}],"isBlockCoverage":false},{"functionName":"Glob._stat2","ranges":[{"startOffset":18862,"endOffset":19361,"count":0}],"isBlockCoverage":false}]},{"scriptId":"496","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/fs.realpath/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1308,"count":1}],"isBlockCoverage":true},{"functionName":"newError","ranges":[{"startOffset":386,"endOffset":548,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":550,"endOffset":865,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":867,"endOffset":1123,"count":0}],"isBlockCoverage":false},{"functionName":"monkeypatch","ranges":[{"startOffset":1125,"endOffset":1210,"count":0}],"isBlockCoverage":false},{"functionName":"unmonkeypatch","ranges":[{"startOffset":1212,"endOffset":1307,"count":0}],"isBlockCoverage":false}]},{"scriptId":"497","url":"node:internal/fs/streams","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":13258,"count":1}],"isBlockCoverage":false},{"functionName":"_construct","ranges":[{"startOffset":1019,"endOffset":1922,"count":0}],"isBlockCoverage":false},{"functionName":"FileHandleOperations","ranges":[{"startOffset":2015,"endOffset":3013,"count":0}],"isBlockCoverage":false},{"functionName":"close","ranges":[{"startOffset":3016,"endOffset":3193,"count":0}],"isBlockCoverage":false},{"functionName":"importFd","ranges":[{"startOffset":3195,"endOffset":4192,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream","ranges":[{"startOffset":4194,"endOffset":5936,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":6125,"endOffset":6180,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":6184,"endOffset":6241,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6276,"endOffset":6301,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._read","ranges":[{"startOffset":6477,"endOffset":7608,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream._destroy","ranges":[{"startOffset":7643,"endOffset":8204,"count":0}],"isBlockCoverage":false},{"functionName":"ReadStream.close","ranges":[{"startOffset":8236,"endOffset":8322,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":8402,"endOffset":8436,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream","ranges":[{"startOffset":8464,"endOffset":10255,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":10447,"endOffset":10502,"count":0}],"isBlockCoverage":false},{"functionName":"set","ranges":[{"startOffset":10506,"endOffset":10563,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10599,"endOffset":10624,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._write","ranges":[{"startOffset":10806,"endOffset":11277,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._writev","ranges":[{"startOffset":11312,"endOffset":11952,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream._destroy","ranges":[{"startOffset":11988,"endOffset":12549,"count":0}],"isBlockCoverage":false},{"functionName":"WriteStream.close","ranges":[{"startOffset":12582,"endOffset":12964,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":13146,"endOffset":13180,"count":0}],"isBlockCoverage":false}]},{"scriptId":"498","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/fs.realpath/old.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8542,"count":1},{"startOffset":1341,"endOffset":1377,"count":0},{"startOffset":2489,"endOffset":2534,"count":0},{"startOffset":2673,"endOffset":2754,"count":0}],"isBlockCoverage":true},{"functionName":"rethrow","ranges":[{"startOffset":1380,"endOffset":2224,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCallback","ranges":[{"startOffset":2226,"endOffset":2308,"count":0}],"isBlockCoverage":false},{"functionName":"realpathSync","ranges":[{"startOffset":2818,"endOffset":5360,"count":0}],"isBlockCoverage":false},{"functionName":"realpath","ranges":[{"startOffset":5383,"endOffset":8540,"count":0}],"isBlockCoverage":false}]},{"scriptId":"499","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/glob/node_modules/minimatch/minimatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26266,"count":1},{"startOffset":134,"endOffset":151,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":72,"endOffset":130,"count":1},{"startOffset":117,"endOffset":129,"count":0}],"isBlockCoverage":true},{"functionName":"charSet","ranges":[{"startOffset":1148,"endOffset":1262,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1199,"endOffset":1255,"count":14}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":1337,"endOffset":1480,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":1482,"endOffset":1665,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.defaults","ranges":[{"startOffset":1688,"endOffset":2709,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.defaults","ranges":[{"startOffset":2732,"endOffset":2793,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch","ranges":[{"startOffset":2795,"endOffset":3068,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch","ranges":[{"startOffset":3070,"endOffset":3676,"count":1},{"startOffset":3146,"endOffset":3194,"count":0},{"startOffset":3243,"endOffset":3255,"count":0},{"startOffset":3383,"endOffset":3436,"count":0}],"isBlockCoverage":true},{"functionName":"Minimatch.debug","ranges":[{"startOffset":3706,"endOffset":3720,"count":61}],"isBlockCoverage":true},{"functionName":"make","ranges":[{"startOffset":3754,"endOffset":5005,"count":1},{"startOffset":3905,"endOffset":3933,"count":0},{"startOffset":3935,"endOffset":3975,"count":0},{"startOffset":3992,"endOffset":4030,"count":0},{"startOffset":4188,"endOffset":4261,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":4201,"endOffset":4261,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4595,"endOffset":4644,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4718,"endOffset":4780,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4898,"endOffset":4951,"count":1}],"isBlockCoverage":true},{"functionName":"parseNegate","ranges":[{"startOffset":5053,"endOffset":5438,"count":1},{"startOffset":5212,"endOffset":5291,"count":0},{"startOffset":5303,"endOffset":5437,"count":0}],"isBlockCoverage":true},{"functionName":"minimatch.braceExpand","ranges":[{"startOffset":5714,"endOffset":5784,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":5833,"endOffset":6374,"count":1},{"startOffset":5964,"endOffset":5996,"count":0},{"startOffset":6064,"endOffset":6073,"count":0},{"startOffset":6346,"endOffset":6373,"count":0}],"isBlockCoverage":true},{"functionName":"assertValidPattern","ranges":[{"startOffset":6436,"endOffset":6639,"count":11},{"startOffset":6492,"endOffset":6540,"count":0},{"startOffset":6585,"endOffset":6637,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":7337,"endOffset":17832,"count":9},{"startOffset":7471,"endOffset":7556,"count":0},{"startOffset":7579,"endOffset":7588,"count":1},{"startOffset":7588,"endOffset":7973,"count":8},{"startOffset":7973,"endOffset":7977,"count":0},{"startOffset":8055,"endOffset":8119,"count":8},{"startOffset":8069,"endOffset":8105,"count":0},{"startOffset":8688,"endOffset":8714,"count":57},{"startOffset":8726,"endOffset":13397,"count":57},{"startOffset":8835,"endOffset":8851,"count":0},{"startOffset":8853,"endOffset":8919,"count":0},{"startOffset":8977,"endOffset":9114,"count":0},{"startOffset":9122,"endOffset":9196,"count":0},{"startOffset":9276,"endOffset":9285,"count":0},{"startOffset":9292,"endOffset":9301,"count":0},{"startOffset":9308,"endOffset":9317,"count":0},{"startOffset":9324,"endOffset":9333,"count":0},{"startOffset":9340,"endOffset":10205,"count":0},{"startOffset":10213,"endOffset":10764,"count":0},{"startOffset":10772,"endOffset":11199,"count":0},{"startOffset":11207,"endOffset":11416,"count":0},{"startOffset":11478,"endOffset":11757,"count":0},{"startOffset":11765,"endOffset":13086,"count":0},{"startOffset":13206,"endOffset":13265,"count":0},{"startOffset":13299,"endOffset":13325,"count":0},{"startOffset":13327,"endOffset":13359,"count":0},{"startOffset":13397,"endOffset":13514,"count":8},{"startOffset":13514,"endOffset":13890,"count":0},{"startOffset":13890,"endOffset":14294,"count":8},{"startOffset":14294,"endOffset":15231,"count":0},{"startOffset":15231,"endOffset":15330,"count":8},{"startOffset":15330,"endOffset":15371,"count":0},{"startOffset":15371,"endOffset":15547,"count":8},{"startOffset":15547,"endOffset":15556,"count":0},{"startOffset":15557,"endOffset":15566,"count":0},{"startOffset":15567,"endOffset":15599,"count":0},{"startOffset":15603,"endOffset":15920,"count":8},{"startOffset":15920,"endOffset":16734,"count":0},{"startOffset":16734,"endOffset":16934,"count":8},{"startOffset":16936,"endOffset":16963,"count":0},{"startOffset":16963,"endOffset":16988,"count":8},{"startOffset":16988,"endOffset":17020,"count":0},{"startOffset":17020,"endOffset":17095,"count":8},{"startOffset":17095,"endOffset":17126,"count":0},{"startOffset":17126,"endOffset":17324,"count":8},{"startOffset":17324,"endOffset":17360,"count":0},{"startOffset":17361,"endOffset":17365,"count":0},{"startOffset":17429,"endOffset":17831,"count":0}],"isBlockCoverage":true},{"functionName":"clearStateChar","ranges":[{"startOffset":8141,"endOffset":8628,"count":65},{"startOffset":8189,"endOffset":8624,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14509,"endOffset":15009,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.makeRe","ranges":[{"startOffset":17853,"endOffset":17940,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":17978,"endOffset":19165,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.match","ranges":[{"startOffset":19185,"endOffset":19439,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":19469,"endOffset":20941,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.matchOne","ranges":[{"startOffset":21192,"endOffset":26081,"count":0}],"isBlockCoverage":false},{"functionName":"globUnescape","ranges":[{"startOffset":26115,"endOffset":26179,"count":8}],"isBlockCoverage":true},{"functionName":"regExpEscape","ranges":[{"startOffset":26181,"endOffset":26265,"count":0}],"isBlockCoverage":false}]},{"scriptId":"500","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/glob/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4792,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":337,"endOffset":445,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":447,"endOffset":684,"count":0}],"isBlockCoverage":false},{"functionName":"unescapeBraces","ranges":[{"startOffset":686,"endOffset":915,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommaParts","ranges":[{"startOffset":1079,"endOffset":1545,"count":0}],"isBlockCoverage":false},{"functionName":"expandTop","ranges":[{"startOffset":1547,"endOffset":2124,"count":0}],"isBlockCoverage":false},{"functionName":"identity","ranges":[{"startOffset":2126,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2164,"endOffset":2215,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2216,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2271,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2311,"endOffset":2350,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2352,"endOffset":4790,"count":0}],"isBlockCoverage":false}]},{"scriptId":"501","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/concat-map/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":345,"count":1},{"startOffset":255,"endOffset":343,"count":0}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":224,"count":47880},{"startOffset":95,"endOffset":206,"count":151620},{"startOffset":174,"endOffset":200,"count":0}],"isBlockCoverage":true},{"functionName":"isArray","ranges":[{"startOffset":258,"endOffset":343,"count":0}],"isBlockCoverage":false}]},{"scriptId":"502","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/balanced-match/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1219,"count":1}],"isBlockCoverage":true},{"functionName":"balanced","ranges":[{"startOffset":41,"endOffset":368,"count":263340},{"startOffset":99,"endOffset":122,"count":0},{"startOffset":150,"endOffset":173,"count":0},{"startOffset":215,"endOffset":365,"count":47880}],"isBlockCoverage":true},{"functionName":"maybeMatch","ranges":[{"startOffset":370,"endOffset":455,"count":0}],"isBlockCoverage":false},{"functionName":"range","ranges":[{"startOffset":481,"endOffset":1218,"count":263340},{"startOffset":638,"endOffset":647,"count":47880},{"startOffset":649,"endOffset":1198,"count":47880},{"startOffset":665,"endOffset":695,"count":0},{"startOffset":753,"endOffset":763,"count":143640},{"startOffset":765,"endOffset":1132,"count":95760},{"startOffset":786,"endOffset":1085,"count":47880},{"startOffset":927,"endOffset":1085,"count":0},{"startOffset":1105,"endOffset":1115,"count":60648},{"startOffset":1116,"endOffset":1120,"count":0},{"startOffset":1155,"endOffset":1194,"count":0}],"isBlockCoverage":true}]},{"scriptId":"503","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/inherits/inherits.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":250,"count":1},{"startOffset":108,"endOffset":117,"count":0},{"startOffset":154,"endOffset":249,"count":0}],"isBlockCoverage":true}]},{"scriptId":"504","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/path-is-absolute/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":611,"count":1},{"startOffset":534,"endOffset":541,"count":0}],"isBlockCoverage":true},{"functionName":"posix","ranges":[{"startOffset":15,"endOffset":71,"count":1}],"isBlockCoverage":true},{"functionName":"win32","ranges":[{"startOffset":73,"endOffset":486,"count":0}],"isBlockCoverage":false}]},{"scriptId":"505","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/glob/sync.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":11931,"count":1}],"isBlockCoverage":true},{"functionName":"globSync","ranges":[{"startOffset":501,"endOffset":790,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync","ranges":[{"startOffset":792,"endOffset":1419,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._finish","ranges":[{"startOffset":1450,"endOffset":2007,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._process","ranges":[{"startOffset":2040,"endOffset":3541,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processReaddir","ranges":[{"startOffset":3581,"endOffset":5539,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._emitMatch","ranges":[{"startOffset":5574,"endOffset":5962,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirInGlobStar","ranges":[{"startOffset":6005,"endOffset":6717,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdir","ranges":[{"startOffset":6749,"endOffset":7180,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirEntries","ranges":[{"startOffset":7219,"endOffset":7700,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._readdirError","ranges":[{"startOffset":7737,"endOffset":8601,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processGlobStar","ranges":[{"startOffset":8641,"endOffset":9739,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._processSimple","ranges":[{"startOffset":9777,"endOffset":10523,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._stat","ranges":[{"startOffset":10594,"endOffset":11774,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._mark","ranges":[{"startOffset":11803,"endOffset":11849,"count":0}],"isBlockCoverage":false},{"functionName":"GlobSync._makeAbs","ranges":[{"startOffset":11881,"endOffset":11930,"count":0}],"isBlockCoverage":false}]},{"scriptId":"506","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/glob/common.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6048,"count":1}],"isBlockCoverage":true},{"functionName":"ownProp","ranges":[{"startOffset":195,"endOffset":286,"count":1}],"isBlockCoverage":true},{"functionName":"alphasort","ranges":[{"startOffset":457,"endOffset":520,"count":0}],"isBlockCoverage":false},{"functionName":"setupIgnores","ranges":[{"startOffset":522,"endOffset":746,"count":1},{"startOffset":639,"endOffset":666,"count":0},{"startOffset":694,"endOffset":744,"count":0}],"isBlockCoverage":true},{"functionName":"ignoreMap","ranges":[{"startOffset":796,"endOffset":1089,"count":0}],"isBlockCoverage":false},{"functionName":"setopts","ranges":[{"startOffset":1091,"endOffset":3295,"count":1},{"startOffset":1155,"endOffset":1167,"count":0},{"startOffset":1241,"endOffset":1271,"count":0},{"startOffset":1273,"endOffset":1401,"count":0},{"startOffset":1749,"endOffset":1765,"count":0},{"startOffset":2419,"endOffset":2512,"count":0},{"startOffset":2650,"endOffset":2691,"count":0},{"startOffset":2891,"endOffset":2916,"count":0},{"startOffset":2957,"endOffset":3002,"count":0}],"isBlockCoverage":true},{"functionName":"finish","ranges":[{"startOffset":3297,"endOffset":4614,"count":0}],"isBlockCoverage":false},{"functionName":"mark","ranges":[{"startOffset":4616,"endOffset":5067,"count":0}],"isBlockCoverage":false},{"functionName":"makeAbs","ranges":[{"startOffset":5088,"endOffset":5443,"count":0}],"isBlockCoverage":false},{"functionName":"isIgnored","ranges":[{"startOffset":5639,"endOffset":5853,"count":0}],"isBlockCoverage":false},{"functionName":"childrenIgnored","ranges":[{"startOffset":5855,"endOffset":6047,"count":0}],"isBlockCoverage":false}]},{"scriptId":"507","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/inflight/inflight.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1365,"count":1}],"isBlockCoverage":true},{"functionName":"inflight","ranges":[{"startOffset":125,"endOffset":274,"count":0}],"isBlockCoverage":false},{"functionName":"makeres","ranges":[{"startOffset":276,"endOffset":1223,"count":0}],"isBlockCoverage":false},{"functionName":"slice","ranges":[{"startOffset":1225,"endOffset":1364,"count":0}],"isBlockCoverage":false}]},{"scriptId":"508","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/wrappy/wrappy.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":905,"count":1}],"isBlockCoverage":true},{"functionName":"wrappy","ranges":[{"startOffset":301,"endOffset":904,"count":3},{"startOffset":344,"endOffset":365,"count":0},{"startOffset":403,"endOffset":447,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":475,"endOffset":516,"count":0}],"isBlockCoverage":false},{"functionName":"wrapper","ranges":[{"startOffset":539,"endOffset":902,"count":0}],"isBlockCoverage":false}]},{"scriptId":"509","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/once/once.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":935,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":123,"endOffset":427,"count":0}],"isBlockCoverage":false},{"functionName":"once","ranges":[{"startOffset":430,"endOffset":610,"count":1}],"isBlockCoverage":true},{"functionName":"f","ranges":[{"startOffset":461,"endOffset":578,"count":0}],"isBlockCoverage":false},{"functionName":"onceStrict","ranges":[{"startOffset":612,"endOffset":934,"count":0}],"isBlockCoverage":false}]},{"scriptId":"510","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/test-exclude/node_modules/minimatch/minimatch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":26266,"count":1},{"startOffset":134,"endOffset":151,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":72,"endOffset":130,"count":1},{"startOffset":117,"endOffset":129,"count":0}],"isBlockCoverage":true},{"functionName":"charSet","ranges":[{"startOffset":1148,"endOffset":1262,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1199,"endOffset":1255,"count":14}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":1337,"endOffset":1480,"count":0}],"isBlockCoverage":false},{"functionName":"ext","ranges":[{"startOffset":1482,"endOffset":1665,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.defaults","ranges":[{"startOffset":1688,"endOffset":2709,"count":0}],"isBlockCoverage":false},{"functionName":"Minimatch.defaults","ranges":[{"startOffset":2732,"endOffset":2793,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch","ranges":[{"startOffset":2795,"endOffset":3068,"count":41516},{"startOffset":2885,"endOffset":2897,"count":0},{"startOffset":2993,"endOffset":3015,"count":0}],"isBlockCoverage":true},{"functionName":"Minimatch","ranges":[{"startOffset":3070,"endOffset":3676,"count":41516},{"startOffset":3146,"endOffset":3194,"count":0},{"startOffset":3243,"endOffset":3255,"count":0},{"startOffset":3383,"endOffset":3436,"count":0}],"isBlockCoverage":true},{"functionName":"Minimatch.debug","ranges":[{"startOffset":3706,"endOffset":3720,"count":7288233}],"isBlockCoverage":true},{"functionName":"make","ranges":[{"startOffset":3754,"endOffset":5005,"count":41516},{"startOffset":3935,"endOffset":3975,"count":0},{"startOffset":3992,"endOffset":4030,"count":0},{"startOffset":4188,"endOffset":4261,"count":0}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":4201,"endOffset":4261,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4595,"endOffset":4644,"count":209096}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4718,"endOffset":4780,"count":209096}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4898,"endOffset":4951,"count":209096}],"isBlockCoverage":true},{"functionName":"parseNegate","ranges":[{"startOffset":5053,"endOffset":5438,"count":41516},{"startOffset":5206,"endOffset":5212,"count":0},{"startOffset":5303,"endOffset":5348,"count":0},{"startOffset":5370,"endOffset":5413,"count":0}],"isBlockCoverage":true},{"functionName":"minimatch.braceExpand","ranges":[{"startOffset":5714,"endOffset":5784,"count":0}],"isBlockCoverage":false},{"functionName":"braceExpand","ranges":[{"startOffset":5833,"endOffset":6374,"count":41516},{"startOffset":5964,"endOffset":5996,"count":0},{"startOffset":6064,"endOffset":6073,"count":0},{"startOffset":6284,"endOffset":6346,"count":11192},{"startOffset":6346,"endOffset":6373,"count":30324}],"isBlockCoverage":true},{"functionName":"assertValidPattern","ranges":[{"startOffset":6436,"endOffset":6639,"count":531588},{"startOffset":6492,"endOffset":6540,"count":0},{"startOffset":6585,"endOffset":6637,"count":0}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":7337,"endOffset":17832,"count":407040},{"startOffset":7471,"endOffset":7556,"count":191560},{"startOffset":7523,"endOffset":7552,"count":0},{"startOffset":7556,"endOffset":7579,"count":215480},{"startOffset":7579,"endOffset":7588,"count":0},{"startOffset":7588,"endOffset":7973,"count":215480},{"startOffset":7973,"endOffset":7977,"count":19152},{"startOffset":8055,"endOffset":8119,"count":196328},{"startOffset":8108,"endOffset":8119,"count":0},{"startOffset":8688,"endOffset":8714,"count":2389452},{"startOffset":8726,"endOffset":13397,"count":2389452},{"startOffset":8835,"endOffset":8851,"count":0},{"startOffset":8853,"endOffset":8919,"count":0},{"startOffset":8977,"endOffset":9114,"count":0},{"startOffset":9122,"endOffset":9196,"count":0},{"startOffset":9276,"endOffset":9285,"count":0},{"startOffset":9292,"endOffset":9301,"count":84588},{"startOffset":9308,"endOffset":9317,"count":84588},{"startOffset":9324,"endOffset":9333,"count":84588},{"startOffset":9340,"endOffset":10205,"count":84588},{"startOffset":9551,"endOffset":9691,"count":0},{"startOffset":10174,"endOffset":10190,"count":0},{"startOffset":10213,"endOffset":10764,"count":0},{"startOffset":10772,"endOffset":11199,"count":0},{"startOffset":11207,"endOffset":11416,"count":0},{"startOffset":11478,"endOffset":11757,"count":0},{"startOffset":11765,"endOffset":13086,"count":0},{"startOffset":13094,"endOffset":13376,"count":2304864},{"startOffset":13206,"endOffset":13265,"count":0},{"startOffset":13299,"endOffset":13325,"count":325584},{"startOffset":13314,"endOffset":13324,"count":0},{"startOffset":13327,"endOffset":13359,"count":325584},{"startOffset":13397,"endOffset":13514,"count":215480},{"startOffset":13514,"endOffset":13890,"count":0},{"startOffset":13890,"endOffset":14294,"count":215480},{"startOffset":14294,"endOffset":15231,"count":0},{"startOffset":15231,"endOffset":15330,"count":215480},{"startOffset":15330,"endOffset":15371,"count":0},{"startOffset":15371,"endOffset":15547,"count":215480},{"startOffset":15547,"endOffset":15556,"count":65436},{"startOffset":15557,"endOffset":15566,"count":65436},{"startOffset":15567,"endOffset":15599,"count":65436},{"startOffset":15603,"endOffset":15920,"count":215480},{"startOffset":15920,"endOffset":16734,"count":0},{"startOffset":16734,"endOffset":16934,"count":215480},{"startOffset":16936,"endOffset":16963,"count":84588},{"startOffset":16963,"endOffset":16988,"count":215480},{"startOffset":16988,"endOffset":17020,"count":65436},{"startOffset":17020,"endOffset":17095,"count":215480},{"startOffset":17095,"endOffset":17126,"count":0},{"startOffset":17126,"endOffset":17286,"count":215480},{"startOffset":17286,"endOffset":17324,"count":130892},{"startOffset":17324,"endOffset":17355,"count":84588},{"startOffset":17355,"endOffset":17360,"count":0},{"startOffset":17361,"endOffset":17365,"count":84588},{"startOffset":17429,"endOffset":17768,"count":0},{"startOffset":17768,"endOffset":17831,"count":84588}],"isBlockCoverage":true},{"functionName":"clearStateChar","ranges":[{"startOffset":8141,"endOffset":8628,"count":2604932},{"startOffset":8189,"endOffset":8624,"count":84588},{"startOffset":8395,"endOffset":8466,"count":0},{"startOffset":8475,"endOffset":8530,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":14509,"endOffset":15009,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.makeRe","ranges":[{"startOffset":17853,"endOffset":17940,"count":0}],"isBlockCoverage":false},{"functionName":"makeRe","ranges":[{"startOffset":17978,"endOffset":19165,"count":0}],"isBlockCoverage":false},{"functionName":"minimatch.match","ranges":[{"startOffset":19185,"endOffset":19439,"count":0}],"isBlockCoverage":false},{"functionName":"match","ranges":[{"startOffset":19469,"endOffset":20941,"count":41516},{"startOffset":19688,"endOffset":19700,"count":0},{"startOffset":19719,"endOffset":19734,"count":0},{"startOffset":19752,"endOffset":19762,"count":0},{"startOffset":19764,"endOffset":19775,"count":0},{"startOffset":19866,"endOffset":19907,"count":0},{"startOffset":20512,"endOffset":20783,"count":209096},{"startOffset":20582,"endOffset":20605,"count":0},{"startOffset":20607,"endOffset":20638,"count":0},{"startOffset":20704,"endOffset":20779,"count":1576},{"startOffset":20736,"endOffset":20747,"count":0},{"startOffset":20783,"endOffset":20906,"count":39940},{"startOffset":20906,"endOffset":20918,"count":0},{"startOffset":20918,"endOffset":20940,"count":39940}],"isBlockCoverage":true},{"functionName":"Minimatch.matchOne","ranges":[{"startOffset":21192,"endOffset":26081,"count":680899},{"startOffset":21492,"endOffset":21504,"count":682475},{"startOffset":21525,"endOffset":24814,"count":682475},{"startOffset":21760,"endOffset":21772,"count":0},{"startOffset":21798,"endOffset":24443,"count":108528},{"startOffset":22653,"endOffset":23153,"count":1576},{"startOffset":22988,"endOffset":23125,"count":5409},{"startOffset":23071,"endOffset":23100,"count":0},{"startOffset":23103,"endOffset":23115,"count":0},{"startOffset":23153,"endOffset":23235,"count":106952},{"startOffset":23235,"endOffset":24076,"count":471803},{"startOffset":23478,"endOffset":23604,"count":0},{"startOffset":23800,"endOffset":23830,"count":0},{"startOffset":23833,"endOffset":23927,"count":0},{"startOffset":24076,"endOffset":24277,"count":106952},{"startOffset":24277,"endOffset":24418,"count":0},{"startOffset":24418,"endOffset":24443,"count":106952},{"startOffset":24443,"endOffset":24630,"count":573947},{"startOffset":24630,"endOffset":24701,"count":350981},{"startOffset":24701,"endOffset":24782,"count":222966},{"startOffset":24782,"endOffset":24798,"count":573947},{"startOffset":24798,"endOffset":24810,"count":572371},{"startOffset":24814,"endOffset":25425,"count":0},{"startOffset":25427,"endOffset":26080,"count":0}],"isBlockCoverage":true},{"functionName":"globUnescape","ranges":[{"startOffset":26115,"endOffset":26179,"count":130892}],"isBlockCoverage":true},{"functionName":"regExpEscape","ranges":[{"startOffset":26181,"endOffset":26265,"count":0}],"isBlockCoverage":false}]},{"scriptId":"511","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/test-exclude/node_modules/brace-expansion/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4792,"count":1}],"isBlockCoverage":true},{"functionName":"numeric","ranges":[{"startOffset":337,"endOffset":445,"count":0}],"isBlockCoverage":false},{"functionName":"escapeBraces","ranges":[{"startOffset":447,"endOffset":684,"count":30324}],"isBlockCoverage":true},{"functionName":"unescapeBraces","ranges":[{"startOffset":686,"endOffset":915,"count":197904}],"isBlockCoverage":true},{"functionName":"parseCommaParts","ranges":[{"startOffset":1079,"endOffset":1545,"count":47880},{"startOffset":1127,"endOffset":1139,"count":0},{"startOffset":1231,"endOffset":1544,"count":0}],"isBlockCoverage":true},{"functionName":"expandTop","ranges":[{"startOffset":1547,"endOffset":2124,"count":30324},{"startOffset":1589,"endOffset":1599,"count":0},{"startOffset":2018,"endOffset":2059,"count":0}],"isBlockCoverage":true},{"functionName":"identity","ranges":[{"startOffset":2126,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"embrace","ranges":[{"startOffset":2164,"endOffset":2215,"count":0}],"isBlockCoverage":false},{"functionName":"isPadded","ranges":[{"startOffset":2216,"endOffset":2269,"count":0}],"isBlockCoverage":false},{"functionName":"lte","ranges":[{"startOffset":2271,"endOffset":2310,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":2311,"endOffset":2350,"count":0}],"isBlockCoverage":false},{"functionName":"expand","ranges":[{"startOffset":2352,"endOffset":4790,"count":215460},{"startOffset":2450,"endOffset":2470,"count":47880},{"startOffset":2472,"endOffset":2485,"count":167580},{"startOffset":2485,"endOffset":2692,"count":47880},{"startOffset":2756,"endOffset":2769,"count":47880},{"startOffset":2771,"endOffset":2927,"count":0},{"startOffset":2927,"endOffset":2956,"count":47880},{"startOffset":2956,"endOffset":2991,"count":0},{"startOffset":2991,"endOffset":3352,"count":47880},{"startOffset":3056,"endOffset":3348,"count":0},{"startOffset":3352,"endOffset":3576,"count":47880},{"startOffset":3576,"endOffset":3599,"count":33516},{"startOffset":3604,"endOffset":3610,"count":14364},{"startOffset":3641,"endOffset":4471,"count":0},{"startOffset":4471,"endOffset":4586,"count":47880},{"startOffset":4586,"endOffset":4766,"count":151620},{"startOffset":4630,"endOffset":4762,"count":269724},{"startOffset":4693,"endOffset":4706,"count":197904},{"startOffset":4707,"endOffset":4719,"count":197904},{"startOffset":4766,"endOffset":4789,"count":47880}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3274,"endOffset":3332,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":4500,"endOffset":4541,"count":151620}],"isBlockCoverage":true}]},{"scriptId":"512","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@istanbuljs/schema/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10972,"count":1}],"isBlockCoverage":true},{"functionName":"get default","ranges":[{"startOffset":541,"endOffset":583,"count":1}],"isBlockCoverage":true},{"functionName":"defaultsReducer","ranges":[{"startOffset":10310,"endOffset":10548,"count":5},{"startOffset":10469,"endOffset":10495,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10624,"endOffset":10959,"count":5}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":10711,"endOffset":10927,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10853,"endOffset":10884,"count":5}],"isBlockCoverage":true}]},{"scriptId":"513","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@istanbuljs/schema/default-exclude.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":578,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":125,"endOffset":156,"count":6}],"isBlockCoverage":true}]},{"scriptId":"514","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@istanbuljs/schema/default-extension.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":88,"count":1}],"isBlockCoverage":true}]},{"scriptId":"515","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/test-exclude/is-outside-dir.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":174,"count":1},{"startOffset":49,"endOffset":108,"count":0}],"isBlockCoverage":true}]},{"scriptId":"516","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/test-exclude/is-outside-dir-posix.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":147,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":63,"endOffset":145,"count":1596}],"isBlockCoverage":true}]},{"scriptId":"517","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-coverage/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1898,"count":1}],"isBlockCoverage":true},{"functionName":"createCoverageSummary","ranges":[{"startOffset":851,"endOffset":1013,"count":9},{"startOffset":896,"endOffset":929,"count":0},{"startOffset":931,"endOffset":966,"count":0}],"isBlockCoverage":true},{"functionName":"createCoverageMap","ranges":[{"startOffset":1233,"endOffset":1383,"count":1},{"startOffset":1274,"endOffset":1303,"count":0},{"startOffset":1305,"endOffset":1340,"count":0}],"isBlockCoverage":true},{"functionName":"createFileCoverage","ranges":[{"startOffset":1606,"endOffset":1759,"count":0}],"isBlockCoverage":false}]},{"scriptId":"518","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-coverage/lib/file-coverage.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10161,"count":1}],"isBlockCoverage":true},{"functionName":"emptyCoverage","ranges":[{"startOffset":355,"endOffset":615,"count":0}],"isBlockCoverage":false},{"functionName":"assertValidObject","ranges":[{"startOffset":678,"endOffset":1059,"count":40},{"startOffset":904,"endOffset":1057,"count":0}],"isBlockCoverage":true},{"functionName":"keyFromLoc","ranges":[{"startOffset":1080,"endOffset":1161,"count":0}],"isBlockCoverage":false},{"functionName":"mergeProp","ranges":[{"startOffset":1182,"endOffset":2237,"count":0}],"isBlockCoverage":false},{"functionName":"FileCoverage","ranges":[{"startOffset":3075,"endOffset":3707,"count":40},{"startOffset":3145,"endOffset":3272,"count":0},{"startOffset":3316,"endOffset":3390,"count":0},{"startOffset":3435,"endOffset":3663,"count":20},{"startOffset":3573,"endOffset":3663,"count":0}],"isBlockCoverage":true},{"functionName":"getLineCoverage","ranges":[{"startOffset":3857,"endOffset":4464,"count":80}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4059,"endOffset":4432,"count":10364},{"startOffset":4174,"endOffset":4213,"count":0},{"startOffset":4348,"endOffset":4366,"count":0}],"isBlockCoverage":true},{"functionName":"getUncoveredLines","ranges":[{"startOffset":4633,"endOffset":4884,"count":0}],"isBlockCoverage":false},{"functionName":"getBranchCoverageByLine","ranges":[{"startOffset":5108,"endOffset":5866,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":5957,"endOffset":5999,"count":0}],"isBlockCoverage":false},{"functionName":"merge","ranges":[{"startOffset":6271,"endOffset":7648,"count":0}],"isBlockCoverage":false},{"functionName":"computeSimpleTotals","ranges":[{"startOffset":7654,"endOffset":8060,"count":60},{"startOffset":7764,"endOffset":7813,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7932,"endOffset":7940,"count":5207}],"isBlockCoverage":true},{"functionName":"computeBranchTotals","ranges":[{"startOffset":8066,"endOffset":8445,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8232,"endOffset":8366,"count":208}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8289,"endOffset":8305,"count":208}],"isBlockCoverage":true},{"functionName":"resetHits","ranges":[{"startOffset":8594,"endOffset":9276,"count":0}],"isBlockCoverage":false},{"functionName":"toSummary","ranges":[{"startOffset":9395,"endOffset":9938,"count":20},{"startOffset":9817,"endOffset":9891,"count":0}],"isBlockCoverage":true}]},{"scriptId":"519","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-coverage/lib/percent.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":367,"count":1}],"isBlockCoverage":true},{"functionName":"percent","ranges":[{"startOffset":165,"endOffset":365,"count":200},{"startOffset":232,"endOffset":328,"count":167},{"startOffset":328,"endOffset":363,"count":33}],"isBlockCoverage":true}]},{"scriptId":"520","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-coverage/lib/data-properties.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":283,"count":1}],"isBlockCoverage":true},{"functionName":"dataProperties","ranges":[{"startOffset":32,"endOffset":281,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100,"endOffset":277,"count":14}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":201,"endOffset":259,"count":2768}],"isBlockCoverage":true}]},{"scriptId":"521","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-coverage/lib/coverage-summary.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2811,"count":1}],"isBlockCoverage":true},{"functionName":"blankSummary","ranges":[{"startOffset":240,"endOffset":542,"count":9}],"isBlockCoverage":true},{"functionName":"empty","ranges":[{"startOffset":284,"endOffset":380,"count":45}],"isBlockCoverage":true},{"functionName":"assertValidSummary","ranges":[{"startOffset":613,"endOffset":917,"count":29},{"startOffset":759,"endOffset":915,"count":0}],"isBlockCoverage":true},{"functionName":"CoverageSummary","ranges":[{"startOffset":1413,"endOffset":1679,"count":29},{"startOffset":1450,"endOffset":1501,"count":9},{"startOffset":1501,"endOffset":1634,"count":20},{"startOffset":1543,"endOffset":1588,"count":0}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":1832,"endOffset":2351,"count":28}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2023,"endOffset":2321,"count":140},{"startOffset":2058,"endOffset":2311,"count":120}],"isBlockCoverage":true},{"functionName":"toJSON","ranges":[{"startOffset":2472,"endOffset":2514,"count":0}],"isBlockCoverage":false},{"functionName":"isEmpty","ranges":[{"startOffset":2587,"endOffset":2643,"count":56}],"isBlockCoverage":true}]},{"scriptId":"522","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-coverage/lib/coverage-map.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3478,"count":1}],"isBlockCoverage":true},{"functionName":"maybeConstruct","ranges":[{"startOffset":261,"endOffset":386,"count":40},{"startOffset":329,"endOffset":356,"count":0}],"isBlockCoverage":true},{"functionName":"loadMap","ranges":[{"startOffset":388,"endOffset":631,"count":21},{"startOffset":470,"endOffset":498,"count":1},{"startOffset":498,"endOffset":630,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":535,"endOffset":609,"count":20}],"isBlockCoverage":true},{"functionName":"CoverageMap","ranges":[{"startOffset":923,"endOffset":1088,"count":21},{"startOffset":982,"endOffset":1027,"count":0}],"isBlockCoverage":true},{"functionName":"merge","ranges":[{"startOffset":1346,"endOffset":1520,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1457,"endOffset":1512,"count":20}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":1761,"endOffset":1926,"count":0}],"isBlockCoverage":false},{"functionName":"toJSON","ranges":[{"startOffset":2035,"endOffset":2077,"count":0}],"isBlockCoverage":false},{"functionName":"files","ranges":[{"startOffset":2219,"endOffset":2273,"count":1}],"isBlockCoverage":true},{"functionName":"fileCoverageFor","ranges":[{"startOffset":2411,"endOffset":2596,"count":20},{"startOffset":2488,"endOffset":2571,"count":0}],"isBlockCoverage":true},{"functionName":"addFileCoverage","ranges":[{"startOffset":2873,"endOffset":3105,"count":20},{"startOffset":2996,"endOffset":3047,"count":0}],"isBlockCoverage":true},{"functionName":"getCoverageSummary","ranges":[{"startOffset":3244,"endOffset":3436,"count":0}],"isBlockCoverage":false}]},{"scriptId":"523","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-report/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":986,"count":1}],"isBlockCoverage":true},{"functionName":"createContext","ranges":[{"startOffset":481,"endOffset":542,"count":1}],"isBlockCoverage":true},{"functionName":"getDefaultWatermarks","ranges":[{"startOffset":845,"endOffset":915,"count":0}],"isBlockCoverage":false}]},{"scriptId":"524","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-report/lib/context.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4021,"count":1}],"isBlockCoverage":true},{"functionName":"defaultSourceLookup","ranges":[{"startOffset":397,"endOffset":593,"count":40},{"startOffset":496,"endOffset":591,"count":0}],"isBlockCoverage":true},{"functionName":"normalizeWatermarks","ranges":[{"startOffset":595,"endOffset":895,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":694,"endOffset":868,"count":4},{"startOffset":790,"endOffset":815,"count":0}],"isBlockCoverage":true},{"functionName":"Context","ranges":[{"startOffset":1419,"endOffset":1778,"count":1},{"startOffset":1467,"endOffset":1480,"count":0}],"isBlockCoverage":true},{"functionName":"getWriter","ranges":[{"startOffset":1950,"endOffset":1997,"count":0}],"isBlockCoverage":false},{"functionName":"getSource","ranges":[{"startOffset":2251,"endOffset":2322,"count":40}],"isBlockCoverage":true},{"functionName":"classForPercent","ranges":[{"startOffset":2656,"endOffset":2982,"count":282},{"startOffset":2762,"endOffset":2803,"count":0},{"startOffset":2839,"endOffset":2876,"count":0},{"startOffset":2913,"endOffset":2951,"count":264},{"startOffset":2951,"endOffset":2981,"count":18}],"isBlockCoverage":true},{"functionName":"getXMLWriter","ranges":[{"startOffset":3209,"endOffset":3289,"count":0}],"isBlockCoverage":false},{"functionName":"getVisitor","ranges":[{"startOffset":3582,"endOffset":3665,"count":0}],"isBlockCoverage":false},{"functionName":"getTree","ranges":[{"startOffset":3671,"endOffset":3760,"count":2}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3843,"endOffset":3989,"count":63},{"startOffset":3882,"endOffset":3950,"count":1}],"isBlockCoverage":true}]},{"scriptId":"525","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-report/lib/file-writer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4943,"count":1}],"isBlockCoverage":true},{"functionName":"colorize","ranges":[{"startOffset":801,"endOffset":854,"count":0}],"isBlockCoverage":false},{"functionName":"println","ranges":[{"startOffset":989,"endOffset":1041,"count":3029}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":1146,"endOffset":1156,"count":0}],"isBlockCoverage":false},{"functionName":"FileContentWriter","ranges":[{"startOffset":1348,"endOffset":1411,"count":59}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":1417,"endOffset":1471,"count":3357}],"isBlockCoverage":true},{"functionName":"close","ranges":[{"startOffset":1477,"endOffset":1523,"count":59}],"isBlockCoverage":true},{"functionName":"write","ranges":[{"startOffset":1753,"endOffset":1887,"count":0}],"isBlockCoverage":false},{"functionName":"colorize","ranges":[{"startOffset":1893,"endOffset":2250,"count":0}],"isBlockCoverage":false},{"functionName":"FileWriter","ranges":[{"startOffset":2460,"endOffset":2612,"count":32},{"startOffset":2505,"endOffset":2574,"count":0}],"isBlockCoverage":true},{"functionName":"startCapture","ranges":[{"startOffset":2730,"endOffset":2776,"count":0}],"isBlockCoverage":false},{"functionName":"stopCapture","ranges":[{"startOffset":2789,"endOffset":2835,"count":0}],"isBlockCoverage":false},{"functionName":"getOutput","ranges":[{"startOffset":2848,"endOffset":2890,"count":0}],"isBlockCoverage":false},{"functionName":"resetOutput","ranges":[{"startOffset":2903,"endOffset":2945,"count":0}],"isBlockCoverage":false},{"functionName":"writerForDir","ranges":[{"startOffset":3167,"endOffset":3423,"count":31},{"startOffset":3227,"endOffset":3357,"count":0}],"isBlockCoverage":true},{"functionName":"copyFile","ranges":[{"startOffset":3786,"endOffset":4258,"count":14},{"startOffset":3854,"endOffset":3936,"count":0},{"startOffset":4069,"endOffset":4145,"count":6},{"startOffset":4145,"endOffset":4210,"count":8}],"isBlockCoverage":true},{"functionName":"writeFile","ranges":[{"startOffset":4522,"endOffset":4910,"count":59},{"startOffset":4583,"endOffset":4634,"count":0},{"startOffset":4670,"endOffset":4752,"count":0}],"isBlockCoverage":true}]},{"scriptId":"526","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-report/node_modules/make-dir/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3124,"count":1}],"isBlockCoverage":true},{"functionName":"checkPath","ranges":[{"startOffset":332,"endOffset":633,"count":73},{"startOffset":376,"endOffset":631,"count":0}],"isBlockCoverage":true},{"functionName":"processOptions","ranges":[{"startOffset":659,"endOffset":815,"count":73}],"isBlockCoverage":true},{"functionName":"permissionError","ranges":[{"startOffset":842,"endOffset":1156,"count":0}],"isBlockCoverage":false},{"functionName":"makeDir","ranges":[{"startOffset":1175,"endOffset":2183,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":2235,"endOffset":3122,"count":73},{"startOffset":2510,"endOffset":3121,"count":0}],"isBlockCoverage":true},{"functionName":"make","ranges":[{"startOffset":2526,"endOffset":3083,"count":0}],"isBlockCoverage":false}]},{"scriptId":"527","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/semver/semver.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42130,"count":1},{"startOffset":153,"endOffset":202,"count":0},{"startOffset":204,"endOffset":355,"count":0},{"startOffset":622,"endOffset":670,"count":0},{"startOffset":8258,"endOffset":8331,"count":38},{"startOffset":8293,"endOffset":8329,"count":34}],"isBlockCoverage":true},{"functionName":"debug","ranges":[{"startOffset":216,"endOffset":353,"count":0}],"isBlockCoverage":false},{"functionName":"debug","ranges":[{"startOffset":373,"endOffset":387,"count":56}],"isBlockCoverage":true},{"functionName":"tok","ranges":[{"startOffset":879,"endOffset":912,"count":38}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":8355,"endOffset":8881,"count":0}],"isBlockCoverage":false},{"functionName":"valid","ranges":[{"startOffset":8905,"endOffset":9006,"count":0}],"isBlockCoverage":false},{"functionName":"clean","ranges":[{"startOffset":9030,"endOffset":9160,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer","ranges":[{"startOffset":9187,"endOffset":10883,"count":4},{"startOffset":9239,"endOffset":9269,"count":3},{"startOffset":9271,"endOffset":9353,"count":1},{"startOffset":9387,"endOffset":9507,"count":2},{"startOffset":9458,"endOffset":9503,"count":0},{"startOffset":9507,"endOffset":9606,"count":2},{"startOffset":9546,"endOffset":9606,"count":0},{"startOffset":9606,"endOffset":9643,"count":2},{"startOffset":9643,"endOffset":9728,"count":0},{"startOffset":9728,"endOffset":9763,"count":2},{"startOffset":9763,"endOffset":9808,"count":0},{"startOffset":9808,"endOffset":9948,"count":2},{"startOffset":9948,"endOffset":9961,"count":0},{"startOffset":9962,"endOffset":9974,"count":2},{"startOffset":9987,"endOffset":10047,"count":0},{"startOffset":10047,"endOffset":10220,"count":2},{"startOffset":10222,"endOffset":10276,"count":0},{"startOffset":10276,"endOffset":10331,"count":2},{"startOffset":10333,"endOffset":10387,"count":0},{"startOffset":10387,"endOffset":10442,"count":2},{"startOffset":10444,"endOffset":10498,"count":0},{"startOffset":10498,"endOffset":10585,"count":2},{"startOffset":10585,"endOffset":10821,"count":0},{"startOffset":10821,"endOffset":10843,"count":2},{"startOffset":10843,"endOffset":10860,"count":0},{"startOffset":10861,"endOffset":10865,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10635,"endOffset":10816,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.format","ranges":[{"startOffset":10911,"endOffset":11102,"count":2},{"startOffset":11021,"endOffset":11078,"count":0}],"isBlockCoverage":true},{"functionName":"SemVer.toString","ranges":[{"startOffset":11132,"endOffset":11169,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compare","ranges":[{"startOffset":11198,"endOffset":11423,"count":1},{"startOffset":11312,"endOffset":11361,"count":0},{"startOffset":11396,"endOffset":11421,"count":0}],"isBlockCoverage":true},{"functionName":"SemVer.compareMain","ranges":[{"startOffset":11456,"endOffset":11726,"count":1},{"startOffset":11509,"endOffset":11558,"count":0},{"startOffset":11613,"endOffset":11668,"count":0},{"startOffset":11669,"endOffset":11724,"count":0}],"isBlockCoverage":true},{"functionName":"SemVer.comparePre","ranges":[{"startOffset":11758,"endOffset":12545,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.compareBuild","ranges":[{"startOffset":12579,"endOffset":13071,"count":0}],"isBlockCoverage":false},{"functionName":"SemVer.inc","ranges":[{"startOffset":13241,"endOffset":16302,"count":0}],"isBlockCoverage":false},{"functionName":"inc","ranges":[{"startOffset":16322,"endOffset":16579,"count":0}],"isBlockCoverage":false},{"functionName":"diff","ranges":[{"startOffset":16601,"endOffset":17129,"count":0}],"isBlockCoverage":false},{"functionName":"compareIdentifiers","ranges":[{"startOffset":17205,"endOffset":17450,"count":1},{"startOffset":17367,"endOffset":17370,"count":0},{"startOffset":17393,"endOffset":17397,"count":0},{"startOffset":17420,"endOffset":17423,"count":0},{"startOffset":17436,"endOffset":17440,"count":0}],"isBlockCoverage":true},{"functionName":"rcompareIdentifiers","ranges":[{"startOffset":17502,"endOffset":17575,"count":0}],"isBlockCoverage":false},{"functionName":"major","ranges":[{"startOffset":17599,"endOffset":17664,"count":0}],"isBlockCoverage":false},{"functionName":"minor","ranges":[{"startOffset":17688,"endOffset":17753,"count":0}],"isBlockCoverage":false},{"functionName":"patch","ranges":[{"startOffset":17777,"endOffset":17842,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":17870,"endOffset":17964,"count":1}],"isBlockCoverage":true},{"functionName":"compareLoose","ranges":[{"startOffset":18002,"endOffset":18063,"count":0}],"isBlockCoverage":false},{"functionName":"compareBuild","ranges":[{"startOffset":18101,"endOffset":18287,"count":0}],"isBlockCoverage":false},{"functionName":"rcompare","ranges":[{"startOffset":18317,"endOffset":18382,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":18404,"endOffset":18522,"count":0}],"isBlockCoverage":false},{"functionName":"rsort","ranges":[{"startOffset":18546,"endOffset":18665,"count":0}],"isBlockCoverage":false},{"functionName":"gt","ranges":[{"startOffset":18683,"endOffset":18746,"count":0}],"isBlockCoverage":false},{"functionName":"lt","ranges":[{"startOffset":18764,"endOffset":18827,"count":0}],"isBlockCoverage":false},{"functionName":"eq","ranges":[{"startOffset":18845,"endOffset":18910,"count":0}],"isBlockCoverage":false},{"functionName":"neq","ranges":[{"startOffset":18930,"endOffset":18996,"count":0}],"isBlockCoverage":false},{"functionName":"gte","ranges":[{"startOffset":19016,"endOffset":19081,"count":1}],"isBlockCoverage":true},{"functionName":"lte","ranges":[{"startOffset":19101,"endOffset":19166,"count":0}],"isBlockCoverage":false},{"functionName":"cmp","ranges":[{"startOffset":19186,"endOffset":19900,"count":1},{"startOffset":19239,"endOffset":19381,"count":0},{"startOffset":19387,"endOffset":19529,"count":0},{"startOffset":19535,"endOffset":19543,"count":0},{"startOffset":19548,"endOffset":19557,"count":0},{"startOffset":19562,"endOffset":19601,"count":0},{"startOffset":19607,"endOffset":19647,"count":0},{"startOffset":19653,"endOffset":19691,"count":0},{"startOffset":19743,"endOffset":19781,"count":0},{"startOffset":19787,"endOffset":19827,"count":0},{"startOffset":19833,"endOffset":19894,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator","ranges":[{"startOffset":19934,"endOffset":20586,"count":1},{"startOffset":20019,"endOffset":20101,"count":0},{"startOffset":20137,"endOffset":20245,"count":0},{"startOffset":20284,"endOffset":20330,"count":0},{"startOffset":20472,"endOffset":20497,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator.parse","ranges":[{"startOffset":20630,"endOffset":21093,"count":1},{"startOffset":20677,"endOffset":20700,"count":0},{"startOffset":20755,"endOffset":20815,"count":0},{"startOffset":20861,"endOffset":20865,"count":0},{"startOffset":20895,"endOffset":20923,"count":0},{"startOffset":20998,"endOffset":21025,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator.toString","ranges":[{"startOffset":21127,"endOffset":21162,"count":1}],"isBlockCoverage":true},{"functionName":"Comparator.test","ranges":[{"startOffset":21192,"endOffset":21550,"count":1},{"startOffset":21316,"endOffset":21337,"count":0},{"startOffset":21374,"endOffset":21483,"count":0}],"isBlockCoverage":true},{"functionName":"Comparator.intersects","ranges":[{"startOffset":21586,"endOffset":23312,"count":0}],"isBlockCoverage":false},{"functionName":"Range","ranges":[{"startOffset":23336,"endOffset":24393,"count":1},{"startOffset":23385,"endOffset":23415,"count":0},{"startOffset":23531,"endOffset":23727,"count":0},{"startOffset":23764,"endOffset":23812,"count":0},{"startOffset":23846,"endOffset":23888,"count":0},{"startOffset":24311,"endOffset":24374,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24105,"endOffset":24168,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24183,"endOffset":24284,"count":1}],"isBlockCoverage":true},{"functionName":"Range.format","ranges":[{"startOffset":24420,"endOffset":24559,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":24462,"endOffset":24518,"count":1}],"isBlockCoverage":true},{"functionName":"Range.toString","ranges":[{"startOffset":24588,"endOffset":24623,"count":0}],"isBlockCoverage":false},{"functionName":"Range.parseRange","ranges":[{"startOffset":24654,"endOffset":25892,"count":1},{"startOffset":24788,"endOffset":24812,"count":0},{"startOffset":25432,"endOffset":25455,"count":0},{"startOffset":25633,"endOffset":25785,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25508,"endOffset":25576,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25723,"endOffset":25780,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":25802,"endOffset":25869,"count":1}],"isBlockCoverage":true},{"functionName":"Range.intersects","ranges":[{"startOffset":25923,"endOffset":26537,"count":0}],"isBlockCoverage":false},{"functionName":"isSatisfiable","ranges":[{"startOffset":26637,"endOffset":27067,"count":0}],"isBlockCoverage":false},{"functionName":"toComparators","ranges":[{"startOffset":27157,"endOffset":27357,"count":0}],"isBlockCoverage":false},{"functionName":"parseComparator","ranges":[{"startOffset":27503,"endOffset":27838,"count":1}],"isBlockCoverage":true},{"functionName":"isX","ranges":[{"startOffset":27840,"endOffset":27916,"count":3}],"isBlockCoverage":true},{"functionName":"replaceTildes","ranges":[{"startOffset":28189,"endOffset":28341,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28268,"endOffset":28328,"count":1}],"isBlockCoverage":true},{"functionName":"replaceTilde","ranges":[{"startOffset":28343,"endOffset":29131,"count":1},{"startOffset":28407,"endOffset":28425,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28465,"endOffset":29128,"count":0}],"isBlockCoverage":false},{"functionName":"replaceCarets","ranges":[{"startOffset":29330,"endOffset":29482,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29409,"endOffset":29469,"count":1}],"isBlockCoverage":true},{"functionName":"replaceCaret","ranges":[{"startOffset":29484,"endOffset":30969,"count":1},{"startOffset":29580,"endOffset":29598,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29638,"endOffset":30966,"count":0}],"isBlockCoverage":false},{"functionName":"replaceXRanges","ranges":[{"startOffset":30971,"endOffset":31159,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31085,"endOffset":31146,"count":1}],"isBlockCoverage":true},{"functionName":"replaceXRange","ranges":[{"startOffset":31161,"endOffset":32910,"count":1},{"startOffset":31247,"endOffset":31266,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":31307,"endOffset":32907,"count":1},{"startOffset":31505,"endOffset":31512,"count":0},{"startOffset":31514,"endOffset":31537,"count":0},{"startOffset":31702,"endOffset":31708,"count":0},{"startOffset":31727,"endOffset":31904,"count":0},{"startOffset":31928,"endOffset":32654,"count":0},{"startOffset":32668,"endOffset":32742,"count":0},{"startOffset":32756,"endOffset":32854,"count":0}],"isBlockCoverage":true},{"functionName":"replaceStars","ranges":[{"startOffset":33035,"endOffset":33229,"count":1}],"isBlockCoverage":true},{"functionName":"hyphenReplace","ranges":[{"startOffset":33445,"endOffset":34015,"count":0}],"isBlockCoverage":false},{"functionName":"Range.test","ranges":[{"startOffset":34102,"endOffset":34454,"count":1},{"startOffset":34139,"endOffset":34161,"count":0},{"startOffset":34266,"endOffset":34303,"count":0},{"startOffset":34437,"endOffset":34453,"count":0}],"isBlockCoverage":true},{"functionName":"testSet","ranges":[{"startOffset":34456,"endOffset":35477,"count":1},{"startOffset":34571,"endOffset":34597,"count":0},{"startOffset":34635,"endOffset":34664,"count":0},{"startOffset":34666,"endOffset":35460,"count":0}],"isBlockCoverage":true},{"functionName":"satisfies","ranges":[{"startOffset":35509,"endOffset":35670,"count":1},{"startOffset":35606,"endOffset":35639,"count":0}],"isBlockCoverage":true},{"functionName":"maxSatisfying","ranges":[{"startOffset":35710,"endOffset":36156,"count":0}],"isBlockCoverage":false},{"functionName":"minSatisfying","ranges":[{"startOffset":36196,"endOffset":36641,"count":0}],"isBlockCoverage":false},{"functionName":"minVersion","ranges":[{"startOffset":36675,"endOffset":37918,"count":0}],"isBlockCoverage":false},{"functionName":"validRange","ranges":[{"startOffset":37952,"endOffset":38191,"count":0}],"isBlockCoverage":false},{"functionName":"ltr","ranges":[{"startOffset":38287,"endOffset":38376,"count":0}],"isBlockCoverage":false},{"functionName":"gtr","ranges":[{"startOffset":38476,"endOffset":38565,"count":0}],"isBlockCoverage":false},{"functionName":"outside","ranges":[{"startOffset":38593,"endOffset":40384,"count":0}],"isBlockCoverage":false},{"functionName":"prerelease","ranges":[{"startOffset":40418,"endOffset":40572,"count":0}],"isBlockCoverage":false},{"functionName":"intersects","ranges":[{"startOffset":40606,"endOffset":40734,"count":0}],"isBlockCoverage":false},{"functionName":"coerce","ranges":[{"startOffset":40760,"endOffset":42129,"count":0}],"isBlockCoverage":false}]},{"scriptId":"528","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-report/node_modules/supports-color/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2748,"count":1},{"startOffset":250,"endOffset":270,"count":0},{"startOffset":374,"endOffset":394,"count":0},{"startOffset":422,"endOffset":646,"count":0}],"isBlockCoverage":true},{"functionName":"translateLevel","ranges":[{"startOffset":648,"endOffset":806,"count":2},{"startOffset":699,"endOffset":719,"count":0}],"isBlockCoverage":true},{"functionName":"supportsColor","ranges":[{"startOffset":808,"endOffset":2439,"count":2},{"startOffset":881,"endOffset":897,"count":0},{"startOffset":985,"endOffset":1001,"count":0},{"startOffset":1030,"endOffset":1046,"count":0},{"startOffset":1080,"endOffset":1107,"count":0},{"startOffset":1109,"endOffset":1125,"count":0},{"startOffset":1184,"endOffset":1202,"count":0},{"startOffset":1239,"endOffset":1594,"count":0},{"startOffset":1614,"endOffset":1794,"count":0},{"startOffset":1828,"endOffset":1909,"count":0},{"startOffset":1963,"endOffset":2438,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1706,"endOffset":1725,"count":0}],"isBlockCoverage":false},{"functionName":"getSupportLevel","ranges":[{"startOffset":2441,"endOffset":2570,"count":0}],"isBlockCoverage":false}]},{"scriptId":"529","url":"node:os","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9577,"count":1}],"isBlockCoverage":false},{"functionName":"getCheckedFunction","ranges":[{"startOffset":2047,"endOffset":2288,"count":4}],"isBlockCoverage":true},{"functionName":"checkError","ranges":[{"startOffset":2106,"endOffset":2284,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease","ranges":[{"startOffset":2670,"endOffset":2683,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType","ranges":[{"startOffset":2732,"endOffset":2742,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion","ranges":[{"startOffset":2794,"endOffset":2807,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine","ranges":[{"startOffset":2857,"endOffset":2870,"count":0}],"isBlockCoverage":false},{"functionName":"getAvailableParallelism.<computed>","ranges":[{"startOffset":2918,"endOffset":2949,"count":0}],"isBlockCoverage":false},{"functionName":"getFreeMem.<computed>","ranges":[{"startOffset":2983,"endOffset":3001,"count":0}],"isBlockCoverage":false},{"functionName":"getHostname.<computed>","ranges":[{"startOffset":3036,"endOffset":3055,"count":0}],"isBlockCoverage":false},{"functionName":"getOSVersion.<computed>","ranges":[{"startOffset":3091,"endOffset":3111,"count":0}],"isBlockCoverage":false},{"functionName":"getOSType.<computed>","ranges":[{"startOffset":3144,"endOffset":3161,"count":0}],"isBlockCoverage":false},{"functionName":"getOSRelease.<computed>","ranges":[{"startOffset":3197,"endOffset":3217,"count":0}],"isBlockCoverage":false},{"functionName":"getMachine.<computed>","ranges":[{"startOffset":3251,"endOffset":3269,"count":0}],"isBlockCoverage":false},{"functionName":"getHomeDirectory.<computed>","ranges":[{"startOffset":3309,"endOffset":3333,"count":0}],"isBlockCoverage":false},{"functionName":"getTotalMem.<computed>","ranges":[{"startOffset":3368,"endOffset":3387,"count":0}],"isBlockCoverage":false},{"functionName":"getUptime.<computed>","ranges":[{"startOffset":3420,"endOffset":3437,"count":0}],"isBlockCoverage":false},{"functionName":"loadavg","ranges":[{"startOffset":3575,"endOffset":3675,"count":0}],"isBlockCoverage":false},{"functionName":"cpus","ranges":[{"startOffset":3958,"endOffset":4385,"count":0}],"isBlockCoverage":false},{"functionName":"arch","ranges":[{"startOffset":4416,"endOffset":4458,"count":0}],"isBlockCoverage":false},{"functionName":"arch.<computed>","ranges":[{"startOffset":4485,"endOffset":4503,"count":0}],"isBlockCoverage":false},{"functionName":"platform","ranges":[{"startOffset":4535,"endOffset":4585,"count":0}],"isBlockCoverage":false},{"functionName":"platform.<computed>","ranges":[{"startOffset":4616,"endOffset":4638,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir","ranges":[{"startOffset":4670,"endOffset":5275,"count":0}],"isBlockCoverage":false},{"functionName":"tmpdir.<computed>","ranges":[{"startOffset":5304,"endOffset":5318,"count":0}],"isBlockCoverage":false},{"functionName":"endianness","ranges":[{"startOffset":5355,"endOffset":5402,"count":0}],"isBlockCoverage":false},{"functionName":"endianness.<computed>","ranges":[{"startOffset":5435,"endOffset":5452,"count":0}],"isBlockCoverage":false},{"functionName":"countBinaryOnes","ranges":[{"startOffset":5540,"endOffset":5793,"count":0}],"isBlockCoverage":false},{"functionName":"getCIDR","ranges":[{"startOffset":5795,"endOffset":6531,"count":0}],"isBlockCoverage":false},{"functionName":"networkInterfaces","ranges":[{"startOffset":6742,"endOffset":7434,"count":0}],"isBlockCoverage":false},{"functionName":"setPriority","ranges":[{"startOffset":7518,"endOffset":7807,"count":0}],"isBlockCoverage":false},{"functionName":"getPriority","ranges":[{"startOffset":7865,"endOffset":8120,"count":0}],"isBlockCoverage":false},{"functionName":"userInfo","ranges":[{"startOffset":8424,"endOffset":8712,"count":0}],"isBlockCoverage":false}]},{"scriptId":"530","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-report/node_modules/has-flag/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":330,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":328,"count":16},{"startOffset":102,"endOffset":106,"count":0},{"startOffset":128,"endOffset":133,"count":0},{"startOffset":262,"endOffset":325,"count":0}],"isBlockCoverage":true}]},{"scriptId":"531","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-report/lib/xml-writer.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2415,"count":1}],"isBlockCoverage":true},{"functionName":"attrString","ranges":[{"startOffset":169,"endOffset":298,"count":0}],"isBlockCoverage":false},{"functionName":"XMLWriter","ranges":[{"startOffset":485,"endOffset":577,"count":0}],"isBlockCoverage":false},{"functionName":"indent","ranges":[{"startOffset":583,"endOffset":662,"count":0}],"isBlockCoverage":false},{"functionName":"openTag","ranges":[{"startOffset":849,"endOffset":1004,"count":0}],"isBlockCoverage":false},{"functionName":"closeTag","ranges":[{"startOffset":1185,"endOffset":1619,"count":0}],"isBlockCoverage":false},{"functionName":"inlineTag","ranges":[{"startOffset":1876,"endOffset":2146,"count":0}],"isBlockCoverage":false},{"functionName":"closeAll","ranges":[{"startOffset":2218,"endOffset":2383,"count":0}],"isBlockCoverage":false}]},{"scriptId":"532","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-report/lib/tree.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3809,"count":1}],"isBlockCoverage":true},{"functionName":"Visitor","ranges":[{"startOffset":1077,"endOffset":1140,"count":3}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1205,"endOffset":1218,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1233,"endOffset":1521,"count":5}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":1336,"endOffset":1503,"count":120},{"startOffset":1418,"endOffset":1489,"count":99}],"isBlockCoverage":true},{"functionName":"CompositeVisitor","ranges":[{"startOffset":1570,"endOffset":1873,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":1938,"endOffset":1951,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1966,"endOffset":2207,"count":5}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":2050,"endOffset":2189,"count":0}],"isBlockCoverage":false},{"functionName":"isRoot","ranges":[{"startOffset":2232,"endOffset":2282,"count":29}],"isBlockCoverage":true},{"functionName":"visit","ranges":[{"startOffset":2619,"endOffset":2984,"count":87},{"startOffset":2673,"endOffset":2728,"count":27},{"startOffset":2728,"endOffset":2788,"count":60},{"startOffset":2920,"endOffset":2978,"count":27}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2825,"endOffset":2886,"count":84}],"isBlockCoverage":true},{"functionName":"BaseTree","ranges":[{"startOffset":3077,"endOffset":3128,"count":1}],"isBlockCoverage":true},{"functionName":"getRoot","ranges":[{"startOffset":3191,"endOffset":3234,"count":9}],"isBlockCoverage":true},{"functionName":"visit","ranges":[{"startOffset":3453,"endOffset":3721,"count":3}],"isBlockCoverage":true}]},{"scriptId":"533","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-report/lib/watermarks.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":349,"count":1}],"isBlockCoverage":true},{"functionName":"getDefault","ranges":[{"startOffset":170,"endOffset":345,"count":1}],"isBlockCoverage":true}]},{"scriptId":"534","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-report/lib/summarizer-factory.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7356,"count":1}],"isBlockCoverage":true},{"functionName":"ReportNode","ranges":[{"startOffset":322,"endOffset":503,"count":29}],"isBlockCoverage":true},{"functionName":"createRoot","ranges":[{"startOffset":516,"endOffset":700,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":616,"endOffset":670,"count":8}],"isBlockCoverage":true},{"functionName":"addChild","ranges":[{"startOffset":706,"endOffset":793,"count":28}],"isBlockCoverage":true},{"functionName":"asRelative","ranges":[{"startOffset":799,"endOffset":924,"count":1034},{"startOffset":854,"endOffset":900,"count":0}],"isBlockCoverage":true},{"functionName":"getQualifiedName","ranges":[{"startOffset":930,"endOffset":1010,"count":826}],"isBlockCoverage":true},{"functionName":"getRelativeName","ranges":[{"startOffset":1016,"endOffset":1536,"count":208},{"startOffset":1181,"endOffset":1194,"count":152},{"startOffset":1195,"endOffset":1209,"count":56},{"startOffset":1254,"endOffset":1476,"count":152},{"startOffset":1362,"endOffset":1410,"count":224},{"startOffset":1476,"endOffset":1535,"count":56}],"isBlockCoverage":true},{"functionName":"getParent","ranges":[{"startOffset":1542,"endOffset":1589,"count":391}],"isBlockCoverage":true},{"functionName":"getChildren","ranges":[{"startOffset":1595,"endOffset":1646,"count":114}],"isBlockCoverage":true},{"functionName":"isSummary","ranges":[{"startOffset":1652,"endOffset":1706,"count":971}],"isBlockCoverage":true},{"functionName":"getFileCoverage","ranges":[{"startOffset":1712,"endOffset":1771,"count":80}],"isBlockCoverage":true},{"functionName":"getCoverageSummary","ranges":[{"startOffset":1777,"endOffset":2627,"count":162},{"startOffset":1850,"endOffset":1859,"count":0},{"startOffset":1961,"endOffset":2008,"count":133},{"startOffset":2008,"endOffset":2041,"count":29},{"startOffset":2041,"endOffset":2110,"count":20},{"startOffset":2110,"endOffset":2562,"count":9},{"startOffset":2491,"endOffset":2503,"count":0},{"startOffset":2505,"endOffset":2552,"count":0},{"startOffset":2562,"endOffset":2626,"count":29}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2240,"endOffset":2460,"count":28},{"startOffset":2281,"endOffset":2301,"count":0},{"startOffset":2303,"endOffset":2350,"count":0}],"isBlockCoverage":true},{"functionName":"ReportTree","ranges":[{"startOffset":2671,"endOffset":3399,"count":1}],"isBlockCoverage":true},{"functionName":"maybePrefix","ranges":[{"startOffset":2754,"endOffset":2884,"count":29},{"startOffset":2811,"endOffset":2874,"count":28}],"isBlockCoverage":true},{"functionName":"onSummary","ranges":[{"startOffset":2954,"endOffset":3381,"count":9}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3042,"endOffset":3365,"count":26},{"startOffset":3221,"endOffset":3225,"count":1},{"startOffset":3250,"endOffset":3346,"count":25},{"startOffset":3316,"endOffset":3346,"count":0}],"isBlockCoverage":true},{"functionName":"findCommonParent","ranges":[{"startOffset":3403,"endOffset":3561,"count":1},{"startOffset":3537,"endOffset":3552,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3471,"endOffset":3518,"count":20}],"isBlockCoverage":true},{"functionName":"findOrCreateParent","ranges":[{"startOffset":3563,"endOffset":3861,"count":20},{"startOffset":3701,"endOffset":3839,"count":8}],"isBlockCoverage":true},{"functionName":"created","ranges":[{"startOffset":3622,"endOffset":3630,"count":8}],"isBlockCoverage":true},{"functionName":"toDirParents","ranges":[{"startOffset":3863,"endOffset":4137,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3951,"endOffset":4097,"count":20}],"isBlockCoverage":true},{"functionName":"addAllPaths","ranges":[{"startOffset":4139,"endOffset":4536,"count":0}],"isBlockCoverage":false},{"functionName":"foldIntoOneDir","ranges":[{"startOffset":4538,"endOffset":4856,"count":0}],"isBlockCoverage":false},{"functionName":"pkgSummaryPrefix","ranges":[{"startOffset":4858,"endOffset":5091,"count":1},{"startOffset":4966,"endOffset":4989,"count":0},{"startOffset":5026,"endOffset":5056,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4937,"endOffset":4963,"count":2}],"isBlockCoverage":true},{"functionName":"SummarizerFactory","ranges":[{"startOffset":5123,"endOffset":5771,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5323,"endOffset":5472,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5556,"endOffset":5576,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5672,"endOffset":5753,"count":20}],"isBlockCoverage":true},{"functionName":"get defaultSummarizer","ranges":[{"startOffset":5777,"endOffset":5854,"count":2}],"isBlockCoverage":true},{"functionName":"get flat","ranges":[{"startOffset":5860,"endOffset":6198,"count":0}],"isBlockCoverage":false},{"functionName":"_createPkg","ranges":[{"startOffset":6204,"endOffset":6534,"count":1},{"startOffset":6316,"endOffset":6377,"count":0}],"isBlockCoverage":true},{"functionName":"get pkg","ranges":[{"startOffset":6540,"endOffset":6663,"count":2},{"startOffset":6576,"endOffset":6630,"count":1}],"isBlockCoverage":true},{"functionName":"_createNested","ranges":[{"startOffset":6669,"endOffset":7172,"count":0}],"isBlockCoverage":false},{"functionName":"get nested","ranges":[{"startOffset":7178,"endOffset":7316,"count":0}],"isBlockCoverage":false}]},{"scriptId":"535","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-report/lib/path.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3709,"count":1}],"isBlockCoverage":true},{"functionName":"makeRelativeNormalizedPath","ranges":[{"startOffset":278,"endOffset":1160,"count":20},{"startOffset":528,"endOffset":651,"count":0},{"startOffset":718,"endOffset":744,"count":0},{"startOffset":767,"endOffset":943,"count":0},{"startOffset":1004,"endOffset":1037,"count":0},{"startOffset":1075,"endOffset":1114,"count":0}],"isBlockCoverage":true},{"functionName":"Path","ranges":[{"startOffset":1179,"endOffset":1552,"count":289},{"startOffset":1244,"endOffset":1288,"count":269},{"startOffset":1288,"endOffset":1546,"count":20},{"startOffset":1407,"endOffset":1546,"count":0}],"isBlockCoverage":true},{"functionName":"toString","ranges":[{"startOffset":1558,"endOffset":1609,"count":1114}],"isBlockCoverage":true},{"functionName":"hasParent","ranges":[{"startOffset":1615,"endOffset":1668,"count":40}],"isBlockCoverage":true},{"functionName":"parent","ranges":[{"startOffset":1674,"endOffset":1881,"count":40},{"startOffset":1716,"endOffset":1796,"count":0}],"isBlockCoverage":true},{"functionName":"elements","ranges":[{"startOffset":1887,"endOffset":1936,"count":152}],"isBlockCoverage":true},{"functionName":"name","ranges":[{"startOffset":1942,"endOffset":1992,"count":1}],"isBlockCoverage":true},{"functionName":"contains","ranges":[{"startOffset":1998,"endOffset":2281,"count":208},{"startOffset":2071,"endOffset":2108,"count":0},{"startOffset":2155,"endOffset":2254,"count":224},{"startOffset":2199,"endOffset":2244,"count":0}],"isBlockCoverage":true},{"functionName":"ancestorOf","ranges":[{"startOffset":2287,"endOffset":2381,"count":208}],"isBlockCoverage":true},{"functionName":"descendantOf","ranges":[{"startOffset":2387,"endOffset":2483,"count":0}],"isBlockCoverage":false},{"functionName":"commonPrefixPath","ranges":[{"startOffset":2489,"endOffset":2855,"count":20},{"startOffset":2562,"endOffset":2576,"count":1},{"startOffset":2577,"endOffset":2590,"count":19},{"startOffset":2669,"endOffset":2819,"count":122},{"startOffset":2765,"endOffset":2809,"count":0}],"isBlockCoverage":true},{"functionName":"compare","ranges":[{"startOffset":2868,"endOffset":3186,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3244,"endOffset":3384,"count":5}],"isBlockCoverage":true},{"functionName":"value","ranges":[{"startOffset":3308,"endOffset":3374,"count":272}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":3464,"endOffset":3507,"count":1724}],"isBlockCoverage":true},{"functionName":"setParserAndSep","ranges":[{"startOffset":3556,"endOffset":3629,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":3635,"endOffset":3705,"count":0}],"isBlockCoverage":false}]},{"scriptId":"536","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-lib-report/lib/report-base.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":362,"count":1}],"isBlockCoverage":true},{"functionName":"ReportBase","ranges":[{"startOffset":159,"endOffset":234,"count":4}],"isBlockCoverage":true},{"functionName":"execute","ranges":[{"startOffset":240,"endOffset":329,"count":2}],"isBlockCoverage":true}]},{"scriptId":"537","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-reports/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":536,"count":1}],"isBlockCoverage":true},{"functionName":"create","ranges":[{"startOffset":201,"endOffset":532,"count":2},{"startOffset":239,"endOffset":244,"count":0},{"startOffset":351,"endOffset":495,"count":0}],"isBlockCoverage":true}]},{"scriptId":"538","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/c8/lib/source-map-from-file.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3510,"count":1}],"isBlockCoverage":true},{"functionName":"getSourceMapFromFile","ranges":[{"startOffset":1716,"endOffset":2162,"count":0}],"isBlockCoverage":false},{"functionName":"dataFromUrl","ranges":[{"startOffset":2164,"endOffset":2620,"count":0}],"isBlockCoverage":false},{"functionName":"sourceMapFromFile","ranges":[{"startOffset":2622,"endOffset":2820,"count":0}],"isBlockCoverage":false},{"functionName":"sourceMapFromDataUrl","ranges":[{"startOffset":2914,"endOffset":3470,"count":0}],"isBlockCoverage":false}]},{"scriptId":"539","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/v8-to-istanbul/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":197,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":71,"endOffset":196,"count":20}],"isBlockCoverage":true}]},{"scriptId":"540","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/v8-to-istanbul/lib/v8-to-istanbul.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":12473,"count":1},{"startOffset":603,"endOffset":674,"count":0},{"startOffset":1020,"endOffset":1057,"count":0}],"isBlockCoverage":true},{"functionName":"readFile","ranges":[{"startOffset":522,"endOffset":549,"count":0}],"isBlockCoverage":false},{"functionName":"V8ToIstanbul","ranges":[{"startOffset":1103,"endOffset":1872,"count":20},{"startOffset":1447,"endOffset":1462,"count":0},{"startOffset":1498,"endOffset":1514,"count":0},{"startOffset":1542,"endOffset":1547,"count":0}],"isBlockCoverage":true},{"functionName":"V8ToIstanbul.excludePath","ranges":[{"startOffset":1502,"endOffset":1513,"count":0}],"isBlockCoverage":false},{"functionName":"load","ranges":[{"startOffset":1876,"endOffset":4784,"count":20},{"startOffset":2391,"endOffset":4667,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2717,"endOffset":2826,"count":0}],"isBlockCoverage":false},{"functionName":"sourcesContentFromSources","ranges":[{"startOffset":4788,"endOffset":5189,"count":0}],"isBlockCoverage":false},{"functionName":"destroy","ranges":[{"startOffset":5193,"endOffset":5280,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveSource","ranges":[{"startOffset":5284,"endOffset":5793,"count":0}],"isBlockCoverage":false},{"functionName":"applyCoverage","ranges":[{"startOffset":5797,"endOffset":8755,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5841,"endOffset":8750,"count":164}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5879,"endOffset":8743,"count":214},{"startOffset":6023,"endOffset":6051,"count":0},{"startOffset":6123,"endOffset":6378,"count":0},{"startOffset":6487,"endOffset":6515,"count":0},{"startOffset":6652,"endOffset":7576,"count":208},{"startOffset":6706,"endOffset":6711,"count":20},{"startOffset":7173,"endOffset":7183,"count":33},{"startOffset":7185,"endOffset":7566,"count":23},{"startOffset":7243,"endOffset":7248,"count":8},{"startOffset":7576,"endOffset":7998,"count":6},{"startOffset":7606,"endOffset":7998,"count":2},{"startOffset":7662,"endOffset":7667,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6255,"endOffset":6329,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8140,"endOffset":8734,"count":6805},{"startOffset":8632,"endOffset":8656,"count":6617},{"startOffset":8657,"endOffset":8672,"count":6479},{"startOffset":8674,"endOffset":8724,"count":6479}],"isBlockCoverage":true},{"functionName":"_maybeRemapStartColEndCol","ranges":[{"startOffset":8759,"endOffset":10056,"count":214},{"startOffset":9051,"endOffset":9974,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9479,"endOffset":9517,"count":0}],"isBlockCoverage":false},{"functionName":"getInnerIstanbul","ranges":[{"startOffset":10060,"endOffset":10951,"count":20},{"startOffset":10503,"endOffset":10552,"count":0},{"startOffset":10554,"endOffset":10627,"count":0},{"startOffset":10669,"endOffset":10689,"count":0}],"isBlockCoverage":true},{"functionName":"toIstanbul","ranges":[{"startOffset":10955,"endOffset":11116,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11005,"endOffset":11107,"count":20}],"isBlockCoverage":true},{"functionName":"_statementsToIstanbul","ranges":[{"startOffset":11120,"endOffset":11408,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11251,"endOffset":11381,"count":2591}],"isBlockCoverage":true},{"functionName":"_branchesToIstanbul","ranges":[{"startOffset":11412,"endOffset":11888,"count":20},{"startOffset":11557,"endOffset":11562,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11595,"endOffset":11863,"count":208},{"startOffset":11716,"endOffset":11722,"count":0},{"startOffset":11838,"endOffset":11841,"count":0}],"isBlockCoverage":true},{"functionName":"_functionsToIstanbul","ranges":[{"startOffset":11892,"endOffset":12350,"count":20},{"startOffset":12037,"endOffset":12042,"count":12}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12076,"endOffset":12324,"count":25},{"startOffset":12189,"endOffset":12195,"count":0},{"startOffset":12304,"endOffset":12307,"count":0}],"isBlockCoverage":true},{"functionName":"parsePath","ranges":[{"startOffset":12354,"endOffset":12472,"count":20},{"startOffset":12430,"endOffset":12457,"count":0}],"isBlockCoverage":true}]},{"scriptId":"541","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/convert-source-map/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5261,"count":1},{"startOffset":749,"endOffset":806,"count":0},{"startOffset":808,"endOffset":856,"count":0},{"startOffset":2372,"endOffset":2445,"count":0},{"startOffset":2447,"endOffset":2511,"count":0}],"isBlockCoverage":true},{"functionName":"getCommentRegex","ranges":[{"startOffset":123,"endOffset":279,"count":20}],"isBlockCoverage":true},{"functionName":"getMapFileCommentRegex","ranges":[{"startOffset":348,"endOffset":595,"count":20}],"isBlockCoverage":true},{"functionName":"decodeBase64WithBufferFrom","ranges":[{"startOffset":858,"endOffset":956,"count":0}],"isBlockCoverage":false},{"functionName":"decodeBase64WithNewBuffer","ranges":[{"startOffset":958,"endOffset":1169,"count":0}],"isBlockCoverage":false},{"functionName":"decodeBase64WithAtob","ranges":[{"startOffset":1171,"endOffset":1263,"count":0}],"isBlockCoverage":false},{"functionName":"stripComment","ranges":[{"startOffset":1265,"endOffset":1324,"count":0}],"isBlockCoverage":false},{"functionName":"readFromFileMap","ranges":[{"startOffset":1326,"endOffset":1815,"count":0}],"isBlockCoverage":false},{"functionName":"Converter","ranges":[{"startOffset":1817,"endOffset":2118,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toJSON","ranges":[{"startOffset":2149,"endOffset":2223,"count":0}],"isBlockCoverage":false},{"functionName":"encodeBase64WithBufferFrom","ranges":[{"startOffset":2513,"endOffset":2637,"count":0}],"isBlockCoverage":false},{"functionName":"encodeBase64WithNewBuffer","ranges":[{"startOffset":2639,"endOffset":2874,"count":0}],"isBlockCoverage":false},{"functionName":"encodeBase64WithBtoa","ranges":[{"startOffset":2876,"endOffset":2990,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toComment","ranges":[{"startOffset":3024,"endOffset":3243,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.toObject","ranges":[{"startOffset":3313,"endOffset":3364,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.addProperty","ranges":[{"startOffset":3401,"endOffset":3608,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.setProperty","ranges":[{"startOffset":3645,"endOffset":3716,"count":0}],"isBlockCoverage":false},{"functionName":"Converter.getProperty","ranges":[{"startOffset":3753,"endOffset":3801,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromObject","ranges":[{"startOffset":3825,"endOffset":3872,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromJSON","ranges":[{"startOffset":3894,"endOffset":3961,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromBase64","ranges":[{"startOffset":3985,"endOffset":4059,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromComment","ranges":[{"startOffset":4084,"endOffset":4256,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromMapFileComment","ranges":[{"startOffset":4288,"endOffset":4408,"count":0}],"isBlockCoverage":false},{"functionName":"exports.fromSource","ranges":[{"startOffset":4506,"endOffset":4625,"count":20},{"startOffset":4585,"endOffset":4615,"count":0}],"isBlockCoverage":true},{"functionName":"exports.fromMapFileSource","ranges":[{"startOffset":4730,"endOffset":4873,"count":20},{"startOffset":4821,"endOffset":4863,"count":0}],"isBlockCoverage":true},{"functionName":"exports.removeComments","ranges":[{"startOffset":4901,"endOffset":4967,"count":0}],"isBlockCoverage":false},{"functionName":"exports.removeMapFileComments","ranges":[{"startOffset":5002,"endOffset":5075,"count":0}],"isBlockCoverage":false},{"functionName":"exports.generateMapFileComment","ranges":[{"startOffset":5111,"endOffset":5259,"count":0}],"isBlockCoverage":false}]},{"scriptId":"542","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/v8-to-istanbul/lib/branch.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":588,"count":1}],"isBlockCoverage":true},{"functionName":"CovBranch","ranges":[{"startOffset":37,"endOffset":235,"count":208}],"isBlockCoverage":true},{"functionName":"toIstanbul","ranges":[{"startOffset":239,"endOffset":585,"count":208}],"isBlockCoverage":true}]},{"scriptId":"543","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/v8-to-istanbul/lib/function.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":577,"count":1}],"isBlockCoverage":true},{"functionName":"CovFunction","ranges":[{"startOffset":39,"endOffset":264,"count":25}],"isBlockCoverage":true},{"functionName":"toIstanbul","ranges":[{"startOffset":268,"endOffset":574,"count":25}],"isBlockCoverage":true}]},{"scriptId":"544","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/v8-to-istanbul/lib/source.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7976,"count":1}],"isBlockCoverage":true},{"functionName":"CovSource","ranges":[{"startOffset":246,"endOffset":540,"count":20},{"startOffset":335,"endOffset":339,"count":0}],"isBlockCoverage":true},{"functionName":"_buildLines","ranges":[{"startOffset":544,"endOffset":1307,"count":20},{"startOffset":708,"endOffset":1303,"count":2591},{"startOffset":794,"endOffset":852,"count":0},{"startOffset":873,"endOffset":909,"count":0},{"startOffset":1057,"endOffset":1224,"count":0},{"startOffset":1226,"endOffset":1297,"count":0}],"isBlockCoverage":true},{"functionName":"_parseIgnore","ranges":[{"startOffset":1548,"endOffset":2363,"count":2591},{"startOffset":1702,"endOffset":1774,"count":0},{"startOffset":1880,"endOffset":1913,"count":0},{"startOffset":1966,"endOffset":2077,"count":0},{"startOffset":2198,"endOffset":2359,"count":0}],"isBlockCoverage":true},{"functionName":"offsetToOriginalRelative","ranges":[{"startOffset":2509,"endOffset":3570,"count":0}],"isBlockCoverage":false},{"functionName":"relativeToOffset","ranges":[{"startOffset":3574,"endOffset":3789,"count":0}],"isBlockCoverage":false},{"functionName":"originalEndPositionFor","ranges":[{"startOffset":4803,"endOffset":6628,"count":0}],"isBlockCoverage":false},{"functionName":"originalPositionTryBoth","ranges":[{"startOffset":6630,"endOffset":7607,"count":0}],"isBlockCoverage":false},{"functionName":"getShebangLength","ranges":[{"startOffset":7743,"endOffset":7975,"count":20},{"startOffset":7798,"endOffset":7827,"count":0},{"startOffset":7829,"endOffset":7949,"count":0}],"isBlockCoverage":true}]},{"scriptId":"545","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/v8-to-istanbul/lib/line.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1020,"count":1}],"isBlockCoverage":true},{"functionName":"CovLine","ranges":[{"startOffset":35,"endOffset":818,"count":2591},{"startOffset":484,"endOffset":514,"count":2571},{"startOffset":515,"endOffset":518,"count":20}],"isBlockCoverage":true},{"functionName":"toIstanbul","ranges":[{"startOffset":822,"endOffset":1017,"count":2591}],"isBlockCoverage":true}]},{"scriptId":"546","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/v8-to-istanbul/lib/range.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":953,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports.sliceRange","ranges":[{"startOffset":198,"endOffset":952,"count":214},{"startOffset":307,"endOffset":432,"count":0},{"startOffset":456,"endOffset":805,"count":829},{"startOffset":530,"endOffset":559,"count":369},{"startOffset":559,"endOffset":801,"count":460},{"startOffset":599,"endOffset":626,"count":251},{"startOffset":626,"endOffset":801,"count":209},{"startOffset":672,"endOffset":703,"count":3808},{"startOffset":704,"endOffset":736,"count":3620},{"startOffset":738,"endOffset":761,"count":3620},{"startOffset":835,"endOffset":866,"count":3585},{"startOffset":867,"endOffset":899,"count":3585},{"startOffset":901,"endOffset":916,"count":3394}],"isBlockCoverage":true}]},{"scriptId":"547","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":24859,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":488,"count":1},{"startOffset":190,"endOffset":485,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":497,"endOffset":24809,"count":1}],"isBlockCoverage":true},{"functionName":"_interopDefaultLegacy","ranges":[{"startOffset":565,"endOffset":679,"count":1},{"startOffset":636,"endOffset":653,"count":0},{"startOffset":654,"endOffset":657,"count":0}],"isBlockCoverage":true},{"functionName":"resolve","ranges":[{"startOffset":764,"endOffset":1215,"count":0}],"isBlockCoverage":false},{"functionName":"stripFilename","ranges":[{"startOffset":1305,"endOffset":1469,"count":0}],"isBlockCoverage":false},{"functionName":"maybeSort","ranges":[{"startOffset":1680,"endOffset":2304,"count":0}],"isBlockCoverage":false},{"functionName":"nextUnsortedSegmentLine","ranges":[{"startOffset":2309,"endOffset":2530,"count":0}],"isBlockCoverage":false},{"functionName":"isSorted","ranges":[{"startOffset":2535,"endOffset":2746,"count":0}],"isBlockCoverage":false},{"functionName":"sortSegments","ranges":[{"startOffset":2751,"endOffset":2888,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":2893,"endOffset":2968,"count":0}],"isBlockCoverage":false},{"functionName":"binarySearch","ranges":[{"startOffset":3613,"endOffset":4103,"count":0}],"isBlockCoverage":false},{"functionName":"upperBound","ranges":[{"startOffset":4108,"endOffset":4331,"count":0}],"isBlockCoverage":false},{"functionName":"lowerBound","ranges":[{"startOffset":4336,"endOffset":4546,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedState","ranges":[{"startOffset":4551,"endOffset":4691,"count":0}],"isBlockCoverage":false},{"functionName":"memoizedBinarySearch","ranges":[{"startOffset":4901,"endOffset":5697,"count":0}],"isBlockCoverage":false},{"functionName":"buildBySources","ranges":[{"startOffset":5840,"endOffset":7240,"count":0}],"isBlockCoverage":false},{"functionName":"insert","ranges":[{"startOffset":7245,"endOffset":7419,"count":0}],"isBlockCoverage":false},{"functionName":"buildNullArray","ranges":[{"startOffset":7877,"endOffset":7946,"count":0}],"isBlockCoverage":false},{"functionName":"AnyMap","ranges":[{"startOffset":7967,"endOffset":8607,"count":0}],"isBlockCoverage":false},{"functionName":"recurse","ranges":[{"startOffset":8613,"endOffset":9540,"count":0}],"isBlockCoverage":false},{"functionName":"addSection","ranges":[{"startOffset":9545,"endOffset":12245,"count":0}],"isBlockCoverage":false},{"functionName":"append","ranges":[{"startOffset":12250,"endOffset":12364,"count":0}],"isBlockCoverage":false},{"functionName":"getLine","ranges":[{"startOffset":12369,"endOffset":12507,"count":0}],"isBlockCoverage":false},{"functionName":"TraceMap","ranges":[{"startOffset":14747,"endOffset":15907,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":15919,"endOffset":21961,"count":1}],"isBlockCoverage":true},{"functionName":"exports.encodedMappings","ranges":[{"startOffset":15961,"endOffset":16129,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decodedMappings","ranges":[{"startOffset":16165,"endOffset":16276,"count":0}],"isBlockCoverage":false},{"functionName":"exports.traceSegment","ranges":[{"startOffset":16309,"endOffset":16859,"count":0}],"isBlockCoverage":false},{"functionName":"exports.originalPositionFor","ranges":[{"startOffset":16899,"endOffset":18067,"count":0}],"isBlockCoverage":false},{"functionName":"exports.allGeneratedPositionsFor","ranges":[{"startOffset":18112,"endOffset":18354,"count":0}],"isBlockCoverage":false},{"functionName":"exports.generatedPositionFor","ranges":[{"startOffset":18395,"endOffset":18549,"count":0}],"isBlockCoverage":false},{"functionName":"exports.eachMapping","ranges":[{"startOffset":18581,"endOffset":19790,"count":0}],"isBlockCoverage":false},{"functionName":"exports.sourceContentFor","ranges":[{"startOffset":19827,"endOffset":20194,"count":0}],"isBlockCoverage":false},{"functionName":"exports.presortedDecodedMap","ranges":[{"startOffset":20234,"endOffset":20398,"count":0}],"isBlockCoverage":false},{"functionName":"exports.decodedMap","ranges":[{"startOffset":20429,"endOffset":20510,"count":0}],"isBlockCoverage":false},{"functionName":"exports.encodedMap","ranges":[{"startOffset":20541,"endOffset":20622,"count":0}],"isBlockCoverage":false},{"functionName":"generatedPosition","ranges":[{"startOffset":20632,"endOffset":21955,"count":0}],"isBlockCoverage":false},{"functionName":"clone","ranges":[{"startOffset":21970,"endOffset":22271,"count":0}],"isBlockCoverage":false},{"functionName":"OMapping","ranges":[{"startOffset":22276,"endOffset":22376,"count":0}],"isBlockCoverage":false},{"functionName":"GMapping","ranges":[{"startOffset":22381,"endOffset":22453,"count":0}],"isBlockCoverage":false},{"functionName":"traceSegmentInternal","ranges":[{"startOffset":22458,"endOffset":22901,"count":0}],"isBlockCoverage":false},{"functionName":"sliceGeneratedPositions","ranges":[{"startOffset":22906,"endOffset":24567,"count":0}],"isBlockCoverage":false}]},{"scriptId":"548","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6390,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":314,"count":1},{"startOffset":114,"endOffset":311,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":323,"endOffset":6338,"count":1},{"startOffset":694,"endOffset":792,"count":64},{"startOffset":945,"endOffset":1473,"count":0}],"isBlockCoverage":true},{"functionName":"decode","ranges":[{"startOffset":1009,"endOffset":1172,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":1220,"endOffset":1458,"count":0}],"isBlockCoverage":false},{"functionName":"decode","ranges":[{"startOffset":1479,"endOffset":3026,"count":0}],"isBlockCoverage":false},{"functionName":"indexOf","ranges":[{"startOffset":3031,"endOffset":3173,"count":0}],"isBlockCoverage":false},{"functionName":"decodeInteger","ranges":[{"startOffset":3178,"endOffset":3694,"count":0}],"isBlockCoverage":false},{"functionName":"hasMoreVlq","ranges":[{"startOffset":3699,"endOffset":3847,"count":0}],"isBlockCoverage":false},{"functionName":"sort","ranges":[{"startOffset":3852,"endOffset":3914,"count":0}],"isBlockCoverage":false},{"functionName":"sortComparator","ranges":[{"startOffset":3919,"endOffset":3984,"count":0}],"isBlockCoverage":false},{"functionName":"encode","ranges":[{"startOffset":3989,"endOffset":5766,"count":0}],"isBlockCoverage":false},{"functionName":"encodeInteger","ranges":[{"startOffset":5771,"endOffset":6208,"count":0}],"isBlockCoverage":false}]},{"scriptId":"549","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10337,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1,"endOffset":305,"count":1},{"startOffset":124,"endOffset":302,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":314,"endOffset":10289,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1369,"endOffset":1788,"count":1}],"isBlockCoverage":true},{"functionName":"isAbsoluteUrl","ranges":[{"startOffset":1822,"endOffset":1899,"count":0}],"isBlockCoverage":false},{"functionName":"isSchemeRelativeUrl","ranges":[{"startOffset":1904,"endOffset":1986,"count":0}],"isBlockCoverage":false},{"functionName":"isAbsolutePath","ranges":[{"startOffset":1991,"endOffset":2067,"count":0}],"isBlockCoverage":false},{"functionName":"isFileUrl","ranges":[{"startOffset":2072,"endOffset":2147,"count":0}],"isBlockCoverage":false},{"functionName":"isRelative","ranges":[{"startOffset":2152,"endOffset":2223,"count":0}],"isBlockCoverage":false},{"functionName":"parseAbsoluteUrl","ranges":[{"startOffset":2228,"endOffset":2437,"count":0}],"isBlockCoverage":false},{"functionName":"parseFileUrl","ranges":[{"startOffset":2442,"endOffset":2685,"count":0}],"isBlockCoverage":false},{"functionName":"makeUrl","ranges":[{"startOffset":2690,"endOffset":2952,"count":0}],"isBlockCoverage":false},{"functionName":"parseUrl","ranges":[{"startOffset":2957,"endOffset":3961,"count":0}],"isBlockCoverage":false},{"functionName":"stripPathFilename","ranges":[{"startOffset":3966,"endOffset":4309,"count":0}],"isBlockCoverage":false},{"functionName":"mergePaths","ranges":[{"startOffset":4314,"endOffset":4768,"count":0}],"isBlockCoverage":false},{"functionName":"normalizePath","ranges":[{"startOffset":4953,"endOffset":7561,"count":0}],"isBlockCoverage":false},{"functionName":"resolve","ranges":[{"startOffset":7646,"endOffset":10265,"count":0}],"isBlockCoverage":false}]},{"scriptId":"550","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/c8/lib/is-cjs-esm-bridge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":429,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":17,"endOffset":428,"count":20},{"startOffset":177,"endOffset":214,"count":2},{"startOffset":215,"endOffset":257,"count":2},{"startOffset":258,"endOffset":298,"count":2},{"startOffset":299,"endOffset":342,"count":0},{"startOffset":343,"endOffset":383,"count":0},{"startOffset":384,"endOffset":426,"count":0}],"isBlockCoverage":true}]},{"scriptId":"551","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/rimraf/rimraf.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":8866,"count":1},{"startOffset":141,"endOffset":186,"count":0}],"isBlockCoverage":true},{"functionName":"defaults","ranges":[{"startOffset":355,"endOffset":1024,"count":1},{"startOffset":726,"endOffset":762,"count":0},{"startOffset":821,"endOffset":920,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":489,"endOffset":592,"count":6}],"isBlockCoverage":true},{"functionName":"rimraf","ranges":[{"startOffset":1041,"endOffset":2757,"count":1},{"startOffset":2628,"endOffset":2756,"count":0}],"isBlockCoverage":true},{"functionName":"next","ranges":[{"startOffset":1555,"endOffset":1636,"count":1}],"isBlockCoverage":true},{"functionName":"afterGlob","ranges":[{"startOffset":1658,"endOffset":2547,"count":1},{"startOffset":1695,"endOffset":1708,"count":0},{"startOffset":1756,"endOffset":1767,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1789,"endOffset":2542,"count":1}],"isBlockCoverage":true},{"functionName":"CB","ranges":[{"startOffset":1813,"endOffset":2506,"count":1},{"startOffset":1839,"endOffset":2460,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2103,"endOffset":2132,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2323,"endOffset":2352,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":2649,"endOffset":2753,"count":0}],"isBlockCoverage":false},{"functionName":"rimraf_","ranges":[{"startOffset":3329,"endOffset":4223,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3565,"endOffset":4220,"count":1},{"startOffset":3590,"endOffset":3613,"count":0},{"startOffset":3621,"endOffset":3636,"count":0},{"startOffset":3703,"endOffset":3725,"count":0},{"startOffset":3726,"endOffset":3738,"count":0},{"startOffset":3746,"endOffset":3777,"count":0},{"startOffset":3849,"endOffset":4219,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3873,"endOffset":4215,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERM","ranges":[{"startOffset":4245,"endOffset":4677,"count":0}],"isBlockCoverage":false},{"functionName":"fixWinEPERMSync","ranges":[{"startOffset":4703,"endOffset":5121,"count":0}],"isBlockCoverage":false},{"functionName":"rmdir","ranges":[{"startOffset":5137,"endOffset":5633,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5417,"endOffset":5630,"count":1},{"startOffset":5436,"endOffset":5511,"count":0},{"startOffset":5519,"endOffset":5541,"count":0},{"startOffset":5558,"endOffset":5582,"count":0},{"startOffset":5590,"endOffset":5604,"count":0}],"isBlockCoverage":true},{"functionName":"rmkids","ranges":[{"startOffset":5650,"endOffset":6139,"count":0}],"isBlockCoverage":false},{"functionName":"rimrafSync","ranges":[{"startOffset":6299,"endOffset":7661,"count":0}],"isBlockCoverage":false},{"functionName":"rmdirSync","ranges":[{"startOffset":7681,"endOffset":8003,"count":0}],"isBlockCoverage":false},{"functionName":"rmkidsSync","ranges":[{"startOffset":8024,"endOffset":8815,"count":0}],"isBlockCoverage":false}]},{"scriptId":"552","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/c8/lib/parse-args.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6885,"count":1}],"isBlockCoverage":true},{"functionName":"buildYargs","ranges":[{"startOffset":378,"endOffset":6296,"count":1},{"startOffset":6087,"endOffset":6151,"count":0}],"isBlockCoverage":true},{"functionName":"configParser","ranges":[{"startOffset":623,"endOffset":753,"count":0}],"isBlockCoverage":false},{"functionName":"default","ranges":[{"startOffset":770,"endOffset":837,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5422,"endOffset":5559,"count":1},{"startOffset":5465,"endOffset":5535,"count":0}],"isBlockCoverage":true},{"functionName":"hideInstrumenterArgs","ranges":[{"startOffset":6298,"endOffset":6501,"count":1},{"startOffset":6445,"endOffset":6485,"count":0}],"isBlockCoverage":true},{"functionName":"hideInstrumenteeArgs","ranges":[{"startOffset":6503,"endOffset":6801,"count":1},{"startOffset":6626,"endOffset":6637,"count":0}],"isBlockCoverage":true}]},{"scriptId":"553","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/find-up/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1940,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":185,"endOffset":1023,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":1048,"endOffset":1825,"count":1},{"startOffset":1559,"endOffset":1823,"count":7},{"startOffset":1650,"endOffset":1666,"count":0},{"startOffset":1685,"endOffset":1736,"count":0},{"startOffset":1764,"endOffset":1780,"count":1},{"startOffset":1780,"endOffset":1823,"count":6}],"isBlockCoverage":true},{"functionName":"runMatcher","ranges":[{"startOffset":1216,"endOffset":1491,"count":7},{"startOffset":1323,"endOffset":1490,"count":0}],"isBlockCoverage":true}]},{"scriptId":"554","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/locate-path/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1329,"count":1}],"isBlockCoverage":true},{"functionName":"checkType","ranges":[{"startOffset":288,"endOffset":414,"count":7},{"startOffset":358,"endOffset":413,"count":0}],"isBlockCoverage":true},{"functionName":"matchType","ranges":[{"startOffset":434,"endOffset":498,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":518,"endOffset":920,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":945,"endOffset":1327,"count":7},{"startOffset":1133,"endOffset":1147,"count":0},{"startOffset":1178,"endOffset":1325,"count":28},{"startOffset":1285,"endOffset":1309,"count":0}],"isBlockCoverage":true}]},{"scriptId":"555","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/p-locate/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1157,"count":1}],"isBlockCoverage":true},{"functionName":"EndError","ranges":[{"startOffset":82,"endOffset":138,"count":0}],"isBlockCoverage":false},{"functionName":"testElement","ranges":[{"startOffset":213,"endOffset":261,"count":0}],"isBlockCoverage":false},{"functionName":"finder","ranges":[{"startOffset":347,"endOffset":490,"count":0}],"isBlockCoverage":false},{"functionName":"pLocate","ranges":[{"startOffset":509,"endOffset":1128,"count":0}],"isBlockCoverage":false}]},{"scriptId":"556","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/p-limit/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1521,"count":1}],"isBlockCoverage":true},{"functionName":"pLimit","ranges":[{"startOffset":68,"endOffset":1493,"count":0}],"isBlockCoverage":false}]},{"scriptId":"557","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/yocto-queue/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":949,"count":1}],"isBlockCoverage":true},{"functionName":"Node","ranges":[{"startOffset":38,"endOffset":159,"count":0}],"isBlockCoverage":false},{"functionName":"Queue","ranges":[{"startOffset":277,"endOffset":311,"count":0}],"isBlockCoverage":false},{"functionName":"enqueue","ranges":[{"startOffset":314,"endOffset":511,"count":0}],"isBlockCoverage":false},{"functionName":"dequeue","ranges":[{"startOffset":514,"endOffset":664,"count":0}],"isBlockCoverage":false},{"functionName":"clear","ranges":[{"startOffset":667,"endOffset":749,"count":0}],"isBlockCoverage":false},{"functionName":"get size","ranges":[{"startOffset":752,"endOffset":788,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":791,"endOffset":921,"count":0}],"isBlockCoverage":false}]},{"scriptId":"558","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/path-exists/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":347,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":134,"endOffset":230,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports.sync","ranges":[{"startOffset":255,"endOffset":345,"count":0}],"isBlockCoverage":false}]},{"scriptId":"559","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/yargs/yargs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":457,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.applyExtends","ranges":[{"startOffset":275,"endOffset":375,"count":0}],"isBlockCoverage":false}]},{"scriptId":"560","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/yargs/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":107596,"count":1},{"startOffset":106038,"endOffset":106046,"count":0},{"startOffset":106089,"endOffset":106097,"count":0},{"startOffset":106144,"endOffset":106159,"count":0},{"startOffset":106537,"endOffset":106543,"count":0},{"startOffset":106884,"endOffset":106928,"count":0},{"startOffset":107069,"endOffset":107253,"count":0}],"isBlockCoverage":true},{"functionName":"YError","ranges":[{"startOffset":81,"endOffset":219,"count":0}],"isBlockCoverage":false},{"functionName":"applyExtends","ranges":[{"startOffset":268,"endOffset":1455,"count":0}],"isBlockCoverage":false},{"functionName":"checkForCircularExtends","ranges":[{"startOffset":1456,"endOffset":1642,"count":0}],"isBlockCoverage":false},{"functionName":"getPathToDefaultConfig","ranges":[{"startOffset":1643,"endOffset":1746,"count":0}],"isBlockCoverage":false},{"functionName":"mergeDeep","ranges":[{"startOffset":1747,"endOffset":2225,"count":0}],"isBlockCoverage":false},{"functionName":"parseCommand","ranges":[{"startOffset":2227,"endOffset":3279,"count":131},{"startOffset":2519,"endOffset":2566,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2718,"endOffset":3249,"count":275},{"startOffset":2833,"endOffset":2865,"count":0},{"startOffset":2879,"endOffset":2895,"count":0},{"startOffset":2925,"endOffset":3077,"count":136},{"startOffset":3077,"endOffset":3243,"count":139}],"isBlockCoverage":true},{"functionName":"argsert","ranges":[{"startOffset":3360,"endOffset":5273,"count":131},{"startOffset":3829,"endOffset":3867,"count":175},{"startOffset":3881,"endOffset":3892,"count":48},{"startOffset":3924,"endOffset":3938,"count":4},{"startOffset":3985,"endOffset":4124,"count":0},{"startOffset":4240,"endOffset":4367,"count":0},{"startOffset":5219,"endOffset":5271,"count":0}],"isBlockCoverage":true},{"functionName":"parseArgs","ranges":[{"startOffset":3401,"endOffset":3648,"count":131},{"startOffset":3476,"endOffset":3522,"count":2},{"startOffset":3535,"endOffset":3641,"count":129}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4400,"endOffset":4756,"count":139},{"startOffset":4663,"endOffset":4719,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4555,"endOffset":4600,"count":319},{"startOffset":4585,"endOffset":4600,"count":180}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4791,"endOffset":5206,"count":136},{"startOffset":4856,"endOffset":4863,"count":48},{"startOffset":4863,"endOffset":5113,"count":88},{"startOffset":5113,"endOffset":5169,"count":0},{"startOffset":5169,"endOffset":5205,"count":88}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5005,"endOffset":5050,"count":100},{"startOffset":5035,"endOffset":5050,"count":34}],"isBlockCoverage":true},{"functionName":"guessType","ranges":[{"startOffset":5274,"endOffset":5442,"count":227},{"startOffset":5328,"endOffset":5359,"count":5},{"startOffset":5359,"endOffset":5417,"count":222},{"startOffset":5387,"endOffset":5417,"count":0},{"startOffset":5417,"endOffset":5441,"count":222}],"isBlockCoverage":true},{"functionName":"argumentTypeError","ranges":[{"startOffset":5443,"endOffset":5661,"count":0}],"isBlockCoverage":false},{"functionName":"isPromise","ranges":[{"startOffset":5663,"endOffset":5810,"count":1},{"startOffset":5756,"endOffset":5806,"count":0}],"isBlockCoverage":true},{"functionName":"assertNotStrictEqual","ranges":[{"startOffset":5812,"endOffset":5937,"count":6}],"isBlockCoverage":true},{"functionName":"assertSingleKey","ranges":[{"startOffset":5938,"endOffset":6034,"count":1}],"isBlockCoverage":true},{"functionName":"objectKeys","ranges":[{"startOffset":6035,"endOffset":6098,"count":11}],"isBlockCoverage":true},{"functionName":"objFilter","ranges":[{"startOffset":6100,"endOffset":6334,"count":11}],"isBlockCoverage":true},{"functionName":"filter","ranges":[{"startOffset":6143,"endOffset":6153,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6210,"endOffset":6314,"count":0}],"isBlockCoverage":false},{"functionName":"globalMiddlewareFactory","ranges":[{"startOffset":6336,"endOffset":7171,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6409,"endOffset":7168,"count":0}],"isBlockCoverage":false},{"functionName":"commandMiddlewareFactory","ranges":[{"startOffset":7172,"endOffset":7409,"count":2},{"startOffset":7273,"endOffset":7408,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":7307,"endOffset":7405,"count":0}],"isBlockCoverage":false},{"functionName":"applyMiddleware","ranges":[{"startOffset":7410,"endOffset":8413,"count":0}],"isBlockCoverage":false},{"functionName":"getProcessArgvBinIndex","ranges":[{"startOffset":8415,"endOffset":8516,"count":1},{"startOffset":8491,"endOffset":8500,"count":0}],"isBlockCoverage":true},{"functionName":"isBundledElectronApp","ranges":[{"startOffset":8517,"endOffset":8603,"count":1},{"startOffset":8578,"endOffset":8600,"count":0}],"isBlockCoverage":true},{"functionName":"isElectronApp","ranges":[{"startOffset":8604,"endOffset":8672,"count":1}],"isBlockCoverage":true},{"functionName":"hideBin","ranges":[{"startOffset":8673,"endOffset":8752,"count":0}],"isBlockCoverage":false},{"functionName":"getProcessArgvBin","ranges":[{"startOffset":8753,"endOffset":8836,"count":1}],"isBlockCoverage":true},{"functionName":"whichModule","ranges":[{"startOffset":8968,"endOffset":9273,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":9314,"endOffset":23717,"count":1}],"isBlockCoverage":true},{"functionName":"addHandler","ranges":[{"startOffset":9501,"endOffset":12153,"count":2},{"startOffset":9763,"endOffset":10015,"count":0},{"startOffset":10066,"endOffset":10460,"count":0},{"startOffset":10515,"endOffset":10686,"count":0},{"startOffset":11191,"endOffset":11203,"count":0},{"startOffset":11221,"endOffset":11246,"count":0},{"startOffset":11274,"endOffset":11463,"count":0},{"startOffset":12092,"endOffset":12137,"count":0}],"isBlockCoverage":true},{"functionName":"handler","ranges":[{"startOffset":9719,"endOffset":9728,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10813,"endOffset":10845,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":10960,"endOffset":11145,"count":2},{"startOffset":11011,"endOffset":11102,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11492,"endOffset":11569,"count":0}],"isBlockCoverage":false},{"functionName":"addDirectory","ranges":[{"startOffset":12179,"endOffset":12983,"count":0}],"isBlockCoverage":false},{"functionName":"moduleName","ranges":[{"startOffset":12989,"endOffset":13214,"count":0}],"isBlockCoverage":false},{"functionName":"commandFromFilename","ranges":[{"startOffset":13219,"endOffset":13339,"count":0}],"isBlockCoverage":false},{"functionName":"extractDesc","ranges":[{"startOffset":13344,"endOffset":13639,"count":0}],"isBlockCoverage":false},{"functionName":"self.getCommands","ranges":[{"startOffset":13663,"endOffset":13720,"count":1}],"isBlockCoverage":true},{"functionName":"self.getCommandHandlers","ranges":[{"startOffset":13752,"endOffset":13766,"count":0}],"isBlockCoverage":false},{"functionName":"self.hasDefaultCommand","ranges":[{"startOffset":13797,"endOffset":13819,"count":1}],"isBlockCoverage":true},{"functionName":"runCommand","ranges":[{"startOffset":13843,"endOffset":18015,"count":0}],"isBlockCoverage":false},{"functionName":"shouldUpdateUsage","ranges":[{"startOffset":18021,"endOffset":18189,"count":0}],"isBlockCoverage":false},{"functionName":"usageFromParentCommandsCommandHandler","ranges":[{"startOffset":18194,"endOffset":18616,"count":0}],"isBlockCoverage":false},{"functionName":"self.runDefaultBuilderOn","ranges":[{"startOffset":18648,"endOffset":19382,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositionals","ranges":[{"startOffset":19388,"endOffset":20228,"count":0}],"isBlockCoverage":false},{"functionName":"populatePositional","ranges":[{"startOffset":20233,"endOffset":20567,"count":0}],"isBlockCoverage":false},{"functionName":"postProcessPositionals","ranges":[{"startOffset":20572,"endOffset":22332,"count":0}],"isBlockCoverage":false},{"functionName":"self.cmdToParseOptions","ranges":[{"startOffset":22362,"endOffset":23211,"count":0}],"isBlockCoverage":false},{"functionName":"self.reset","ranges":[{"startOffset":23230,"endOffset":23346,"count":0}],"isBlockCoverage":false},{"functionName":"self.freeze","ranges":[{"startOffset":23390,"endOffset":23510,"count":1}],"isBlockCoverage":true},{"functionName":"self.unfreeze","ranges":[{"startOffset":23532,"endOffset":23697,"count":1}],"isBlockCoverage":true},{"functionName":"isCommandBuilderDefinition","ranges":[{"startOffset":23718,"endOffset":23886,"count":2},{"startOffset":23805,"endOffset":23833,"count":0},{"startOffset":23834,"endOffset":23882,"count":0}],"isBlockCoverage":true},{"functionName":"isCommandAndAliases","ranges":[{"startOffset":23887,"endOffset":24039,"count":0}],"isBlockCoverage":false},{"functionName":"isCommandBuilderCallback","ranges":[{"startOffset":24040,"endOffset":24128,"count":0}],"isBlockCoverage":false},{"functionName":"isCommandBuilderOptionDefinitions","ranges":[{"startOffset":24129,"endOffset":24224,"count":0}],"isBlockCoverage":false},{"functionName":"isCommandHandlerDefinition","ranges":[{"startOffset":24225,"endOffset":24328,"count":2},{"startOffset":24303,"endOffset":24325,"count":0}],"isBlockCoverage":true},{"functionName":"setBlocking","ranges":[{"startOffset":24330,"endOffset":24700,"count":0}],"isBlockCoverage":false},{"functionName":"usage","ranges":[{"startOffset":24702,"endOffset":43891,"count":1}],"isBlockCoverage":true},{"functionName":"failFn","ranges":[{"startOffset":24823,"endOffset":24872,"count":0}],"isBlockCoverage":false},{"functionName":"showHelpOnFailFn","ranges":[{"startOffset":24959,"endOffset":25277,"count":0}],"isBlockCoverage":false},{"functionName":"fail","ranges":[{"startOffset":25326,"endOffset":26442,"count":0}],"isBlockCoverage":false},{"functionName":"self.usage","ranges":[{"startOffset":26513,"endOffset":26763,"count":1},{"startOffset":26563,"endOffset":26658,"count":0}],"isBlockCoverage":true},{"functionName":"self.getUsage","ranges":[{"startOffset":26785,"endOffset":26821,"count":0}],"isBlockCoverage":false},{"functionName":"self.getUsageDisabled","ranges":[{"startOffset":26851,"endOffset":26894,"count":0}],"isBlockCoverage":false},{"functionName":"self.getPositionalGroupName","ranges":[{"startOffset":26930,"endOffset":26978,"count":0}],"isBlockCoverage":false},{"functionName":"self.example","ranges":[{"startOffset":27022,"endOffset":27100,"count":0}],"isBlockCoverage":false},{"functionName":"command","ranges":[{"startOffset":27144,"endOffset":27478,"count":2},{"startOffset":27244,"endOffset":27391,"count":0},{"startOffset":27432,"endOffset":27437,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27282,"endOffset":27379,"count":0}],"isBlockCoverage":false},{"functionName":"self.getCommands","ranges":[{"startOffset":27503,"endOffset":27517,"count":0}],"isBlockCoverage":false},{"functionName":"describe","ranges":[{"startOffset":27566,"endOffset":27994,"count":27},{"startOffset":27641,"endOffset":27745,"count":0},{"startOffset":27794,"endOffset":27919,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27673,"endOffset":27733,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":27839,"endOffset":27907,"count":0}],"isBlockCoverage":false},{"functionName":"self.getDescriptions","ranges":[{"startOffset":28023,"endOffset":28041,"count":0}],"isBlockCoverage":false},{"functionName":"self.epilog","ranges":[{"startOffset":28083,"endOffset":28124,"count":1}],"isBlockCoverage":true},{"functionName":"self.wrap","ranges":[{"startOffset":28181,"endOffset":28241,"count":0}],"isBlockCoverage":false},{"functionName":"getWrap","ranges":[{"startOffset":28247,"endOffset":28390,"count":0}],"isBlockCoverage":false},{"functionName":"self.deferY18nLookup","ranges":[{"startOffset":28472,"endOffset":28506,"count":3}],"isBlockCoverage":true},{"functionName":"help","ranges":[{"startOffset":28524,"endOffset":38490,"count":0}],"isBlockCoverage":false},{"functionName":"maxWidth","ranges":[{"startOffset":38496,"endOffset":38973,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeAliases","ranges":[{"startOffset":38978,"endOffset":40022,"count":0}],"isBlockCoverage":false},{"functionName":"self.cacheHelpMessage","ranges":[{"startOffset":40078,"endOffset":40138,"count":0}],"isBlockCoverage":false},{"functionName":"self.clearCachedHelpMessage","ranges":[{"startOffset":40174,"endOffset":40232,"count":0}],"isBlockCoverage":false},{"functionName":"addUngroupedKeys","ranges":[{"startOffset":40238,"endOffset":40737,"count":0}],"isBlockCoverage":false},{"functionName":"filterHiddenOptions","ranges":[{"startOffset":40742,"endOffset":40918,"count":0}],"isBlockCoverage":false},{"functionName":"self.showHelp","ranges":[{"startOffset":40939,"endOffset":41158,"count":0}],"isBlockCoverage":false},{"functionName":"self.functionDescription","ranges":[{"startOffset":41191,"endOffset":41377,"count":1},{"startOffset":41298,"endOffset":41321,"count":0}],"isBlockCoverage":true},{"functionName":"stringifiedValues","ranges":[{"startOffset":41408,"endOffset":41806,"count":0}],"isBlockCoverage":false},{"functionName":"defaultString","ranges":[{"startOffset":41812,"endOffset":42459,"count":0}],"isBlockCoverage":false},{"functionName":"windowWidth","ranges":[{"startOffset":42464,"endOffset":42690,"count":0}],"isBlockCoverage":false},{"functionName":"self.version","ranges":[{"startOffset":42734,"endOffset":42771,"count":1}],"isBlockCoverage":true},{"functionName":"self.showVersion","ranges":[{"startOffset":42796,"endOffset":42889,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":42908,"endOffset":43213,"count":0}],"isBlockCoverage":false},{"functionName":"freeze","ranges":[{"startOffset":43257,"endOffset":43507,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":43529,"endOffset":43871,"count":1}],"isBlockCoverage":true},{"functionName":"isIndentedText","ranges":[{"startOffset":43892,"endOffset":43962,"count":0}],"isBlockCoverage":false},{"functionName":"addIndentation","ranges":[{"startOffset":43963,"endOffset":44147,"count":0}],"isBlockCoverage":false},{"functionName":"getIndentation","ranges":[{"startOffset":44148,"endOffset":44237,"count":0}],"isBlockCoverage":false},{"functionName":"getText","ranges":[{"startOffset":44238,"endOffset":44316,"count":0}],"isBlockCoverage":false},{"functionName":"completion","ranges":[{"startOffset":45697,"endOffset":50817,"count":1},{"startOffset":46020,"endOffset":46105,"count":0}],"isBlockCoverage":true},{"functionName":"setParsed","ranges":[{"startOffset":45860,"endOffset":45928,"count":1}],"isBlockCoverage":true},{"functionName":"getCompletion","ranges":[{"startOffset":46132,"endOffset":50219,"count":0}],"isBlockCoverage":false},{"functionName":"generateCompletionScript","ranges":[{"startOffset":50257,"endOffset":50686,"count":0}],"isBlockCoverage":false},{"functionName":"self.registerFunction","ranges":[{"startOffset":50751,"endOffset":50797,"count":0}],"isBlockCoverage":false},{"functionName":"isSyncCompletionFunction","ranges":[{"startOffset":50818,"endOffset":50917,"count":0}],"isBlockCoverage":false},{"functionName":"levenshtein","ranges":[{"startOffset":50919,"endOffset":51642,"count":0}],"isBlockCoverage":false},{"functionName":"validation","ranges":[{"startOffset":51683,"endOffset":63616,"count":1}],"isBlockCoverage":true},{"functionName":"nonOptionCount","ranges":[{"startOffset":51828,"endOffset":53555,"count":1},{"startOffset":51982,"endOffset":52001,"count":0},{"startOffset":52189,"endOffset":53549,"count":0}],"isBlockCoverage":true},{"functionName":"positionalCount","ranges":[{"startOffset":53584,"endOffset":53872,"count":0}],"isBlockCoverage":false},{"functionName":"requiredArguments","ranges":[{"startOffset":53903,"endOffset":54878,"count":1},{"startOffset":54082,"endOffset":54321,"count":0},{"startOffset":54343,"endOffset":54872,"count":0}],"isBlockCoverage":true},{"functionName":"unknownArguments","ranges":[{"startOffset":54908,"endOffset":56092,"count":0}],"isBlockCoverage":false},{"functionName":"unknownCommands","ranges":[{"startOffset":56121,"endOffset":56838,"count":0}],"isBlockCoverage":false},{"functionName":"isValidAndSomeAliasIsNotNew","ranges":[{"startOffset":56879,"endOffset":57325,"count":0}],"isBlockCoverage":false},{"functionName":"limitedChoices","ranges":[{"startOffset":57353,"endOffset":58401,"count":1},{"startOffset":57526,"endOffset":58400,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":57561,"endOffset":58012,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":58187,"endOffset":58368,"count":0}],"isBlockCoverage":false},{"functionName":"check","ranges":[{"startOffset":58441,"endOffset":58549,"count":1}],"isBlockCoverage":true},{"functionName":"customChecks","ranges":[{"startOffset":58575,"endOffset":59234,"count":1},{"startOffset":58833,"endOffset":58952,"count":0},{"startOffset":58978,"endOffset":59071,"count":0},{"startOffset":59148,"endOffset":59218,"count":0}],"isBlockCoverage":true},{"functionName":"implies","ranges":[{"startOffset":59277,"endOffset":59940,"count":0}],"isBlockCoverage":false},{"functionName":"getImplied","ranges":[{"startOffset":59964,"endOffset":60017,"count":0}],"isBlockCoverage":false},{"functionName":"keyExists","ranges":[{"startOffset":60023,"endOffset":60422,"count":0}],"isBlockCoverage":false},{"functionName":"implications","ranges":[{"startOffset":60447,"endOffset":61176,"count":1},{"startOffset":60986,"endOffset":61170,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":60544,"endOffset":60953,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":61075,"endOffset":61129,"count":0}],"isBlockCoverage":false},{"functionName":"conflicts","ranges":[{"startOffset":61225,"endOffset":61837,"count":0}],"isBlockCoverage":false},{"functionName":"self.getConflicting","ranges":[{"startOffset":61865,"endOffset":61882,"count":0}],"isBlockCoverage":false},{"functionName":"conflictingFn","ranges":[{"startOffset":61907,"endOffset":62329,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":61972,"endOffset":62321,"count":43},{"startOffset":62015,"endOffset":62311,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":62058,"endOffset":62295,"count":0}],"isBlockCoverage":false},{"functionName":"recommendCommands","ranges":[{"startOffset":62360,"endOffset":62981,"count":0}],"isBlockCoverage":false},{"functionName":"reset","ranges":[{"startOffset":63000,"endOffset":63231,"count":0}],"isBlockCoverage":false},{"functionName":"freeze","ranges":[{"startOffset":63275,"endOffset":63401,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":63423,"endOffset":63596,"count":1}],"isBlockCoverage":true},{"functionName":"YargsWithShim","ranges":[{"startOffset":63630,"endOffset":63701,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs","ranges":[{"startOffset":63702,"endOffset":105257,"count":1},{"startOffset":64430,"endOffset":64502,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.scriptName","ranges":[{"startOffset":64155,"endOffset":64273,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":64540,"endOffset":64665,"count":1},{"startOffset":64655,"endOffset":64658,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.getContext","ranges":[{"startOffset":65023,"endOffset":65036,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.exit","ranges":[{"startOffset":65107,"endOffset":65244,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.completion","ranges":[{"startOffset":65302,"endOffset":65839,"count":0}],"isBlockCoverage":false},{"functionName":"resetOptions","ranges":[{"startOffset":65895,"endOffset":68249,"count":1},{"startOffset":66064,"endOffset":66079,"count":0},{"startOffset":66155,"endOffset":66178,"count":0},{"startOffset":67651,"endOffset":67679,"count":0},{"startOffset":67757,"endOffset":67790,"count":0},{"startOffset":67888,"endOffset":67907,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":66262,"endOffset":66414,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":66483,"endOffset":66707,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":67323,"endOffset":67418,"count":8}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":67384,"endOffset":67406,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":67451,"endOffset":67542,"count":11}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":67510,"endOffset":67530,"count":0}],"isBlockCoverage":false},{"functionName":"freeze","ranges":[{"startOffset":68304,"endOffset":68860,"count":1}],"isBlockCoverage":true},{"functionName":"unfreeze","ranges":[{"startOffset":68865,"endOffset":69563,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.boolean","ranges":[{"startOffset":69583,"endOffset":69738,"count":13}],"isBlockCoverage":true},{"functionName":"Yargs.self.array","ranges":[{"startOffset":69757,"endOffset":69910,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.number","ranges":[{"startOffset":69930,"endOffset":70084,"count":5}],"isBlockCoverage":true},{"functionName":"Yargs.self.normalize","ranges":[{"startOffset":70107,"endOffset":70264,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.count","ranges":[{"startOffset":70283,"endOffset":70436,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.string","ranges":[{"startOffset":70456,"endOffset":70610,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.requiresArg","ranges":[{"startOffset":70635,"endOffset":70968,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.skipValidation","ranges":[{"startOffset":70996,"endOffset":71158,"count":0}],"isBlockCoverage":false},{"functionName":"populateParserHintArray","ranges":[{"startOffset":71164,"endOffset":71363,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":71264,"endOffset":71355,"count":19}],"isBlockCoverage":true},{"functionName":"Yargs.self.nargs","ranges":[{"startOffset":71381,"endOffset":71595,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.choices","ranges":[{"startOffset":71616,"endOffset":71835,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.alias","ranges":[{"startOffset":71854,"endOffset":72069,"count":7}],"isBlockCoverage":true},{"functionName":"Yargs.self.default.self.defaults","ranges":[{"startOffset":72106,"endOffset":72786,"count":23},{"startOffset":72289,"endOffset":72408,"count":0},{"startOffset":72450,"endOffset":72673,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.describe","ranges":[{"startOffset":72808,"endOffset":73003,"count":27}],"isBlockCoverage":true},{"functionName":"setKey","ranges":[{"startOffset":73009,"endOffset":73137,"count":27}],"isBlockCoverage":true},{"functionName":"demandOption","ranges":[{"startOffset":73142,"endOffset":73383,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.coerce","ranges":[{"startOffset":73440,"endOffset":73662,"count":0}],"isBlockCoverage":false},{"functionName":"populateParserHintSingleValueDictionary","ranges":[{"startOffset":73668,"endOffset":73891,"count":50}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":73810,"endOffset":73883,"count":50}],"isBlockCoverage":true},{"functionName":"populateParserHintArrayDictionary","ranges":[{"startOffset":73896,"endOffset":74148,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74032,"endOffset":74140,"count":7}],"isBlockCoverage":true},{"functionName":"populateParserHintDictionary","ranges":[{"startOffset":74153,"endOffset":74622,"count":57},{"startOffset":74270,"endOffset":74363,"count":0},{"startOffset":74422,"endOffset":74530,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":74296,"endOffset":74351,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":74382,"endOffset":74414,"count":57}],"isBlockCoverage":true},{"functionName":"sanitizeKey","ranges":[{"startOffset":74627,"endOffset":74747,"count":76},{"startOffset":74700,"endOffset":74721,"count":0}],"isBlockCoverage":true},{"functionName":"deleteFromParserHintObject","ranges":[{"startOffset":74752,"endOffset":75313,"count":0}],"isBlockCoverage":false},{"functionName":"config","ranges":[{"startOffset":75332,"endOffset":76111,"count":1},{"startOffset":75520,"endOffset":75542,"count":0},{"startOffset":75544,"endOffset":75770,"count":0},{"startOffset":75994,"endOffset":75999,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":76017,"endOffset":76082,"count":1},{"startOffset":76064,"endOffset":76071,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.example","ranges":[{"startOffset":76132,"endOffset":76460,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.command","ranges":[{"startOffset":76481,"endOffset":76865,"count":2}],"isBlockCoverage":true},{"functionName":"Yargs.self.commandDir","ranges":[{"startOffset":76889,"endOffset":77151,"count":0}],"isBlockCoverage":false},{"functionName":"demand","ranges":[{"startOffset":77202,"endOffset":78178,"count":0}],"isBlockCoverage":false},{"functionName":"demandCommand","ranges":[{"startOffset":78205,"endOffset":78685,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.getDemandedOptions","ranges":[{"startOffset":78717,"endOffset":78794,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.getDemandedCommands","ranges":[{"startOffset":78827,"endOffset":78905,"count":1}],"isBlockCoverage":true},{"functionName":"deprecateOption","ranges":[{"startOffset":78934,"endOffset":79140,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getDeprecatedOptions","ranges":[{"startOffset":79174,"endOffset":79253,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.implies","ranges":[{"startOffset":79274,"endOffset":79456,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.conflicts","ranges":[{"startOffset":79479,"endOffset":79656,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.usage","ranges":[{"startOffset":79675,"endOffset":80345,"count":1},{"startOffset":79908,"endOffset":80257,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.epilogue.self.epilog","ranges":[{"startOffset":80381,"endOffset":80507,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.fail","ranges":[{"startOffset":80525,"endOffset":80647,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.onFinishCommand","ranges":[{"startOffset":80676,"endOffset":80805,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getHandlerFinishCommand","ranges":[{"startOffset":80842,"endOffset":80868,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.check","ranges":[{"startOffset":80887,"endOffset":81060,"count":1}],"isBlockCoverage":true},{"functionName":"global","ranges":[{"startOffset":81080,"endOffset":81557,"count":1},{"startOffset":81265,"endOffset":81358,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":81316,"endOffset":81346,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":81402,"endOffset":81518,"count":1}],"isBlockCoverage":true},{"functionName":"pkgConf","ranges":[{"startOffset":81578,"endOffset":82055,"count":1},{"startOffset":81775,"endOffset":81806,"count":0},{"startOffset":81808,"endOffset":82028,"count":0}],"isBlockCoverage":true},{"functionName":"pkgUp","ranges":[{"startOffset":82082,"endOffset":82959,"count":2},{"startOffset":82140,"endOffset":82146,"count":1},{"startOffset":82185,"endOffset":82204,"count":0},{"startOffset":82277,"endOffset":82299,"count":1},{"startOffset":82327,"endOffset":82359,"count":1},{"startOffset":82361,"endOffset":82434,"count":1},{"startOffset":82875,"endOffset":82892,"count":0},{"startOffset":82919,"endOffset":82924,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":82491,"endOffset":82716,"count":3},{"startOffset":82561,"endOffset":82623,"count":2},{"startOffset":82623,"endOffset":82702,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":83030,"endOffset":84057,"count":1},{"startOffset":83258,"endOffset":83453,"count":0},{"startOffset":83500,"endOffset":83589,"count":0},{"startOffset":83638,"endOffset":83719,"count":0},{"startOffset":83812,"endOffset":83832,"count":0},{"startOffset":83973,"endOffset":84008,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self._getParseContext","ranges":[{"startOffset":84087,"endOffset":84111,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self._hasParseCallback","ranges":[{"startOffset":84142,"endOffset":84157,"count":0}],"isBlockCoverage":false},{"functionName":"option","ranges":[{"startOffset":84192,"endOffset":87432,"count":24},{"startOffset":84332,"endOffset":84444,"count":0},{"startOffset":84501,"endOffset":84542,"count":0},{"startOffset":84623,"endOffset":84650,"count":7},{"startOffset":84741,"endOffset":84810,"count":0},{"startOffset":84905,"endOffset":84962,"count":0},{"startOffset":84997,"endOffset":85121,"count":0},{"startOffset":85153,"endOffset":85220,"count":0},{"startOffset":85255,"endOffset":85318,"count":23},{"startOffset":85362,"endOffset":85425,"count":0},{"startOffset":85467,"endOffset":85526,"count":0},{"startOffset":85555,"endOffset":85622,"count":1},{"startOffset":85654,"endOffset":85706,"count":0},{"startOffset":85736,"endOffset":85799,"count":0},{"startOffset":85828,"endOffset":85889,"count":0},{"startOffset":85917,"endOffset":85976,"count":16},{"startOffset":86032,"endOffset":86158,"count":10},{"startOffset":86120,"endOffset":86144,"count":1},{"startOffset":86210,"endOffset":86332,"count":0},{"startOffset":86386,"endOffset":86510,"count":5},{"startOffset":86473,"endOffset":86496,"count":0},{"startOffset":86564,"endOffset":86688,"count":1},{"startOffset":86651,"endOffset":86674,"count":0},{"startOffset":86740,"endOffset":86788,"count":0},{"startOffset":86838,"endOffset":86899,"count":0},{"startOffset":86940,"endOffset":87029,"count":0},{"startOffset":87066,"endOffset":87123,"count":0},{"startOffset":87162,"endOffset":87180,"count":7},{"startOffset":87181,"endOffset":87192,"count":0},{"startOffset":87260,"endOffset":87307,"count":0},{"startOffset":87341,"endOffset":87395,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":84371,"endOffset":84432,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getOptions","ranges":[{"startOffset":87456,"endOffset":87469,"count":1}],"isBlockCoverage":true},{"functionName":"Yargs.self.positional","ranges":[{"startOffset":87493,"endOffset":89136,"count":0}],"isBlockCoverage":false},{"functionName":"group","ranges":[{"startOffset":89155,"endOffset":89676,"count":16},{"startOffset":89384,"endOffset":89442,"count":0},{"startOffset":89506,"endOffset":89511,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":89533,"endOffset":89647,"count":73},{"startOffset":89585,"endOffset":89598,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.getGroups","ranges":[{"startOffset":89699,"endOffset":89747,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.env","ranges":[{"startOffset":89764,"endOffset":90002,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.wrap","ranges":[{"startOffset":90020,"endOffset":90162,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.strict","ranges":[{"startOffset":90206,"endOffset":90348,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getStrict","ranges":[{"startOffset":90371,"endOffset":90383,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.strictCommands","ranges":[{"startOffset":90443,"endOffset":90593,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getStrictCommands","ranges":[{"startOffset":90624,"endOffset":90644,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.strictOptions","ranges":[{"startOffset":90702,"endOffset":90851,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getStrictOptions","ranges":[{"startOffset":90881,"endOffset":90900,"count":0}],"isBlockCoverage":false},{"functionName":"parserConfiguration","ranges":[{"startOffset":90960,"endOffset":91113,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getParserConfiguration","ranges":[{"startOffset":91149,"endOffset":91167,"count":3}],"isBlockCoverage":true},{"functionName":"Yargs.self.showHelp","ranges":[{"startOffset":91189,"endOffset":91534,"count":0}],"isBlockCoverage":false},{"functionName":"version","ranges":[{"startOffset":91582,"endOffset":92607,"count":1},{"startOffset":91775,"endOffset":91909,"count":0},{"startOffset":92028,"endOffset":92322,"count":0},{"startOffset":92374,"endOffset":92393,"count":0},{"startOffset":92492,"endOffset":92504,"count":0}],"isBlockCoverage":true},{"functionName":"guessVersion","ranges":[{"startOffset":92613,"endOffset":92714,"count":1},{"startOffset":92695,"endOffset":92707,"count":0}],"isBlockCoverage":true},{"functionName":"addHelpOpt","ranges":[{"startOffset":92773,"endOffset":93338,"count":1},{"startOffset":92941,"endOffset":93029,"count":0},{"startOffset":93066,"endOffset":93137,"count":0},{"startOffset":93180,"endOffset":93185,"count":0}],"isBlockCoverage":true},{"functionName":"addShowHiddenOpt","ranges":[{"startOffset":93484,"endOffset":93993,"count":0}],"isBlockCoverage":false},{"functionName":"hide","ranges":[{"startOffset":94011,"endOffset":94153,"count":0}],"isBlockCoverage":false},{"functionName":"showHelpOnFail","ranges":[{"startOffset":94181,"endOffset":94385,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.exitProcess","ranges":[{"startOffset":94438,"endOffset":94582,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getExitProcess","ranges":[{"startOffset":94610,"endOffset":94627,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.showCompletionScript","ranges":[{"startOffset":94661,"endOffset":94909,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getCompletion","ranges":[{"startOffset":94936,"endOffset":95084,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.locale","ranges":[{"startOffset":95104,"endOffset":95366,"count":1},{"startOffset":95202,"endOffset":95277,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self.updateStrings.self.updateLocale","ranges":[{"startOffset":95413,"endOffset":95572,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.detectLocale","ranges":[{"startOffset":95627,"endOffset":95762,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getDetectLocale","ranges":[{"startOffset":95791,"endOffset":95809,"count":0}],"isBlockCoverage":false},{"functionName":"log","ranges":[{"startOffset":95841,"endOffset":96077,"count":0}],"isBlockCoverage":false},{"functionName":"error","ranges":[{"startOffset":96087,"endOffset":96327,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self._getLoggerInstance","ranges":[{"startOffset":96366,"endOffset":96379,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self._hasOutput","ranges":[{"startOffset":96403,"endOffset":96418,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self._setHasOutput","ranges":[{"startOffset":96445,"endOffset":96484,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.recommendCommands","ranges":[{"startOffset":96542,"endOffset":96698,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getUsageInstance","ranges":[{"startOffset":96728,"endOffset":96741,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getValidationInstance","ranges":[{"startOffset":96776,"endOffset":96794,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.getCommandInstance","ranges":[{"startOffset":96826,"endOffset":96841,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self.terminalWidth","ranges":[{"startOffset":96868,"endOffset":96947,"count":0}],"isBlockCoverage":false},{"functionName":"get","ranges":[{"startOffset":97004,"endOffset":97038,"count":0}],"isBlockCoverage":false},{"functionName":"parseArgs","ranges":[{"startOffset":97096,"endOffset":102725,"count":1},{"startOffset":97242,"endOffset":97256,"count":0},{"startOffset":97788,"endOffset":97833,"count":0},{"startOffset":98002,"endOffset":98105,"count":0},{"startOffset":98221,"endOffset":98226,"count":0},{"startOffset":98347,"endOffset":98442,"count":0},{"startOffset":98723,"endOffset":98793,"count":0},{"startOffset":99107,"endOffset":99135,"count":0},{"startOffset":99137,"endOffset":99343,"count":0},{"startOffset":99622,"endOffset":99644,"count":0},{"startOffset":99646,"endOffset":99834,"count":0},{"startOffset":99877,"endOffset":99899,"count":0},{"startOffset":99900,"endOffset":99922,"count":0},{"startOffset":99924,"endOffset":100037,"count":0},{"startOffset":100094,"endOffset":100151,"count":0},{"startOffset":100152,"endOffset":100194,"count":0},{"startOffset":100196,"endOffset":100378,"count":0},{"startOffset":100392,"endOffset":100632,"count":0},{"startOffset":100669,"endOffset":101256,"count":0},{"startOffset":102045,"endOffset":102188,"count":0},{"startOffset":102278,"endOffset":102317,"count":0},{"startOffset":102485,"endOffset":102639,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":98256,"endOffset":98273,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":100946,"endOffset":101151,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":101329,"endOffset":101958,"count":43},{"startOffset":101378,"endOffset":101390,"count":0},{"startOffset":101392,"endOffset":101634,"count":0},{"startOffset":101683,"endOffset":101695,"count":0},{"startOffset":101697,"endOffset":101940,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":102103,"endOffset":102172,"count":0}],"isBlockCoverage":false},{"functionName":"Yargs.self._postProcess","ranges":[{"startOffset":102751,"endOffset":103332,"count":1},{"startOffset":102857,"endOffset":102869,"count":0},{"startOffset":102913,"endOffset":102925,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self._copyDoubleDash","ranges":[{"startOffset":103361,"endOffset":103593,"count":1},{"startOffset":103439,"endOffset":103592,"count":0}],"isBlockCoverage":true},{"functionName":"Yargs.self._parsePositionalNumbers","ranges":[{"startOffset":103630,"endOffset":103987,"count":1},{"startOffset":103680,"endOffset":103692,"count":0},{"startOffset":103821,"endOffset":103894,"count":0},{"startOffset":103896,"endOffset":103950,"count":0}],"isBlockCoverage":true},{"functionName":"runValidation","ranges":[{"startOffset":104015,"endOffset":104874,"count":1},{"startOffset":104146,"endOffset":104184,"count":0},{"startOffset":104344,"endOffset":104426,"count":0},{"startOffset":104446,"endOffset":104470,"count":0},{"startOffset":104472,"endOffset":104574,"count":0},{"startOffset":104607,"endOffset":104694,"count":0}],"isBlockCoverage":true},{"functionName":"guessLocale","ranges":[{"startOffset":104880,"endOffset":105201,"count":1},{"startOffset":104944,"endOffset":104951,"count":0},{"startOffset":105080,"endOffset":105120,"count":0},{"startOffset":105121,"endOffset":105143,"count":0}],"isBlockCoverage":true},{"functionName":"rebase","ranges":[{"startOffset":105273,"endOffset":105319,"count":1}],"isBlockCoverage":true},{"functionName":"isYargsInstance","ranges":[{"startOffset":105321,"endOffset":105406,"count":0}],"isBlockCoverage":false},{"functionName":"getEnv","ranges":[{"startOffset":105816,"endOffset":105865,"count":8}],"isBlockCoverage":true},{"functionName":"argv","ranges":[{"startOffset":106229,"endOffset":106247,"count":2}],"isBlockCoverage":true},{"functionName":"execPath","ranges":[{"startOffset":106293,"endOffset":106315,"count":1}],"isBlockCoverage":true},{"functionName":"exit","ranges":[{"startOffset":106331,"endOffset":106384,"count":0}],"isBlockCoverage":false}]},{"scriptId":"561","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/y18n/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":6783,"count":1}],"isBlockCoverage":true},{"functionName":"Y18N","ranges":[{"startOffset":123,"endOffset":611,"count":1},{"startOffset":196,"endOffset":201,"count":0},{"startOffset":243,"endOffset":257,"count":0},{"startOffset":343,"endOffset":349,"count":0},{"startOffset":473,"endOffset":498,"count":0}],"isBlockCoverage":true},{"functionName":"__","ranges":[{"startOffset":616,"endOffset":1683,"count":0}],"isBlockCoverage":false},{"functionName":"__n","ranges":[{"startOffset":1688,"endOffset":3211,"count":0}],"isBlockCoverage":false},{"functionName":"setLocale","ranges":[{"startOffset":3216,"endOffset":3271,"count":1}],"isBlockCoverage":true},{"functionName":"getLocale","ranges":[{"startOffset":3276,"endOffset":3323,"count":0}],"isBlockCoverage":false},{"functionName":"updateLocale","ranges":[{"startOffset":3328,"endOffset":3607,"count":0}],"isBlockCoverage":false},{"functionName":"_taggedLiteral","ranges":[{"startOffset":3612,"endOffset":3952,"count":0}],"isBlockCoverage":false},{"functionName":"_enqueueWrite","ranges":[{"startOffset":3957,"endOffset":4101,"count":0}],"isBlockCoverage":false},{"functionName":"_processWriteQueue","ranges":[{"startOffset":4106,"endOffset":4746,"count":0}],"isBlockCoverage":false},{"functionName":"_readLocaleFile","ranges":[{"startOffset":4751,"endOffset":5465,"count":0}],"isBlockCoverage":false},{"functionName":"_resolveLocaleFile","ranges":[{"startOffset":5470,"endOffset":5946,"count":0}],"isBlockCoverage":false},{"functionName":"_fileExistsSync","ranges":[{"startOffset":5951,"endOffset":6014,"count":0}],"isBlockCoverage":false},{"functionName":"y18n$1","ranges":[{"startOffset":6017,"endOffset":6358,"count":1}],"isBlockCoverage":true},{"functionName":"exists","ranges":[{"startOffset":6537,"endOffset":6683,"count":0}],"isBlockCoverage":false},{"functionName":"y18n","ranges":[{"startOffset":6701,"endOffset":6757,"count":1}],"isBlockCoverage":true}]},{"scriptId":"562","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/yargs-parser/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":42313,"count":1},{"startOffset":41005,"endOffset":41049,"count":0},{"startOffset":41190,"endOffset":41388,"count":0},{"startOffset":41425,"endOffset":41429,"count":0}],"isBlockCoverage":true},{"functionName":"camelCase","ranges":[{"startOffset":96,"endOffset":980,"count":10},{"startOffset":172,"endOffset":200,"count":0},{"startOffset":297,"endOffset":323,"count":0},{"startOffset":325,"endOffset":352,"count":0},{"startOffset":511,"endOffset":537,"count":0},{"startOffset":564,"endOffset":946,"count":132},{"startOffset":633,"endOffset":727,"count":12},{"startOffset":752,"endOffset":783,"count":122},{"startOffset":768,"endOffset":782,"count":110},{"startOffset":785,"endOffset":837,"count":12},{"startOffset":837,"endOffset":936,"count":120}],"isBlockCoverage":true},{"functionName":"decamelize","ranges":[{"startOffset":981,"endOffset":1474,"count":12},{"startOffset":1089,"endOffset":1095,"count":0},{"startOffset":1165,"endOffset":1447,"count":140},{"startOffset":1289,"endOffset":1297,"count":13},{"startOffset":1299,"endOffset":1377,"count":13},{"startOffset":1377,"endOffset":1441,"count":127}],"isBlockCoverage":true},{"functionName":"looksLikeNumber","ranges":[{"startOffset":1475,"endOffset":1786,"count":11},{"startOffset":1552,"endOffset":1565,"count":0},{"startOffset":1605,"endOffset":1617,"count":0},{"startOffset":1660,"endOffset":1672,"count":0},{"startOffset":1707,"endOffset":1720,"count":0}],"isBlockCoverage":true},{"functionName":"tokenizeArgString","ranges":[{"startOffset":1788,"endOffset":2573,"count":2},{"startOffset":1940,"endOffset":2572,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1893,"endOffset":1932,"count":12},{"startOffset":1920,"endOffset":1928,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2605,"endOffset":2843,"count":1}],"isBlockCoverage":true},{"functionName":"YargsParser","ranges":[{"startOffset":2941,"endOffset":2992,"count":1}],"isBlockCoverage":true},{"functionName":"parse","ranges":[{"startOffset":2997,"endOffset":39528,"count":2},{"startOffset":4641,"endOffset":4646,"count":1},{"startOffset":4794,"endOffset":4800,"count":1},{"startOffset":4801,"endOffset":4806,"count":1},{"startOffset":4930,"endOffset":4945,"count":1},{"startOffset":5604,"endOffset":5609,"count":1},{"startOffset":6247,"endOffset":6252,"count":1},{"startOffset":6408,"endOffset":6413,"count":1},{"startOffset":6571,"endOffset":6576,"count":1},{"startOffset":6733,"endOffset":6738,"count":1},{"startOffset":6898,"endOffset":6903,"count":1},{"startOffset":7076,"endOffset":7324,"count":1},{"startOffset":7370,"endOffset":7626,"count":1},{"startOffset":7675,"endOffset":8249,"count":1},{"startOffset":7756,"endOffset":7918,"count":0},{"startOffset":8746,"endOffset":15990,"count":11},{"startOffset":9037,"endOffset":9089,"count":0},{"startOffset":9144,"endOffset":9222,"count":0},{"startOffset":9264,"endOffset":9328,"count":7},{"startOffset":9306,"endOffset":9327,"count":0},{"startOffset":9330,"endOffset":9886,"count":4},{"startOffset":9521,"endOffset":9603,"count":0},{"startOffset":9679,"endOffset":9761,"count":0},{"startOffset":9886,"endOffset":15980,"count":7},{"startOffset":9934,"endOffset":9970,"count":0},{"startOffset":9972,"endOffset":10242,"count":0},{"startOffset":10283,"endOffset":10349,"count":3},{"startOffset":10325,"endOffset":10348,"count":0},{"startOffset":10351,"endOffset":11560,"count":4},{"startOffset":10559,"endOffset":10634,"count":0},{"startOffset":10709,"endOffset":10784,"count":0},{"startOffset":10925,"endOffset":10976,"count":3},{"startOffset":10978,"endOffset":11043,"count":1},{"startOffset":11044,"endOffset":11110,"count":1},{"startOffset":11112,"endOffset":11219,"count":1},{"startOffset":11219,"endOffset":11506,"count":3},{"startOffset":11282,"endOffset":11389,"count":0},{"startOffset":11560,"endOffset":15980,"count":3},{"startOffset":11605,"endOffset":11804,"count":0},{"startOffset":11847,"endOffset":11870,"count":0},{"startOffset":11872,"endOffset":12479,"count":0},{"startOffset":12522,"endOffset":12545,"count":0},{"startOffset":12547,"endOffset":15406,"count":0},{"startOffset":15450,"endOffset":15488,"count":0},{"startOffset":15489,"endOffset":15550,"count":0},{"startOffset":15552,"endOffset":15651,"count":0},{"startOffset":15687,"endOffset":15771,"count":0},{"startOffset":15830,"endOffset":15910,"count":0},{"startOffset":16275,"endOffset":16300,"count":0},{"startOffset":16478,"endOffset":16496,"count":1},{"startOffset":16510,"endOffset":16534,"count":0},{"startOffset":16715,"endOffset":16872,"count":0},{"startOffset":16917,"endOffset":17259,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":5635,"endOffset":6213,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6278,"endOffset":6375,"count":13}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6439,"endOffset":6538,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6602,"endOffset":6701,"count":5}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":6764,"endOffset":6862,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":6929,"endOffset":7030,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7124,"endOffset":7312,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7420,"endOffset":7614,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":7821,"endOffset":7902,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":8027,"endOffset":8223,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8358,"endOffset":8515,"count":23},{"startOffset":8407,"endOffset":8412,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8422,"endOffset":8503,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":16343,"endOffset":16448,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16560,"endOffset":16628,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16754,"endOffset":16794,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16804,"endOffset":16860,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16969,"endOffset":16984,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":16995,"endOffset":17247,"count":0}],"isBlockCoverage":false},{"functionName":"pushPositional","ranges":[{"startOffset":17268,"endOffset":17539,"count":3},{"startOffset":17422,"endOffset":17463,"count":0}],"isBlockCoverage":true},{"functionName":"eatNargs","ranges":[{"startOffset":17548,"endOffset":19169,"count":0}],"isBlockCoverage":false},{"functionName":"eatArray","ranges":[{"startOffset":19178,"endOffset":20962,"count":0}],"isBlockCoverage":false},{"functionName":"setArg","ranges":[{"startOffset":20971,"endOffset":22834,"count":8},{"startOffset":21029,"endOffset":21069,"count":0},{"startOffset":21071,"endOffset":21268,"count":0},{"startOffset":21443,"endOffset":21648,"count":2},{"startOffset":21685,"endOffset":21717,"count":0},{"startOffset":21719,"endOffset":22196,"count":0},{"startOffset":22251,"endOffset":22289,"count":0},{"startOffset":22291,"endOffset":22824,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21122,"endOffset":21201,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":21488,"endOffset":21632,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":21780,"endOffset":22180,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":22391,"endOffset":22808,"count":0}],"isBlockCoverage":false},{"functionName":"addNewAlias","ranges":[{"startOffset":22843,"endOffset":23188,"count":0}],"isBlockCoverage":false},{"functionName":"processValue","ranges":[{"startOffset":23197,"endOffset":24302,"count":8},{"startOffset":23271,"endOffset":23324,"count":5},{"startOffset":23325,"endOffset":23374,"count":0},{"startOffset":23376,"endOffset":23447,"count":0},{"startOffset":23537,"endOffset":23639,"count":0},{"startOffset":23699,"endOffset":23760,"count":0},{"startOffset":23859,"endOffset":23912,"count":0},{"startOffset":23914,"endOffset":23966,"count":0},{"startOffset":24021,"endOffset":24058,"count":0},{"startOffset":24060,"endOffset":24266,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":23709,"endOffset":23759,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":24138,"endOffset":24179,"count":0}],"isBlockCoverage":false},{"functionName":"maybeCoerceNumber","ranges":[{"startOffset":24311,"endOffset":24955,"count":11},{"startOffset":24411,"endOffset":24425,"count":3},{"startOffset":24443,"endOffset":24456,"count":1},{"startOffset":24456,"endOffset":24547,"count":10},{"startOffset":24548,"endOffset":24572,"count":10},{"startOffset":24574,"endOffset":24919,"count":10},{"startOffset":24642,"endOffset":24675,"count":1},{"startOffset":24676,"endOffset":24737,"count":1},{"startOffset":24778,"endOffset":24841,"count":9},{"startOffset":24843,"endOffset":24905,"count":1},{"startOffset":24919,"endOffset":24954,"count":10}],"isBlockCoverage":true},{"functionName":"setConfig","ranges":[{"startOffset":24964,"endOffset":26599,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":25168,"endOffset":26587,"count":1},{"startOffset":25302,"endOffset":26573,"count":0}],"isBlockCoverage":true},{"functionName":"setConfigObject","ranges":[{"startOffset":26608,"endOffset":27284,"count":0}],"isBlockCoverage":false},{"functionName":"setConfigObjects","ranges":[{"startOffset":27293,"endOffset":27537,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27417,"endOffset":27511,"count":0}],"isBlockCoverage":false},{"functionName":"applyEnvVars","ranges":[{"startOffset":27546,"endOffset":28422,"count":4},{"startOffset":27661,"endOffset":27730,"count":0},{"startOffset":27731,"endOffset":27735,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":27811,"endOffset":28410,"count":0}],"isBlockCoverage":false},{"functionName":"applyCoercions","ranges":[{"startOffset":28431,"endOffset":29278,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28564,"endOffset":29266,"count":48},{"startOffset":28744,"endOffset":29234,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":28940,"endOffset":29079,"count":0}],"isBlockCoverage":false},{"functionName":"setPlaceholderKeys","ranges":[{"startOffset":29287,"endOffset":29579,"count":0}],"isBlockCoverage":false},{"functionName":"applyDefaultsAndAliases","ranges":[{"startOffset":29588,"endOffset":30205,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29705,"endOffset":30193,"count":82},{"startOffset":29772,"endOffset":30179,"count":45},{"startOffset":29894,"endOffset":29916,"count":22},{"startOffset":29951,"endOffset":29956,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":29966,"endOffset":30159,"count":35},{"startOffset":30064,"endOffset":30071,"count":0}],"isBlockCoverage":true},{"functionName":"hasKey","ranges":[{"startOffset":30214,"endOffset":30639,"count":117},{"startOffset":30332,"endOffset":30356,"count":0},{"startOffset":30566,"endOffset":30579,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30395,"endOffset":30461,"count":0}],"isBlockCoverage":false},{"functionName":"setKey","ranges":[{"startOffset":30648,"endOffset":33097,"count":90},{"startOffset":30773,"endOffset":30797,"count":0},{"startOffset":31747,"endOffset":31783,"count":0},{"startOffset":31785,"endOffset":32029,"count":0},{"startOffset":32069,"endOffset":32128,"count":0},{"startOffset":32173,"endOffset":32667,"count":0},{"startOffset":32710,"endOffset":32724,"count":87},{"startOffset":32726,"endOffset":32798,"count":0},{"startOffset":32856,"endOffset":32909,"count":3},{"startOffset":32910,"endOffset":32962,"count":3},{"startOffset":32965,"endOffset":33022,"count":3},{"startOffset":33022,"endOffset":33087,"count":87}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":30836,"endOffset":31451,"count":0}],"isBlockCoverage":false},{"functionName":"extendAliases","ranges":[{"startOffset":33106,"endOffset":34699,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33165,"endOffset":34687,"count":8},{"startOffset":33214,"endOffset":33219,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33229,"endOffset":34671,"count":56},{"startOffset":33314,"endOffset":33321,"count":30},{"startOffset":33321,"endOffset":33386,"count":26},{"startOffset":33386,"endOffset":33391,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33453,"endOffset":33880,"count":34},{"startOffset":33508,"endOffset":33548,"count":10},{"startOffset":33550,"endOffset":33858,"count":10}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":33942,"endOffset":34395,"count":44},{"startOffset":33998,"endOffset":34016,"count":37},{"startOffset":34017,"endOffset":34057,"count":11},{"startOffset":34059,"endOffset":34373,"count":11},{"startOffset":34161,"endOffset":34200,"count":2},{"startOffset":34202,"endOffset":34347,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34445,"endOffset":34651,"count":19}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34542,"endOffset":34626,"count":33}],"isBlockCoverage":true},{"functionName":"checkAllAliases","ranges":[{"startOffset":34708,"endOffset":34993,"count":249},{"startOffset":34803,"endOffset":34808,"count":100},{"startOffset":34958,"endOffset":34974,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":34902,"endOffset":34927,"count":425}],"isBlockCoverage":true},{"functionName":"hasAnyFlag","ranges":[{"startOffset":35002,"endOffset":35300,"count":0}],"isBlockCoverage":false},{"functionName":"hasFlagsMatching","ranges":[{"startOffset":35309,"endOffset":35589,"count":0}],"isBlockCoverage":false},{"functionName":"hasAllShortFlags","ranges":[{"startOffset":35598,"endOffset":36444,"count":0}],"isBlockCoverage":false},{"functionName":"isUnknownOptionAsArg","ranges":[{"startOffset":36453,"endOffset":36584,"count":11},{"startOffset":36550,"endOffset":36573,"count":0}],"isBlockCoverage":true},{"functionName":"isUnknownOption","ranges":[{"startOffset":36593,"endOffset":37298,"count":0}],"isBlockCoverage":false},{"functionName":"defaultValue","ranges":[{"startOffset":37307,"endOffset":37634,"count":3},{"startOffset":37483,"endOffset":37536,"count":0}],"isBlockCoverage":true},{"functionName":"defaultForType","ranges":[{"startOffset":37643,"endOffset":37979,"count":3}],"isBlockCoverage":true},{"functionName":"guessType","ranges":[{"startOffset":37988,"endOffset":38548,"count":3},{"startOffset":38139,"endOffset":38177,"count":0},{"startOffset":38252,"endOffset":38290,"count":0},{"startOffset":38363,"endOffset":38402,"count":0},{"startOffset":38476,"endOffset":38513,"count":0}],"isBlockCoverage":true},{"functionName":"isUndefined","ranges":[{"startOffset":38557,"endOffset":38632,"count":9}],"isBlockCoverage":true},{"functionName":"checkConfiguration","ranges":[{"startOffset":38641,"endOffset":39213,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":38716,"endOffset":39201,"count":0}],"isBlockCoverage":false},{"functionName":"combineAliases","ranges":[{"startOffset":39531,"endOffset":40733,"count":2},{"startOffset":39871,"endOffset":40359,"count":7},{"startOffset":39937,"endOffset":40349,"count":21},{"startOffset":40130,"endOffset":40335,"count":0},{"startOffset":40349,"endOffset":40359,"count":21},{"startOffset":40359,"endOffset":40365,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39692,"endOffset":39770,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":39995,"endOffset":40089,"count":46}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40390,"endOffset":40708,"count":7}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":40453,"endOffset":40528,"count":15}],"isBlockCoverage":true},{"functionName":"increment","ranges":[{"startOffset":40734,"endOffset":40808,"count":90},{"startOffset":40791,"endOffset":40801,"count":0}],"isBlockCoverage":true},{"functionName":"sanitizeKey","ranges":[{"startOffset":40809,"endOffset":40913,"count":90},{"startOffset":40874,"endOffset":40895,"count":0}],"isBlockCoverage":true},{"functionName":"env","ranges":[{"startOffset":41495,"endOffset":41528,"count":0}],"isBlockCoverage":false},{"functionName":"require","ranges":[{"startOffset":41626,"endOffset":41933,"count":0}],"isBlockCoverage":false},{"functionName":"Parser","ranges":[{"startOffset":41958,"endOffset":42066,"count":1}],"isBlockCoverage":true},{"functionName":"yargsParser.detailed","ranges":[{"startOffset":42091,"endOffset":42161,"count":1}],"isBlockCoverage":true}]},{"scriptId":"563","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/cliui/build/index.cjs","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":9953,"count":1}],"isBlockCoverage":true},{"functionName":"UI","ranges":[{"startOffset":162,"endOffset":336,"count":0}],"isBlockCoverage":false},{"functionName":"span","ranges":[{"startOffset":341,"endOffset":428,"count":0}],"isBlockCoverage":false},{"functionName":"resetOutput","ranges":[{"startOffset":433,"endOffset":478,"count":0}],"isBlockCoverage":false},{"functionName":"div","ranges":[{"startOffset":483,"endOffset":956,"count":0}],"isBlockCoverage":false},{"functionName":"shouldApplyLayoutDSL","ranges":[{"startOffset":961,"endOffset":1101,"count":0}],"isBlockCoverage":false},{"functionName":"applyLayoutDSL","ranges":[{"startOffset":1106,"endOffset":2204,"count":0}],"isBlockCoverage":false},{"functionName":"colFromString","ranges":[{"startOffset":2209,"endOffset":2329,"count":0}],"isBlockCoverage":false},{"functionName":"measurePadding","ranges":[{"startOffset":2334,"endOffset":2546,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":2551,"endOffset":2880,"count":0}],"isBlockCoverage":false},{"functionName":"rowToString","ranges":[{"startOffset":2885,"endOffset":4770,"count":0}],"isBlockCoverage":false},{"functionName":"renderInline","ranges":[{"startOffset":4848,"endOffset":5613,"count":0}],"isBlockCoverage":false},{"functionName":"rasterize","ranges":[{"startOffset":5618,"endOffset":7065,"count":0}],"isBlockCoverage":false},{"functionName":"negatePadding","ranges":[{"startOffset":7070,"endOffset":7342,"count":0}],"isBlockCoverage":false},{"functionName":"columnWidths","ranges":[{"startOffset":7347,"endOffset":8184,"count":0}],"isBlockCoverage":false},{"functionName":"addBorder","ranges":[{"startOffset":8187,"endOffset":8433,"count":0}],"isBlockCoverage":false},{"functionName":"_minWidth","ranges":[{"startOffset":8512,"endOffset":8727,"count":0}],"isBlockCoverage":false},{"functionName":"getWindowWidth","ranges":[{"startOffset":8728,"endOffset":8952,"count":0}],"isBlockCoverage":false},{"functionName":"alignRight","ranges":[{"startOffset":8953,"endOffset":9156,"count":0}],"isBlockCoverage":false},{"functionName":"alignCenter","ranges":[{"startOffset":9157,"endOffset":9400,"count":0}],"isBlockCoverage":false},{"functionName":"cliui","ranges":[{"startOffset":9412,"endOffset":9653,"count":0}],"isBlockCoverage":false},{"functionName":"ui","ranges":[{"startOffset":9823,"endOffset":9930,"count":0}],"isBlockCoverage":false}]},{"scriptId":"564","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/string-width/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":923,"count":1}],"isBlockCoverage":true},{"functionName":"stringWidth","ranges":[{"startOffset":184,"endOffset":805,"count":0}],"isBlockCoverage":false}]},{"scriptId":"565","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/strip-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":154,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":73,"endOffset":152,"count":0}],"isBlockCoverage":false}]},{"scriptId":"566","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/ansi-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":350,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":348,"count":0}],"isBlockCoverage":false}]},{"scriptId":"567","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/is-fullwidth-code-point/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1756,"count":1}],"isBlockCoverage":true},{"functionName":"isFullwidthCodePoint","ranges":[{"startOffset":70,"endOffset":1667,"count":0}],"isBlockCoverage":false}]},{"scriptId":"568","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/emoji-regex/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10286,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":32,"endOffset":10284,"count":0}],"isBlockCoverage":false}]},{"scriptId":"569","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/wrap-ansi/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5772,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi","ranges":[{"startOffset":391,"endOffset":473,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsiHyperlink","ranges":[{"startOffset":501,"endOffset":586,"count":0}],"isBlockCoverage":false},{"functionName":"wordLengths","ranges":[{"startOffset":716,"endOffset":784,"count":0}],"isBlockCoverage":false},{"functionName":"wrapWord","ranges":[{"startOffset":894,"endOffset":2106,"count":0}],"isBlockCoverage":false},{"functionName":"stringVisibleTrimSpacesRight","ranges":[{"startOffset":2205,"endOffset":2490,"count":0}],"isBlockCoverage":false},{"functionName":"exec","ranges":[{"startOffset":2725,"endOffset":5528,"count":0}],"isBlockCoverage":false},{"functionName":"module.exports","ranges":[{"startOffset":5598,"endOffset":5770,"count":0}],"isBlockCoverage":false}]},{"scriptId":"570","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/wrap-ansi/node_modules/ansi-styles/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":4139,"count":1}],"isBlockCoverage":true},{"functionName":"wrapAnsi16","ranges":[{"startOffset":34,"endOffset":129,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi256","ranges":[{"startOffset":152,"endOffset":255,"count":0}],"isBlockCoverage":false},{"functionName":"wrapAnsi16m","ranges":[{"startOffset":278,"endOffset":402,"count":0}],"isBlockCoverage":false},{"functionName":"ansi2ansi","ranges":[{"startOffset":423,"endOffset":429,"count":0}],"isBlockCoverage":false},{"functionName":"rgb2rgb","ranges":[{"startOffset":447,"endOffset":469,"count":0}],"isBlockCoverage":false},{"functionName":"setLazyProperty","ranges":[{"startOffset":496,"endOffset":786,"count":30}],"isBlockCoverage":true},{"functionName":"get","ranges":[{"startOffset":575,"endOffset":737,"count":0}],"isBlockCoverage":false},{"functionName":"makeDynamicStyles","ranges":[{"startOffset":879,"endOffset":1400,"count":0}],"isBlockCoverage":false},{"functionName":"assembleStyles","ranges":[{"startOffset":1403,"endOffset":4021,"count":5},{"startOffset":2869,"endOffset":3201,"count":15},{"startOffset":2929,"endOffset":3108,"count":220}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3401,"endOffset":3464,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3509,"endOffset":3574,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3619,"endOffset":3678,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3722,"endOffset":3784,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3831,"endOffset":3895,"count":0}],"isBlockCoverage":false},{"functionName":"","ranges":[{"startOffset":3942,"endOffset":4000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"571","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/escalade/sync/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":416,"count":1}],"isBlockCoverage":true},{"functionName":"module.exports","ranges":[{"startOffset":113,"endOffset":415,"count":2},{"startOffset":235,"endOffset":261,"count":0},{"startOffset":277,"endOffset":413,"count":3},{"startOffset":331,"endOffset":356,"count":2},{"startOffset":356,"endOffset":404,"count":1},{"startOffset":404,"endOffset":410,"count":0}],"isBlockCoverage":true}]},{"scriptId":"572","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/get-caller-file/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1108,"count":1}],"isBlockCoverage":true},{"functionName":"getCallerFile","ranges":[{"startOffset":233,"endOffset":1073,"count":0}],"isBlockCoverage":false}]},{"scriptId":"573","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/require-directory/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2867,"count":1}],"isBlockCoverage":true},{"functionName":"rename","ranges":[{"startOffset":238,"endOffset":280,"count":0}],"isBlockCoverage":false},{"functionName":"visit","ranges":[{"startOffset":293,"endOffset":333,"count":0}],"isBlockCoverage":false},{"functionName":"checkFileInclusion","ranges":[{"startOffset":340,"endOffset":1270,"count":0}],"isBlockCoverage":false},{"functionName":"requireDirectory","ranges":[{"startOffset":1272,"endOffset":2788,"count":0}],"isBlockCoverage":false}]},{"scriptId":"574","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/yargs/helpers/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":291,"count":1}],"isBlockCoverage":true},{"functionName":"applyExtends","ranges":[{"startOffset":139,"endOffset":244,"count":0}],"isBlockCoverage":false}]},{"scriptId":"575","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2434,"count":1}],"isBlockCoverage":true}]},{"scriptId":"576","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/ascii.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":16651,"count":1}],"isBlockCoverage":true},{"functionName":"emitForest","ranges":[{"startOffset":117,"endOffset":193,"count":0}],"isBlockCoverage":false},{"functionName":"emitForestLines","ranges":[{"startOffset":227,"endOffset":417,"count":0}],"isBlockCoverage":false},{"functionName":"getColMap","ranges":[{"startOffset":461,"endOffset":1221,"count":0}],"isBlockCoverage":false},{"functionName":"emitTree","ranges":[{"startOffset":1222,"endOffset":1644,"count":0}],"isBlockCoverage":false},{"functionName":"parseFunctionRanges","ranges":[{"startOffset":1645,"endOffset":1935,"count":0}],"isBlockCoverage":false},{"functionName":"emitTreeLayer","ranges":[{"startOffset":2062,"endOffset":2487,"count":0}],"isBlockCoverage":false},{"functionName":"parseTreeLayer","ranges":[{"startOffset":2488,"endOffset":3181,"count":0}],"isBlockCoverage":false},{"functionName":"emitRange","ranges":[{"startOffset":3182,"endOffset":3465,"count":0}],"isBlockCoverage":false},{"functionName":"emitOffsets","ranges":[{"startOffset":3466,"endOffset":3711,"count":0}],"isBlockCoverage":false},{"functionName":"parseOffsets","ranges":[{"startOffset":3712,"endOffset":4000,"count":0}],"isBlockCoverage":false}]},{"scriptId":"577","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/compare.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3762,"count":1}],"isBlockCoverage":true},{"functionName":"compareScriptCovs","ranges":[{"startOffset":208,"endOffset":385,"count":64},{"startOffset":268,"endOffset":293,"count":0},{"startOffset":322,"endOffset":383,"count":32}],"isBlockCoverage":true},{"functionName":"compareFunctionCovs","ranges":[{"startOffset":544,"endOffset":637,"count":144}],"isBlockCoverage":true},{"functionName":"compareRangeCovs","ranges":[{"startOffset":882,"endOffset":1071,"count":194},{"startOffset":1010,"endOffset":1069,"count":0}],"isBlockCoverage":true}]},{"scriptId":"578","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/clone.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":5711,"count":1}],"isBlockCoverage":true},{"functionName":"cloneProcessCov","ranges":[{"startOffset":218,"endOffset":420,"count":0}],"isBlockCoverage":false},{"functionName":"cloneScriptCov","ranges":[{"startOffset":601,"endOffset":884,"count":0}],"isBlockCoverage":false},{"functionName":"cloneFunctionCov","ranges":[{"startOffset":1071,"endOffset":1375,"count":0}],"isBlockCoverage":false},{"functionName":"cloneRangeCov","ranges":[{"startOffset":1557,"endOffset":1726,"count":0}],"isBlockCoverage":false}]},{"scriptId":"579","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/merge.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":36320,"count":1}],"isBlockCoverage":true},{"functionName":"mergeProcessCovs","ranges":[{"startOffset":473,"endOffset":1253,"count":1},{"startOffset":548,"endOffset":586,"count":0},{"startOffset":718,"endOffset":983,"count":20},{"startOffset":1062,"endOffset":1156,"count":20}],"isBlockCoverage":true},{"functionName":"mergeScriptCovs","ranges":[{"startOffset":1708,"endOffset":3304,"count":20},{"startOffset":1780,"endOffset":1813,"count":0},{"startOffset":1972,"endOffset":3303,"count":0}],"isBlockCoverage":true},{"functionName":"stringifyFunctionRootRange","ranges":[{"startOffset":3750,"endOffset":3927,"count":0}],"isBlockCoverage":false},{"functionName":"mergeFunctionCovs","ranges":[{"startOffset":4354,"endOffset":5256,"count":0}],"isBlockCoverage":false},{"functionName":"mergeRangeTrees","ranges":[{"startOffset":5370,"endOffset":5711,"count":0}],"isBlockCoverage":false},{"functionName":"RangeTreeWithParent","ranges":[{"startOffset":5744,"endOffset":5848,"count":0}],"isBlockCoverage":false},{"functionName":"StartEvent","ranges":[{"startOffset":5874,"endOffset":5966,"count":0}],"isBlockCoverage":false},{"functionName":"compare","ranges":[{"startOffset":5978,"endOffset":6035,"count":0}],"isBlockCoverage":false},{"functionName":"StartEventQueue","ranges":[{"startOffset":6066,"endOffset":6219,"count":0}],"isBlockCoverage":false},{"functionName":"fromParentTrees","ranges":[{"startOffset":6231,"endOffset":6980,"count":0}],"isBlockCoverage":false},{"functionName":"setPendingOffset","ranges":[{"startOffset":6985,"endOffset":7054,"count":0}],"isBlockCoverage":false},{"functionName":"pushPendingTree","ranges":[{"startOffset":7059,"endOffset":7219,"count":0}],"isBlockCoverage":false},{"functionName":"next","ranges":[{"startOffset":7224,"endOffset":8196,"count":0}],"isBlockCoverage":false},{"functionName":"mergeRangeTreeChildren","ranges":[{"startOffset":8199,"endOffset":9658,"count":0}],"isBlockCoverage":false},{"functionName":"insertChild","ranges":[{"startOffset":9659,"endOffset":9899,"count":0}],"isBlockCoverage":false},{"functionName":"nextChild","ranges":[{"startOffset":9900,"endOffset":10398,"count":0}],"isBlockCoverage":false}]},{"scriptId":"580","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/normalize.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":7645,"count":1}],"isBlockCoverage":true},{"functionName":"normalizeProcessCov","ranges":[{"startOffset":470,"endOffset":700,"count":1},{"startOffset":639,"endOffset":698,"count":20}],"isBlockCoverage":true},{"functionName":"deepNormalizeProcessCov","ranges":[{"startOffset":950,"endOffset":1133,"count":0}],"isBlockCoverage":false},{"functionName":"normalizeScriptCov","ranges":[{"startOffset":1395,"endOffset":1498,"count":20}],"isBlockCoverage":true},{"functionName":"deepNormalizeScriptCov","ranges":[{"startOffset":1744,"endOffset":1919,"count":20},{"startOffset":1836,"endOffset":1882,"count":164}],"isBlockCoverage":true},{"functionName":"normalizeFunctionCov","ranges":[{"startOffset":2163,"endOffset":2400,"count":164}],"isBlockCoverage":true},{"functionName":"normalizeRangeTree","ranges":[{"startOffset":2475,"endOffset":2534,"count":164}],"isBlockCoverage":true}]},{"scriptId":"581","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/range-tree.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":15968,"count":1}],"isBlockCoverage":true},{"functionName":"RangeTree","ranges":[{"startOffset":99,"endOffset":261,"count":214}],"isBlockCoverage":true},{"functionName":"fromSortedRanges","ranges":[{"startOffset":355,"endOffset":1328,"count":164},{"startOffset":514,"endOffset":1301,"count":214},{"startOffset":645,"endOffset":764,"count":164},{"startOffset":764,"endOffset":843,"count":50},{"startOffset":843,"endOffset":1167,"count":62},{"startOffset":1033,"endOffset":1079,"count":50},{"startOffset":1079,"endOffset":1153,"count":12},{"startOffset":1167,"endOffset":1301,"count":50}],"isBlockCoverage":true},{"functionName":"normalize","ranges":[{"startOffset":1333,"endOffset":2815,"count":214},{"startOffset":1482,"endOffset":1823,"count":50},{"startOffset":1520,"endOffset":1565,"count":38},{"startOffset":1565,"endOffset":1781,"count":12},{"startOffset":1614,"endOffset":1639,"count":4},{"startOffset":1641,"endOffset":1690,"count":0},{"startOffset":1856,"endOffset":1891,"count":38},{"startOffset":1927,"endOffset":2258,"count":28},{"startOffset":2011,"endOffset":2036,"count":0},{"startOffset":2038,"endOffset":2248,"count":0}],"isBlockCoverage":true},{"functionName":"endChain","ranges":[{"startOffset":2301,"endOffset":2809,"count":50},{"startOffset":2358,"endOffset":2736,"count":0}],"isBlockCoverage":true},{"functionName":"split","ranges":[{"startOffset":2934,"endOffset":3830,"count":0}],"isBlockCoverage":false},{"functionName":"toRanges","ranges":[{"startOffset":3956,"endOffset":4465,"count":164},{"startOffset":4109,"endOffset":4436,"count":214},{"startOffset":4357,"endOffset":4426,"count":50}],"isBlockCoverage":true}]},{"scriptId":"582","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-reports/lib/lcov/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":909,"count":1}],"isBlockCoverage":true},{"functionName":"LcovReport","ranges":[{"startOffset":331,"endOffset":508,"count":1}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":572,"endOffset":876,"count":5}],"isBlockCoverage":true},{"functionName":"LcovReport.<computed>","ranges":[{"startOffset":645,"endOffset":873,"count":40},{"startOffset":754,"endOffset":798,"count":22},{"startOffset":823,"endOffset":867,"count":30}],"isBlockCoverage":true}]},{"scriptId":"583","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-reports/lib/lcovonly/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":2615,"count":1}],"isBlockCoverage":true},{"functionName":"LcovOnlyReport","ranges":[{"startOffset":249,"endOffset":461,"count":1},{"startOffset":306,"endOffset":311,"count":0},{"startOffset":343,"endOffset":357,"count":0}],"isBlockCoverage":true},{"functionName":"onStart","ranges":[{"startOffset":467,"endOffset":563,"count":1}],"isBlockCoverage":true},{"functionName":"onDetail","ranges":[{"startOffset":569,"endOffset":2521,"count":20}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1131,"endOffset":1381,"count":25},{"startOffset":1283,"endOffset":1294,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1547,"endOffset":1685,"count":25}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1727,"endOffset":1800,"count":2591}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1953,"endOffset":2356,"count":208},{"startOffset":2249,"endOffset":2346,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2129,"endOffset":2233,"count":208}],"isBlockCoverage":true},{"functionName":"onEnd","ranges":[{"startOffset":2527,"endOffset":2578,"count":1}],"isBlockCoverage":true}]},{"scriptId":"584","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-reports/lib/html/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":14337,"count":1}],"isBlockCoverage":true},{"functionName":"htmlHead","ranges":[{"startOffset":339,"endOffset":993,"count":58}],"isBlockCoverage":true},{"functionName":"headerTemplate","ranges":[{"startOffset":995,"endOffset":3163,"count":58}],"isBlockCoverage":true},{"functionName":"metricsTemplate","ranges":[{"startOffset":1034,"endOffset":1362,"count":232}],"isBlockCoverage":true},{"functionName":"skipTemplate","ranges":[{"startOffset":1368,"endOffset":2174,"count":58},{"startOffset":1944,"endOffset":2173,"count":0}],"isBlockCoverage":true},{"functionName":"countLabel","ranges":[{"startOffset":1588,"endOffset":1676,"count":174},{"startOffset":1635,"endOffset":1676,"count":0}],"isBlockCoverage":true},{"functionName":"footerTemplate","ranges":[{"startOffset":3165,"endOffset":3964,"count":58}],"isBlockCoverage":true},{"functionName":"detailTemplate","ranges":[{"startOffset":3966,"endOffset":4769,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":4058,"endOffset":4073,"count":5210}],"isBlockCoverage":true},{"functionName":"lineLink","ranges":[{"startOffset":4097,"endOffset":4165,"count":5210}],"isBlockCoverage":true},{"functionName":"lineCount","ranges":[{"startOffset":4189,"endOffset":4272,"count":5210}],"isBlockCoverage":true},{"functionName":"summaryLineTemplate","ranges":[{"startOffset":5875,"endOffset":7540,"count":56}],"isBlockCoverage":true},{"functionName":"percentGraph","ranges":[{"startOffset":6002,"endOffset":6408,"count":56},{"startOffset":6039,"endOffset":6073,"count":0},{"startOffset":6136,"endOffset":6183,"count":34}],"isBlockCoverage":true},{"functionName":"summaryType","ranges":[{"startOffset":6434,"endOffset":7059,"count":224},{"startOffset":6805,"endOffset":7029,"count":56}],"isBlockCoverage":true},{"functionName":"getPath","ranges":[{"startOffset":7767,"endOffset":8182,"count":1580},{"startOffset":7821,"endOffset":7857,"count":812},{"startOffset":7857,"endOffset":7936,"count":768},{"startOffset":7936,"endOffset":8101,"count":328},{"startOffset":7971,"endOffset":8029,"count":240},{"startOffset":8029,"endOffset":8091,"count":88},{"startOffset":8101,"endOffset":8151,"count":440},{"startOffset":8151,"endOffset":8181,"count":768}],"isBlockCoverage":true},{"functionName":"relativePath","ranges":[{"startOffset":8189,"endOffset":8397,"count":558}],"isBlockCoverage":true},{"functionName":"assetPath","ranges":[{"startOffset":8404,"endOffset":8493,"count":406}],"isBlockCoverage":true},{"functionName":"fixPct","ranges":[{"startOffset":8498,"endOffset":8631,"count":0}],"isBlockCoverage":false},{"functionName":"HtmlReport","ranges":[{"startOffset":8675,"endOffset":8948,"count":2},{"startOffset":8849,"endOffset":8854,"count":1}],"isBlockCoverage":true},{"functionName":"getBreadcrumbHtml","ranges":[{"startOffset":8954,"endOffset":9592,"count":58},{"startOffset":9072,"endOffset":9159,"count":96},{"startOffset":9506,"endOffset":9559,"count":56},{"startOffset":9572,"endOffset":9585,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9199,"endOffset":9427,"count":96},{"startOffset":9338,"endOffset":9352,"count":56}],"isBlockCoverage":true},{"functionName":"fillTemplate","ranges":[{"startOffset":9598,"endOffset":10670,"count":58},{"startOffset":9791,"endOffset":9805,"count":2}],"isBlockCoverage":true},{"functionName":"getTemplateData","ranges":[{"startOffset":10676,"endOffset":10741,"count":58}],"isBlockCoverage":true},{"functionName":"getWriter","ranges":[{"startOffset":10747,"endOffset":10903,"count":62},{"startOffset":10794,"endOffset":10902,"count":31}],"isBlockCoverage":true},{"functionName":"onStart","ranges":[{"startOffset":10909,"endOffset":11888,"count":2}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11053,"endOffset":11880,"count":4}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":11230,"endOffset":11868,"count":16},{"startOffset":11470,"endOffset":11854,"count":14},{"startOffset":11568,"endOffset":11652,"count":0}],"isBlockCoverage":true},{"functionName":"onSummary","ranges":[{"startOffset":11894,"endOffset":13748,"count":18}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":12353,"endOffset":13634,"count":56},{"startOffset":12493,"endOffset":12503,"count":0},{"startOffset":12505,"endOffset":12544,"count":0},{"startOffset":12603,"endOffset":12617,"count":0},{"startOffset":13386,"endOffset":13403,"count":0}],"isBlockCoverage":true},{"functionName":"onDetail","ranges":[{"startOffset":13754,"endOffset":14304,"count":40}],"isBlockCoverage":true}]},{"scriptId":"585","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/html-escaper/cjs/index.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":1799,"count":1}],"isBlockCoverage":true},{"functionName":"escape","ranges":[{"startOffset":1544,"endOffset":1602,"count":690}],"isBlockCoverage":true},{"functionName":"unescape","ranges":[{"startOffset":1629,"endOffset":1691,"count":0}],"isBlockCoverage":false},{"functionName":"pe","ranges":[{"startOffset":1722,"endOffset":1758,"count":0}],"isBlockCoverage":false},{"functionName":"cape","ranges":[{"startOffset":1760,"endOffset":1798,"count":0}],"isBlockCoverage":false}]},{"scriptId":"586","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-reports/lib/html/annotator.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":10398,"count":1}],"isBlockCoverage":true},{"functionName":"title","ranges":[{"startOffset":405,"endOffset":464,"count":5648}],"isBlockCoverage":true},{"functionName":"customEscape","ranges":[{"startOffset":466,"endOffset":695,"count":5210}],"isBlockCoverage":true},{"functionName":"annotateLines","ranges":[{"startOffset":697,"endOffset":1104,"count":40},{"startOffset":826,"endOffset":849,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":888,"endOffset":1100,"count":5182},{"startOffset":1016,"endOffset":1023,"count":4934},{"startOffset":1024,"endOffset":1030,"count":248}],"isBlockCoverage":true},{"functionName":"annotateStatements","ranges":[{"startOffset":1106,"endOffset":2296,"count":40}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":1305,"endOffset":2292,"count":5182},{"startOffset":1403,"endOffset":1410,"count":4934},{"startOffset":1411,"endOffset":1417,"count":248},{"startOffset":1681,"endOffset":1695,"count":0},{"startOffset":1881,"endOffset":1909,"count":248},{"startOffset":1911,"endOffset":2286,"count":248},{"startOffset":1952,"endOffset":2041,"count":0},{"startOffset":2211,"endOffset":2234,"count":0}],"isBlockCoverage":true},{"functionName":"annotateFunctions","ranges":[{"startOffset":2298,"endOffset":3635,"count":40},{"startOffset":2450,"endOffset":2473,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":2510,"endOffset":3631,"count":50},{"startOffset":2599,"endOffset":2606,"count":46},{"startOffset":2607,"endOffset":2613,"count":4},{"startOffset":2746,"endOffset":2757,"count":0},{"startOffset":3021,"endOffset":3035,"count":0},{"startOffset":3220,"endOffset":3248,"count":4},{"startOffset":3250,"endOffset":3625,"count":4},{"startOffset":3550,"endOffset":3573,"count":0}],"isBlockCoverage":true},{"functionName":"annotateBranches","ranges":[{"startOffset":3637,"endOffset":8409,"count":40},{"startOffset":3804,"endOffset":3827,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3869,"endOffset":8405,"count":416},{"startOffset":4365,"endOffset":4412,"count":58},{"startOffset":4641,"endOffset":4745,"count":0},{"startOffset":4746,"endOffset":4860,"count":0},{"startOffset":4861,"endOffset":4967,"count":0},{"startOffset":4982,"endOffset":5108,"count":0},{"startOffset":5686,"endOffset":5702,"count":0},{"startOffset":6208,"endOffset":6254,"count":58},{"startOffset":6255,"endOffset":6314,"count":0},{"startOffset":6333,"endOffset":6617,"count":0},{"startOffset":6651,"endOffset":6679,"count":58},{"startOffset":6681,"endOffset":8375,"count":58},{"startOffset":6772,"endOffset":6931,"count":32},{"startOffset":7053,"endOffset":8072,"count":0},{"startOffset":8246,"endOffset":8269,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":3946,"endOffset":3961,"count":416}],"isBlockCoverage":true},{"functionName":"annotateSourceCode","ranges":[{"startOffset":8411,"endOffset":10359,"count":40},{"startOffset":9885,"endOffset":10357,"count":0}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":8707,"endOffset":8926,"count":5210}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9497,"endOffset":9551,"count":5210},{"startOffset":9540,"endOffset":9551,"count":364}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":9607,"endOffset":9724,"count":5210},{"startOffset":9685,"endOffset":9702,"count":4934},{"startOffset":9703,"endOffset":9713,"count":276}],"isBlockCoverage":true},{"functionName":"","ranges":[{"startOffset":10070,"endOffset":10199,"count":0}],"isBlockCoverage":false}]},{"scriptId":"587","url":"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/istanbul-reports/lib/html/insertion-text.js","functions":[{"functionName":"","ranges":[{"startOffset":0,"endOffset":3120,"count":1}],"isBlockCoverage":true},{"functionName":"InsertionText","ranges":[{"startOffset":147,"endOffset":403,"count":5250}],"isBlockCoverage":true},{"functionName":"findFirstNonBlank","ranges":[{"startOffset":490,"endOffset":801,"count":5250},{"startOffset":651,"endOffset":775,"count":36622},{"startOffset":702,"endOffset":765,"count":4772}],"isBlockCoverage":true},{"functionName":"findLastNonBlank","ranges":[{"startOffset":807,"endOffset":1135,"count":5250},{"startOffset":985,"endOffset":1109,"count":5332},{"startOffset":1036,"endOffset":1099,"count":4772}],"isBlockCoverage":true},{"functionName":"originalLength","ranges":[{"startOffset":1141,"endOffset":1197,"count":926}],"isBlockCoverage":true},{"functionName":"insertAt","ranges":[{"startOffset":1204,"endOffset":1985,"count":620},{"startOffset":1380,"endOffset":1395,"count":0},{"startOffset":1439,"endOffset":1462,"count":270},{"startOffset":1463,"endOffset":1468,"count":350},{"startOffset":1492,"endOffset":1495,"count":2},{"startOffset":1496,"endOffset":1501,"count":618},{"startOffset":1571,"endOffset":1611,"count":244},{"startOffset":1647,"endOffset":1701,"count":300}],"isBlockCoverage":true},{"functionName":"findOffset","ranges":[{"startOffset":1992,"endOffset":2704,"count":620},{"startOffset":2188,"endOffset":2506,"count":310},{"startOffset":2279,"endOffset":2338,"count":4},{"startOffset":2458,"endOffset":2496,"count":4},{"startOffset":2529,"endOffset":2553,"count":310},{"startOffset":2555,"endOffset":2600,"count":4},{"startOffset":2600,"endOffset":2665,"count":616}],"isBlockCoverage":true},{"functionName":"wrap","ranges":[{"startOffset":2711,"endOffset":2924,"count":310}],"isBlockCoverage":true},{"functionName":"wrapLine","ranges":[{"startOffset":2931,"endOffset":3032,"count":0}],"isBlockCoverage":false},{"functionName":"toString","ranges":[{"startOffset":3039,"endOffset":3083,"count":5210}],"isBlockCoverage":true}]}],"timestamp":195275.693648,"source-map-cache":{"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@jridgewell/trace-mapping/dist/trace-mapping.umd.js":{"lineLengths":[29,161,137,156,72,0,118,0,77,0,35,72,79,134,40,24,59,5,0,7,67,7,34,18,22,44,40,5,0,21,28,26,28,26,33,35,0,41,67,46,28,106,68,19,40,104,59,9,24,5,55,55,39,25,9,31,5,29,47,56,29,13,9,20,5,40,19,32,41,5,35,37,5,0,22,7,81,100,101,22,6,12,28,24,82,6,30,42,42,10,7,56,29,50,55,28,29,27,13,26,30,13,18,31,13,9,22,23,5,50,67,47,22,9,21,5,50,54,47,22,9,21,5,30,16,24,27,26,10,5,7,100,87,7,65,57,20,39,30,40,83,33,13,39,76,55,13,18,33,13,9,28,34,77,5,0,103,32,45,50,50,36,51,36,37,29,55,52,56,60,103,48,107,105,109,66,137,99,13,9,23,5,42,52,36,9,29,5,104,101,104,99,40,31,35,5,0,43,71,36,48,28,27,34,25,100,24,23,30,18,20,27,21,10,51,6,127,35,51,48,30,32,42,58,70,38,80,17,41,58,17,13,142,9,5,130,32,41,48,45,41,53,66,41,33,21,45,12,60,42,50,41,102,103,106,69,33,23,100,99,49,108,54,55,36,51,36,53,108,33,63,27,39,39,29,17,72,52,56,41,70,104,13,9,5,33,46,31,5,34,49,24,26,5,0,82,102,33,35,7,79,7,37,7,95,7,37,7,97,84,7,34,7,96,101,28,7,41,7,99,7,42,7,100,7,46,7,57,7,33,7,95,7,38,7,103,12,7,41,7,104,41,7,32,7,104,41,7,32,20,34,53,46,27,62,89,35,29,31,41,35,49,74,78,40,47,41,42,13,18,42,62,13,48,40,44,9,5,12,44,19,127,10,44,90,10,55,57,88,85,39,28,43,111,57,10,72,19,25,47,27,49,57,88,85,39,56,43,119,29,56,44,37,56,51,178,10,85,91,97,10,81,101,10,44,57,51,54,40,55,40,48,51,38,44,46,36,43,57,50,48,21,41,45,24,38,40,31,37,39,29,23,17,13,10,53,69,39,28,48,29,56,63,10,56,64,43,26,10,39,60,10,39,60,10,74,19,25,47,27,49,53,54,35,62,35,55,165,58,33,55,57,20,83,83,29,44,44,92,9,9,35,16,33,27,29,39,33,47,21,10,5,51,46,5,37,32,5,71,71,20,100,9,44,20,54,22,21,5,74,91,102,104,105,106,100,35,49,18,50,22,104,104,33,69,97,19,59,61,26,35,42,98,9,22,5,0,28,56,50,32,0,66,0,4,45,0],"data":{"version":3,"file":"trace-mapping.umd.js","sources":["file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@jridgewell/trace-mapping/src/resolve.ts","file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@jridgewell/trace-mapping/src/strip-filename.ts","file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@jridgewell/trace-mapping/src/sourcemap-segment.ts","file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@jridgewell/trace-mapping/src/sort.ts","file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@jridgewell/trace-mapping/src/binary-search.ts","file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@jridgewell/trace-mapping/src/by-source.ts","file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@jridgewell/trace-mapping/src/any-map.ts","file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@jridgewell/trace-mapping/src/trace-mapping.ts"],"sourcesContent":["import resolveUri from '@jridgewell/resolve-uri';\n\nexport default function resolve(input: string, base: string | undefined): string {\n  // The base is always treated as a directory, if it's not empty.\n  // https://github.com/mozilla/source-map/blob/8cb3ee57/lib/util.js#L327\n  // https://github.com/chromium/chromium/blob/da4adbb3/third_party/blink/renderer/devtools/front_end/sdk/SourceMap.js#L400-L401\n  if (base && !base.endsWith('/')) base += '/';\n\n  return resolveUri(input, base);\n}\n","/**\n * Removes everything after the last \"/\", but leaves the slash.\n */\nexport default function stripFilename(path: string | undefined | null): string {\n  if (!path) return '';\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n","type GeneratedColumn = number;\ntype SourcesIndex = number;\ntype SourceLine = number;\ntype SourceColumn = number;\ntype NamesIndex = number;\n\ntype GeneratedLine = number;\n\nexport type SourceMapSegment =\n  | [GeneratedColumn]\n  | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn]\n  | [GeneratedColumn, SourcesIndex, SourceLine, SourceColumn, NamesIndex];\n\nexport type ReverseSegment = [SourceColumn, GeneratedLine, GeneratedColumn];\n\nexport const COLUMN = 0;\nexport const SOURCES_INDEX = 1;\nexport const SOURCE_LINE = 2;\nexport const SOURCE_COLUMN = 3;\nexport const NAMES_INDEX = 4;\n\nexport const REV_GENERATED_LINE = 1;\nexport const REV_GENERATED_COLUMN = 2;\n","import { COLUMN } from './sourcemap-segment';\n\nimport type { SourceMapSegment } from './sourcemap-segment';\n\nexport default function maybeSort(\n  mappings: SourceMapSegment[][],\n  owned: boolean,\n): SourceMapSegment[][] {\n  const unsortedIndex = nextUnsortedSegmentLine(mappings, 0);\n  if (unsortedIndex === mappings.length) return mappings;\n\n  // If we own the array (meaning we parsed it from JSON), then we're free to directly mutate it. If\n  // not, we do not want to modify the consumer's input array.\n  if (!owned) mappings = mappings.slice();\n\n  for (let i = unsortedIndex; i < mappings.length; i = nextUnsortedSegmentLine(mappings, i + 1)) {\n    mappings[i] = sortSegments(mappings[i], owned);\n  }\n  return mappings;\n}\n\nfunction nextUnsortedSegmentLine(mappings: SourceMapSegment[][], start: number): number {\n  for (let i = start; i < mappings.length; i++) {\n    if (!isSorted(mappings[i])) return i;\n  }\n  return mappings.length;\n}\n\nfunction isSorted(line: SourceMapSegment[]): boolean {\n  for (let j = 1; j < line.length; j++) {\n    if (line[j][COLUMN] < line[j - 1][COLUMN]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction sortSegments(line: SourceMapSegment[], owned: boolean): SourceMapSegment[] {\n  if (!owned) line = line.slice();\n  return line.sort(sortComparator);\n}\n\nfunction sortComparator(a: SourceMapSegment, b: SourceMapSegment): number {\n  return a[COLUMN] - b[COLUMN];\n}\n","import type { SourceMapSegment, ReverseSegment } from './sourcemap-segment';\nimport { COLUMN } from './sourcemap-segment';\n\nexport type MemoState = {\n  lastKey: number;\n  lastNeedle: number;\n  lastIndex: number;\n};\n\nexport let found = false;\n\n/**\n * A binary search implementation that returns the index if a match is found.\n * If no match is found, then the left-index (the index associated with the item that comes just\n * before the desired index) is returned. To maintain proper sort order, a splice would happen at\n * the next index:\n *\n * ```js\n * const array = [1, 3];\n * const needle = 2;\n * const index = binarySearch(array, needle, (item, needle) => item - needle);\n *\n * assert.equal(index, 0);\n * array.splice(index + 1, 0, needle);\n * assert.deepEqual(array, [1, 2, 3]);\n * ```\n */\nexport function binarySearch(\n  haystack: SourceMapSegment[] | ReverseSegment[],\n  needle: number,\n  low: number,\n  high: number,\n): number {\n  while (low <= high) {\n    const mid = low + ((high - low) >> 1);\n    const cmp = haystack[mid][COLUMN] - needle;\n\n    if (cmp === 0) {\n      found = true;\n      return mid;\n    }\n\n    if (cmp < 0) {\n      low = mid + 1;\n    } else {\n      high = mid - 1;\n    }\n  }\n\n  found = false;\n  return low - 1;\n}\n\nexport function upperBound(\n  haystack: SourceMapSegment[] | ReverseSegment[],\n  needle: number,\n  index: number,\n): number {\n  for (let i = index + 1; i < haystack.length; index = i++) {\n    if (haystack[i][COLUMN] !== needle) break;\n  }\n  return index;\n}\n\nexport function lowerBound(\n  haystack: SourceMapSegment[] | ReverseSegment[],\n  needle: number,\n  index: number,\n): number {\n  for (let i = index - 1; i >= 0; index = i--) {\n    if (haystack[i][COLUMN] !== needle) break;\n  }\n  return index;\n}\n\nexport function memoizedState(): MemoState {\n  return {\n    lastKey: -1,\n    lastNeedle: -1,\n    lastIndex: -1,\n  };\n}\n\n/**\n * This overly complicated beast is just to record the last tested line/column and the resulting\n * index, allowing us to skip a few tests if mappings are monotonically increasing.\n */\nexport function memoizedBinarySearch(\n  haystack: SourceMapSegment[] | ReverseSegment[],\n  needle: number,\n  state: MemoState,\n  key: number,\n): number {\n  const { lastKey, lastNeedle, lastIndex } = state;\n\n  let low = 0;\n  let high = haystack.length - 1;\n  if (key === lastKey) {\n    if (needle === lastNeedle) {\n      found = lastIndex !== -1 && haystack[lastIndex][COLUMN] === needle;\n      return lastIndex;\n    }\n\n    if (needle >= lastNeedle) {\n      // lastIndex may be -1 if the previous needle was not found.\n      low = lastIndex === -1 ? 0 : lastIndex;\n    } else {\n      high = lastIndex;\n    }\n  }\n  state.lastKey = key;\n  state.lastNeedle = needle;\n\n  return (state.lastIndex = binarySearch(haystack, needle, low, high));\n}\n","import { COLUMN, SOURCES_INDEX, SOURCE_LINE, SOURCE_COLUMN } from './sourcemap-segment';\nimport { memoizedBinarySearch, upperBound } from './binary-search';\n\nimport type { ReverseSegment, SourceMapSegment } from './sourcemap-segment';\nimport type { MemoState } from './binary-search';\n\nexport type Source = {\n  __proto__: null;\n  [line: number]: Exclude<ReverseSegment, [number]>[];\n};\n\n// Rebuilds the original source files, with mappings that are ordered by source line/column instead\n// of generated line/column.\nexport default function buildBySources(\n  decoded: readonly SourceMapSegment[][],\n  memos: MemoState[],\n): Source[] {\n  const sources: Source[] = memos.map(buildNullArray);\n\n  for (let i = 0; i < decoded.length; i++) {\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n      if (seg.length === 1) continue;\n\n      const sourceIndex = seg[SOURCES_INDEX];\n      const sourceLine = seg[SOURCE_LINE];\n      const sourceColumn = seg[SOURCE_COLUMN];\n      const originalSource = sources[sourceIndex];\n      const originalLine = (originalSource[sourceLine] ||= []);\n      const memo = memos[sourceIndex];\n\n      // The binary search either found a match, or it found the left-index just before where the\n      // segment should go. Either way, we want to insert after that. And there may be multiple\n      // generated segments associated with an original location, so there may need to move several\n      // indexes before we find where we need to insert.\n      const index = upperBound(\n        originalLine,\n        sourceColumn,\n        memoizedBinarySearch(originalLine, sourceColumn, memo, sourceLine),\n      );\n\n      insert(originalLine, (memo.lastIndex = index + 1), [sourceColumn, i, seg[COLUMN]]);\n    }\n  }\n\n  return sources;\n}\n\nfunction insert<T>(array: T[], index: number, value: T) {\n  for (let i = array.length; i > index; i--) {\n    array[i] = array[i - 1];\n  }\n  array[index] = value;\n}\n\n// Null arrays allow us to use ordered index keys without actually allocating contiguous memory like\n// a real array. We use a null-prototype object to avoid prototype pollution and deoptimizations.\n// Numeric properties on objects are magically sorted in ascending order by the engine regardless of\n// the insertion order. So, by setting any numeric keys, even out of order, we'll get ascending\n// order when iterating with for-in.\nfunction buildNullArray<T extends { __proto__: null }>(): T {\n  return { __proto__: null } as T;\n}\n","import { TraceMap, presortedDecodedMap, decodedMappings } from './trace-mapping';\nimport {\n  COLUMN,\n  SOURCES_INDEX,\n  SOURCE_LINE,\n  SOURCE_COLUMN,\n  NAMES_INDEX,\n} from './sourcemap-segment';\n\nimport type {\n  Section,\n  SectionedSourceMap,\n  DecodedSourceMap,\n  SectionedSourceMapInput,\n  Ro,\n} from './types';\nimport type { SourceMapSegment } from './sourcemap-segment';\n\ntype AnyMap = {\n  new (map: SectionedSourceMapInput, mapUrl?: string | null): TraceMap;\n  (map: SectionedSourceMapInput, mapUrl?: string | null): TraceMap;\n};\n\nexport const AnyMap: AnyMap = function (map, mapUrl) {\n  const parsed =\n    typeof map === 'string' ? (JSON.parse(map) as Exclude<SectionedSourceMapInput, string>) : map;\n\n  if (!('sections' in parsed)) return new TraceMap(parsed, mapUrl);\n\n  const mappings: SourceMapSegment[][] = [];\n  const sources: string[] = [];\n  const sourcesContent: (string | null)[] = [];\n  const names: string[] = [];\n\n  recurse(parsed, mapUrl, mappings, sources, sourcesContent, names, 0, 0, Infinity, Infinity);\n\n  const joined: DecodedSourceMap = {\n    version: 3,\n    file: parsed.file,\n    names,\n    sources,\n    sourcesContent,\n    mappings,\n  };\n\n  return presortedDecodedMap(joined);\n} as AnyMap;\n\nfunction recurse(\n  input: Ro<SectionedSourceMap>,\n  mapUrl: string | null | undefined,\n  mappings: SourceMapSegment[][],\n  sources: string[],\n  sourcesContent: (string | null)[],\n  names: string[],\n  lineOffset: number,\n  columnOffset: number,\n  stopLine: number,\n  stopColumn: number,\n) {\n  const { sections } = input;\n  for (let i = 0; i < sections.length; i++) {\n    const { map, offset } = sections[i];\n\n    let sl = stopLine;\n    let sc = stopColumn;\n    if (i + 1 < sections.length) {\n      const nextOffset = sections[i + 1].offset;\n      sl = Math.min(stopLine, lineOffset + nextOffset.line);\n\n      if (sl === stopLine) {\n        sc = Math.min(stopColumn, columnOffset + nextOffset.column);\n      } else if (sl < stopLine) {\n        sc = columnOffset + nextOffset.column;\n      }\n    }\n\n    addSection(\n      map,\n      mapUrl,\n      mappings,\n      sources,\n      sourcesContent,\n      names,\n      lineOffset + offset.line,\n      columnOffset + offset.column,\n      sl,\n      sc,\n    );\n  }\n}\n\nfunction addSection(\n  input: Ro<Section['map']>,\n  mapUrl: string | null | undefined,\n  mappings: SourceMapSegment[][],\n  sources: string[],\n  sourcesContent: (string | null)[],\n  names: string[],\n  lineOffset: number,\n  columnOffset: number,\n  stopLine: number,\n  stopColumn: number,\n) {\n  if ('sections' in input) return recurse(...(arguments as unknown as Parameters<typeof recurse>));\n\n  const map = new TraceMap(input, mapUrl);\n  const sourcesOffset = sources.length;\n  const namesOffset = names.length;\n  const decoded = decodedMappings(map);\n  const { resolvedSources, sourcesContent: contents } = map;\n\n  append(sources, resolvedSources);\n  append(names, map.names);\n  if (contents) append(sourcesContent, contents);\n  else for (let i = 0; i < resolvedSources.length; i++) sourcesContent.push(null);\n\n  for (let i = 0; i < decoded.length; i++) {\n    const lineI = lineOffset + i;\n\n    // We can only add so many lines before we step into the range that the next section's map\n    // controls. When we get to the last line, then we'll start checking the segments to see if\n    // they've crossed into the column range. But it may not have any columns that overstep, so we\n    // still need to check that we don't overstep lines, too.\n    if (lineI > stopLine) return;\n\n    // The out line may already exist in mappings (if we're continuing the line started by a\n    // previous section). Or, we may have jumped ahead several lines to start this section.\n    const out = getLine(mappings, lineI);\n    // On the 0th loop, the section's column offset shifts us forward. On all other lines (since the\n    // map can be multiple lines), it doesn't.\n    const cOffset = i === 0 ? columnOffset : 0;\n\n    const line = decoded[i];\n    for (let j = 0; j < line.length; j++) {\n      const seg = line[j];\n      const column = cOffset + seg[COLUMN];\n\n      // If this segment steps into the column range that the next section's map controls, we need\n      // to stop early.\n      if (lineI === stopLine && column >= stopColumn) return;\n\n      if (seg.length === 1) {\n        out.push([column]);\n        continue;\n      }\n\n      const sourcesIndex = sourcesOffset + seg[SOURCES_INDEX];\n      const sourceLine = seg[SOURCE_LINE];\n      const sourceColumn = seg[SOURCE_COLUMN];\n      out.push(\n        seg.length === 4\n          ? [column, sourcesIndex, sourceLine, sourceColumn]\n          : [column, sourcesIndex, sourceLine, sourceColumn, namesOffset + seg[NAMES_INDEX]],\n      );\n    }\n  }\n}\n\nfunction append<T>(arr: T[], other: T[]) {\n  for (let i = 0; i < other.length; i++) arr.push(other[i]);\n}\n\nfunction getLine<T>(arr: T[][], index: number): T[] {\n  for (let i = arr.length; i <= index; i++) arr[i] = [];\n  return arr[index];\n}\n","import { encode, decode } from '@jridgewell/sourcemap-codec';\n\nimport resolve from './resolve';\nimport stripFilename from './strip-filename';\nimport maybeSort from './sort';\nimport buildBySources from './by-source';\nimport {\n  memoizedState,\n  memoizedBinarySearch,\n  upperBound,\n  lowerBound,\n  found as bsFound,\n} from './binary-search';\nimport {\n  COLUMN,\n  SOURCES_INDEX,\n  SOURCE_LINE,\n  SOURCE_COLUMN,\n  NAMES_INDEX,\n  REV_GENERATED_LINE,\n  REV_GENERATED_COLUMN,\n} from './sourcemap-segment';\n\nimport type { SourceMapSegment, ReverseSegment } from './sourcemap-segment';\nimport type {\n  SourceMapV3,\n  DecodedSourceMap,\n  EncodedSourceMap,\n  InvalidOriginalMapping,\n  OriginalMapping,\n  InvalidGeneratedMapping,\n  GeneratedMapping,\n  SourceMapInput,\n  Needle,\n  SourceNeedle,\n  SourceMap,\n  EachMapping,\n  Bias,\n} from './types';\nimport type { Source } from './by-source';\nimport type { MemoState } from './binary-search';\n\nexport type { SourceMapSegment } from './sourcemap-segment';\nexport type {\n  SourceMapInput,\n  SectionedSourceMapInput,\n  DecodedSourceMap,\n  EncodedSourceMap,\n  SectionedSourceMap,\n  InvalidOriginalMapping,\n  OriginalMapping as Mapping,\n  OriginalMapping,\n  InvalidGeneratedMapping,\n  GeneratedMapping,\n  EachMapping,\n} from './types';\n\nconst LINE_GTR_ZERO = '`line` must be greater than 0 (lines start at line 1)';\nconst COL_GTR_EQ_ZERO = '`column` must be greater than or equal to 0 (columns start at column 0)';\n\nexport const LEAST_UPPER_BOUND = -1;\nexport const GREATEST_LOWER_BOUND = 1;\n\n/**\n * Returns the encoded (VLQ string) form of the SourceMap's mappings field.\n */\nexport let encodedMappings: (map: TraceMap) => EncodedSourceMap['mappings'];\n\n/**\n * Returns the decoded (array of lines of segments) form of the SourceMap's mappings field.\n */\nexport let decodedMappings: (map: TraceMap) => Readonly<DecodedSourceMap['mappings']>;\n\n/**\n * A low-level API to find the segment associated with a generated line/column (think, from a\n * stack trace). Line and column here are 0-based, unlike `originalPositionFor`.\n */\nexport let traceSegment: (\n  map: TraceMap,\n  line: number,\n  column: number,\n) => Readonly<SourceMapSegment> | null;\n\n/**\n * A higher-level API to find the source/line/column associated with a generated line/column\n * (think, from a stack trace). Line is 1-based, but column is 0-based, due to legacy behavior in\n * `source-map` library.\n */\nexport let originalPositionFor: (\n  map: TraceMap,\n  needle: Needle,\n) => OriginalMapping | InvalidOriginalMapping;\n\n/**\n * Finds the generated line/column position of the provided source/line/column source position.\n */\nexport let generatedPositionFor: (\n  map: TraceMap,\n  needle: SourceNeedle,\n) => GeneratedMapping | InvalidGeneratedMapping;\n\n/**\n * Finds all generated line/column positions of the provided source/line/column source position.\n */\nexport let allGeneratedPositionsFor: (map: TraceMap, needle: SourceNeedle) => GeneratedMapping[];\n\n/**\n * Iterates each mapping in generated position order.\n */\nexport let eachMapping: (map: TraceMap, cb: (mapping: EachMapping) => void) => void;\n\n/**\n * Retrieves the source content for a particular source, if its found. Returns null if not.\n */\nexport let sourceContentFor: (map: TraceMap, source: string) => string | null;\n\n/**\n * A helper that skips sorting of the input map's mappings array, which can be expensive for larger\n * maps.\n */\nexport let presortedDecodedMap: (map: DecodedSourceMap, mapUrl?: string) => TraceMap;\n\n/**\n * Returns a sourcemap object (with decoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport let decodedMap: (\n  map: TraceMap,\n) => Omit<DecodedSourceMap, 'mappings'> & { mappings: readonly SourceMapSegment[][] };\n\n/**\n * Returns a sourcemap object (with encoded mappings) suitable for passing to a library that expects\n * a sourcemap, or to JSON.stringify.\n */\nexport let encodedMap: (map: TraceMap) => EncodedSourceMap;\n\nexport { AnyMap } from './any-map';\n\nexport class TraceMap implements SourceMap {\n  declare version: SourceMapV3['version'];\n  declare file: SourceMapV3['file'];\n  declare names: SourceMapV3['names'];\n  declare sourceRoot: SourceMapV3['sourceRoot'];\n  declare sources: SourceMapV3['sources'];\n  declare sourcesContent: SourceMapV3['sourcesContent'];\n\n  declare resolvedSources: string[];\n  private declare _encoded: string | undefined;\n\n  private declare _decoded: SourceMapSegment[][] | undefined;\n  private declare _decodedMemo: MemoState;\n\n  private declare _bySources: Source[] | undefined;\n  private declare _bySourceMemos: MemoState[] | undefined;\n\n  constructor(map: SourceMapInput, mapUrl?: string | null) {\n    const isString = typeof map === 'string';\n\n    if (!isString && (map as unknown as { _decodedMemo: any })._decodedMemo) return map as TraceMap;\n\n    const parsed = (isString ? JSON.parse(map) : map) as DecodedSourceMap | EncodedSourceMap;\n\n    const { version, file, names, sourceRoot, sources, sourcesContent } = parsed;\n    this.version = version;\n    this.file = file;\n    this.names = names;\n    this.sourceRoot = sourceRoot;\n    this.sources = sources;\n    this.sourcesContent = sourcesContent;\n\n    const from = resolve(sourceRoot || '', stripFilename(mapUrl));\n    this.resolvedSources = sources.map((s) => resolve(s || '', from));\n\n    const { mappings } = parsed;\n    if (typeof mappings === 'string') {\n      this._encoded = mappings;\n      this._decoded = undefined;\n    } else {\n      this._encoded = undefined;\n      this._decoded = maybeSort(mappings, isString);\n    }\n\n    this._decodedMemo = memoizedState();\n    this._bySources = undefined;\n    this._bySourceMemos = undefined;\n  }\n\n  static {\n    encodedMappings = (map) => {\n      return (map._encoded ??= encode(map._decoded!));\n    };\n\n    decodedMappings = (map) => {\n      return (map._decoded ||= decode(map._encoded!));\n    };\n\n    traceSegment = (map, line, column) => {\n      const decoded = decodedMappings(map);\n\n      // It's common for parent source maps to have pointers to lines that have no\n      // mapping (like a \"//# sourceMappingURL=\") at the end of the child file.\n      if (line >= decoded.length) return null;\n\n      const segments = decoded[line];\n      const index = traceSegmentInternal(\n        segments,\n        map._decodedMemo,\n        line,\n        column,\n        GREATEST_LOWER_BOUND,\n      );\n\n      return index === -1 ? null : segments[index];\n    };\n\n    originalPositionFor = (map, { line, column, bias }) => {\n      line--;\n      if (line < 0) throw new Error(LINE_GTR_ZERO);\n      if (column < 0) throw new Error(COL_GTR_EQ_ZERO);\n\n      const decoded = decodedMappings(map);\n\n      // It's common for parent source maps to have pointers to lines that have no\n      // mapping (like a \"//# sourceMappingURL=\") at the end of the child file.\n      if (line >= decoded.length) return OMapping(null, null, null, null);\n\n      const segments = decoded[line];\n      const index = traceSegmentInternal(\n        segments,\n        map._decodedMemo,\n        line,\n        column,\n        bias || GREATEST_LOWER_BOUND,\n      );\n\n      if (index === -1) return OMapping(null, null, null, null);\n\n      const segment = segments[index];\n      if (segment.length === 1) return OMapping(null, null, null, null);\n\n      const { names, resolvedSources } = map;\n      return OMapping(\n        resolvedSources[segment[SOURCES_INDEX]],\n        segment[SOURCE_LINE] + 1,\n        segment[SOURCE_COLUMN],\n        segment.length === 5 ? names[segment[NAMES_INDEX]] : null,\n      );\n    };\n\n    allGeneratedPositionsFor = (map, { source, line, column, bias }) => {\n      // SourceMapConsumer uses LEAST_UPPER_BOUND for some reason, so we follow suit.\n      return generatedPosition(map, source, line, column, bias || LEAST_UPPER_BOUND, true);\n    };\n\n    generatedPositionFor = (map, { source, line, column, bias }) => {\n      return generatedPosition(map, source, line, column, bias || GREATEST_LOWER_BOUND, false);\n    };\n\n    eachMapping = (map, cb) => {\n      const decoded = decodedMappings(map);\n      const { names, resolvedSources } = map;\n\n      for (let i = 0; i < decoded.length; i++) {\n        const line = decoded[i];\n        for (let j = 0; j < line.length; j++) {\n          const seg = line[j];\n\n          const generatedLine = i + 1;\n          const generatedColumn = seg[0];\n          let source = null;\n          let originalLine = null;\n          let originalColumn = null;\n          let name = null;\n          if (seg.length !== 1) {\n            source = resolvedSources[seg[1]];\n            originalLine = seg[2] + 1;\n            originalColumn = seg[3];\n          }\n          if (seg.length === 5) name = names[seg[4]];\n\n          cb({\n            generatedLine,\n            generatedColumn,\n            source,\n            originalLine,\n            originalColumn,\n            name,\n          } as EachMapping);\n        }\n      }\n    };\n\n    sourceContentFor = (map, source) => {\n      const { sources, resolvedSources, sourcesContent } = map;\n      if (sourcesContent == null) return null;\n\n      let index = sources.indexOf(source);\n      if (index === -1) index = resolvedSources.indexOf(source);\n\n      return index === -1 ? null : sourcesContent[index];\n    };\n\n    presortedDecodedMap = (map, mapUrl) => {\n      const tracer = new TraceMap(clone(map, []), mapUrl);\n      tracer._decoded = map.mappings;\n      return tracer;\n    };\n\n    decodedMap = (map) => {\n      return clone(map, decodedMappings(map));\n    };\n\n    encodedMap = (map) => {\n      return clone(map, encodedMappings(map));\n    };\n\n    function generatedPosition(\n      map: TraceMap,\n      source: string,\n      line: number,\n      column: number,\n      bias: Bias,\n      all: false,\n    ): GeneratedMapping | InvalidGeneratedMapping;\n    function generatedPosition(\n      map: TraceMap,\n      source: string,\n      line: number,\n      column: number,\n      bias: Bias,\n      all: true,\n    ): GeneratedMapping[];\n    function generatedPosition(\n      map: TraceMap,\n      source: string,\n      line: number,\n      column: number,\n      bias: Bias,\n      all: boolean,\n    ): GeneratedMapping | InvalidGeneratedMapping | GeneratedMapping[] {\n      line--;\n      if (line < 0) throw new Error(LINE_GTR_ZERO);\n      if (column < 0) throw new Error(COL_GTR_EQ_ZERO);\n\n      const { sources, resolvedSources } = map;\n      let sourceIndex = sources.indexOf(source);\n      if (sourceIndex === -1) sourceIndex = resolvedSources.indexOf(source);\n      if (sourceIndex === -1) return all ? [] : GMapping(null, null);\n\n      const generated = (map._bySources ||= buildBySources(\n        decodedMappings(map),\n        (map._bySourceMemos = sources.map(memoizedState)),\n      ));\n\n      const segments = generated[sourceIndex][line];\n      if (segments == null) return all ? [] : GMapping(null, null);\n\n      const memo = map._bySourceMemos![sourceIndex];\n\n      if (all) return sliceGeneratedPositions(segments, memo, line, column, bias);\n\n      const index = traceSegmentInternal(segments, memo, line, column, bias);\n      if (index === -1) return GMapping(null, null);\n\n      const segment = segments[index];\n      return GMapping(segment[REV_GENERATED_LINE] + 1, segment[REV_GENERATED_COLUMN]);\n    }\n  }\n}\n\nfunction clone<T extends string | readonly SourceMapSegment[][]>(\n  map: TraceMap | DecodedSourceMap | EncodedSourceMap,\n  mappings: T,\n): T extends string ? EncodedSourceMap : DecodedSourceMap {\n  return {\n    version: map.version,\n    file: map.file,\n    names: map.names,\n    sourceRoot: map.sourceRoot,\n    sources: map.sources,\n    sourcesContent: map.sourcesContent,\n    mappings,\n  } as any;\n}\n\nfunction OMapping(source: null, line: null, column: null, name: null): InvalidOriginalMapping;\nfunction OMapping(\n  source: string,\n  line: number,\n  column: number,\n  name: string | null,\n): OriginalMapping;\nfunction OMapping(\n  source: string | null,\n  line: number | null,\n  column: number | null,\n  name: string | null,\n): OriginalMapping | InvalidOriginalMapping {\n  return { source, line, column, name } as any;\n}\n\nfunction GMapping(line: null, column: null): InvalidGeneratedMapping;\nfunction GMapping(line: number, column: number): GeneratedMapping;\nfunction GMapping(\n  line: number | null,\n  column: number | null,\n): GeneratedMapping | InvalidGeneratedMapping {\n  return { line, column } as any;\n}\n\nfunction traceSegmentInternal(\n  segments: SourceMapSegment[],\n  memo: MemoState,\n  line: number,\n  column: number,\n  bias: Bias,\n): number;\nfunction traceSegmentInternal(\n  segments: ReverseSegment[],\n  memo: MemoState,\n  line: number,\n  column: number,\n  bias: Bias,\n): number;\nfunction traceSegmentInternal(\n  segments: SourceMapSegment[] | ReverseSegment[],\n  memo: MemoState,\n  line: number,\n  column: number,\n  bias: Bias,\n): number {\n  let index = memoizedBinarySearch(segments, column, memo, line);\n  if (bsFound) {\n    index = (bias === LEAST_UPPER_BOUND ? upperBound : lowerBound)(segments, column, index);\n  } else if (bias === LEAST_UPPER_BOUND) index++;\n\n  if (index === -1 || index === segments.length) return -1;\n  return index;\n}\n\nfunction sliceGeneratedPositions(\n  segments: ReverseSegment[],\n  memo: MemoState,\n  line: number,\n  column: number,\n  bias: Bias,\n): GeneratedMapping[] {\n  let min = traceSegmentInternal(segments, memo, line, column, GREATEST_LOWER_BOUND);\n\n  // We ignored the bias when tracing the segment so that we're guarnateed to find the first (in\n  // insertion order) segment that matched. Even if we did respect the bias when tracing, we would\n  // still need to call `lowerBound()` to find the first segment, which is slower than just looking\n  // for the GREATEST_LOWER_BOUND to begin with. The only difference that matters for us is when the\n  // binary search didn't match, in which case GREATEST_LOWER_BOUND just needs to increment to\n  // match LEAST_UPPER_BOUND.\n  if (!bsFound && bias === LEAST_UPPER_BOUND) min++;\n\n  if (min === -1 || min === segments.length) return [];\n\n  // We may have found the segment that started at an earlier column. If this is the case, then we\n  // need to slice all generated segments that match _that_ column, because all such segments span\n  // to our desired column.\n  const matchedColumn = bsFound ? column : segments[min][COLUMN];\n\n  // The binary search is not guaranteed to find the lower bound when a match wasn't found.\n  if (!bsFound) min = lowerBound(segments, matchedColumn, min);\n  const max = upperBound(segments, matchedColumn, min);\n\n  const result = [];\n  for (; min <= max; min++) {\n    const segment = segments[min];\n    result.push(GMapping(segment[REV_GENERATED_LINE] + 1, segment[REV_GENERATED_COLUMN]));\n  }\n  return result;\n}\n"],"names":["resolveUri","presortedDecodedMap","decodedMappings","encodedMappings","traceSegment","originalPositionFor","generatedPositionFor","allGeneratedPositionsFor","eachMapping","sourceContentFor","decodedMap","encodedMap","encode","decode","bsFound"],"mappings":"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","sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@jridgewell/sourcemap-codec/dist/sourcemap-codec.umd.js":{"lineLengths":[29,85,79,116,44,0,36,40,85,63,63,44,38,25,25,5,49,49,43,39,15,29,88,42,18,13,15,29,33,58,59,21,31,18,14,31,40,27,22,12,50,28,30,28,25,48,24,70,37,34,35,30,52,77,75,77,56,79,76,21,26,66,21,17,22,32,17,31,13,24,27,31,29,43,23,5,39,49,50,5,53,22,22,24,12,49,35,45,23,31,39,21,27,41,9,26,19,5,46,24,25,48,5,25,34,5,35,27,5,30,40,36,41,46,47,20,21,50,36,24,40,42,28,17,39,13,34,25,25,51,40,86,36,38,42,54,37,17,26,39,78,41,29,81,79,81,41,29,79,13,9,53,5,57,32,34,24,51,12,41,23,24,36,44,26,19,5,0,28,28,0,66,0,4,47,0],"data":{"version":3,"file":"sourcemap-codec.umd.js","sources":["file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@jridgewell/sourcemap-codec/src/sourcemap-codec.ts"],"sourcesContent":[null],"names":[],"mappings":"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","sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@jridgewell/resolve-uri/dist/resolve-uri.umd.js":{"lineLengths":[29,95,66,110,37,0,48,41,7,34,44,49,27,40,40,41,40,7,96,7,101,102,6,25,50,41,40,7,88,16,25,48,46,48,62,62,66,54,34,35,39,5,41,38,5,36,37,5,31,41,5,32,36,5,38,43,124,5,34,44,30,130,5,67,16,19,17,17,17,17,18,17,35,10,5,30,41,58,28,46,23,9,36,67,28,26,44,23,9,29,39,33,43,64,24,22,24,35,31,39,34,42,28,19,5,38,100,56,33,24,44,40,5,36,39,105,17,31,33,9,14,86,63,9,5,7,96,66,7,39,49,43,101,40,24,104,100,25,105,101,93,37,49,36,96,25,40,25,13,86,37,61,30,25,104,74,33,31,44,31,30,17,31,112,101,46,17,25,13,108,49,38,23,9,22,43,36,9,67,24,9,24,5,7,63,7,35,28,22,36,33,53,43,42,32,35,44,31,34,46,31,35,42,45,31,42,98,44,44,44,31,44,103,48,13,37,37,9,38,47,28,92,34,30,31,33,40,81,47,26,44,69,108,104,87,51,17,40,13,38,44,20,97,9,5,0,19,0,4,43,0],"data":{"version":3,"file":"resolve-uri.umd.js","sources":["file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@jridgewell/resolve-uri/src/resolve-uri.ts"],"sourcesContent":["// Matches the scheme of a URL, eg \"http://\"\nconst schemeRegex = /^[\\w+.-]+:\\/\\//;\n\n/**\n * Matches the parts of a URL:\n * 1. Scheme, including \":\", guaranteed.\n * 2. User/password, including \"@\", optional.\n * 3. Host, guaranteed.\n * 4. Port, including \":\", optional.\n * 5. Path, including \"/\", optional.\n * 6. Query, including \"?\", optional.\n * 7. Hash, including \"#\", optional.\n */\nconst urlRegex = /^([\\w+.-]+:)\\/\\/([^@/#?]*@)?([^:/#?]*)(:\\d+)?(\\/[^#?]*)?(\\?[^#]*)?(#.*)?/;\n\n/**\n * File URLs are weird. They dont' need the regular `//` in the scheme, they may or may not start\n * with a leading `/`, they can have a domain (but only if they don't start with a Windows drive).\n *\n * 1. Host, optional.\n * 2. Path, which may include \"/\", guaranteed.\n * 3. Query, including \"?\", optional.\n * 4. Hash, including \"#\", optional.\n */\nconst fileRegex = /^file:(?:\\/\\/((?![a-z]:)[^/#?]*)?)?(\\/?[^#?]*)(\\?[^#]*)?(#.*)?/i;\n\ntype Url = {\n  scheme: string;\n  user: string;\n  host: string;\n  port: string;\n  path: string;\n  query: string;\n  hash: string;\n  type: UrlType;\n};\n\nenum UrlType {\n  Empty = 1,\n  Hash = 2,\n  Query = 3,\n  RelativePath = 4,\n  AbsolutePath = 5,\n  SchemeRelative = 6,\n  Absolute = 7,\n}\n\nfunction isAbsoluteUrl(input: string): boolean {\n  return schemeRegex.test(input);\n}\n\nfunction isSchemeRelativeUrl(input: string): boolean {\n  return input.startsWith('//');\n}\n\nfunction isAbsolutePath(input: string): boolean {\n  return input.startsWith('/');\n}\n\nfunction isFileUrl(input: string): boolean {\n  return input.startsWith('file:');\n}\n\nfunction isRelative(input: string): boolean {\n  return /^[.?#]/.test(input);\n}\n\nfunction parseAbsoluteUrl(input: string): Url {\n  const match = urlRegex.exec(input)!;\n  return makeUrl(\n    match[1],\n    match[2] || '',\n    match[3],\n    match[4] || '',\n    match[5] || '/',\n    match[6] || '',\n    match[7] || '',\n  );\n}\n\nfunction parseFileUrl(input: string): Url {\n  const match = fileRegex.exec(input)!;\n  const path = match[2];\n  return makeUrl(\n    'file:',\n    '',\n    match[1] || '',\n    '',\n    isAbsolutePath(path) ? path : '/' + path,\n    match[3] || '',\n    match[4] || '',\n  );\n}\n\nfunction makeUrl(\n  scheme: string,\n  user: string,\n  host: string,\n  port: string,\n  path: string,\n  query: string,\n  hash: string,\n): Url {\n  return {\n    scheme,\n    user,\n    host,\n    port,\n    path,\n    query,\n    hash,\n    type: UrlType.Absolute,\n  };\n}\n\nfunction parseUrl(input: string): Url {\n  if (isSchemeRelativeUrl(input)) {\n    const url = parseAbsoluteUrl('http:' + input);\n    url.scheme = '';\n    url.type = UrlType.SchemeRelative;\n    return url;\n  }\n\n  if (isAbsolutePath(input)) {\n    const url = parseAbsoluteUrl('http://foo.com' + input);\n    url.scheme = '';\n    url.host = '';\n    url.type = UrlType.AbsolutePath;\n    return url;\n  }\n\n  if (isFileUrl(input)) return parseFileUrl(input);\n\n  if (isAbsoluteUrl(input)) return parseAbsoluteUrl(input);\n\n  const url = parseAbsoluteUrl('http://foo.com/' + input);\n  url.scheme = '';\n  url.host = '';\n  url.type = input\n    ? input.startsWith('?')\n      ? UrlType.Query\n      : input.startsWith('#')\n      ? UrlType.Hash\n      : UrlType.RelativePath\n    : UrlType.Empty;\n  return url;\n}\n\nfunction stripPathFilename(path: string): string {\n  // If a path ends with a parent directory \"..\", then it's a relative path with excess parent\n  // paths. It's not a file, so we can't strip it.\n  if (path.endsWith('/..')) return path;\n  const index = path.lastIndexOf('/');\n  return path.slice(0, index + 1);\n}\n\nfunction mergePaths(url: Url, base: Url) {\n  normalizePath(base, base.type);\n\n  // If the path is just a \"/\", then it was an empty path to begin with (remember, we're a relative\n  // path).\n  if (url.path === '/') {\n    url.path = base.path;\n  } else {\n    // Resolution happens relative to the base path's directory, not the file.\n    url.path = stripPathFilename(base.path) + url.path;\n  }\n}\n\n/**\n * The path can have empty directories \"//\", unneeded parents \"foo/..\", or current directory\n * \"foo/.\". We need to normalize to a standard representation.\n */\nfunction normalizePath(url: Url, type: UrlType) {\n  const rel = type <= UrlType.RelativePath;\n  const pieces = url.path.split('/');\n\n  // We need to preserve the first piece always, so that we output a leading slash. The item at\n  // pieces[0] is an empty string.\n  let pointer = 1;\n\n  // Positive is the number of real directories we've output, used for popping a parent directory.\n  // Eg, \"foo/bar/..\" will have a positive 2, and we can decrement to be left with just \"foo\".\n  let positive = 0;\n\n  // We need to keep a trailing slash if we encounter an empty directory (eg, splitting \"foo/\" will\n  // generate `[\"foo\", \"\"]` pieces). And, if we pop a parent directory. But once we encounter a\n  // real directory, we won't need to append, unless the other conditions happen again.\n  let addTrailingSlash = false;\n\n  for (let i = 1; i < pieces.length; i++) {\n    const piece = pieces[i];\n\n    // An empty directory, could be a trailing slash, or just a double \"//\" in the path.\n    if (!piece) {\n      addTrailingSlash = true;\n      continue;\n    }\n\n    // If we encounter a real directory, then we don't need to append anymore.\n    addTrailingSlash = false;\n\n    // A current directory, which we can always drop.\n    if (piece === '.') continue;\n\n    // A parent directory, we need to see if there are any real directories we can pop. Else, we\n    // have an excess of parents, and we'll need to keep the \"..\".\n    if (piece === '..') {\n      if (positive) {\n        addTrailingSlash = true;\n        positive--;\n        pointer--;\n      } else if (rel) {\n        // If we're in a relativePath, then we need to keep the excess parents. Else, in an absolute\n        // URL, protocol relative URL, or an absolute path, we don't need to keep excess.\n        pieces[pointer++] = piece;\n      }\n      continue;\n    }\n\n    // We've encountered a real directory. Move it to the next insertion pointer, which accounts for\n    // any popped or dropped directories.\n    pieces[pointer++] = piece;\n    positive++;\n  }\n\n  let path = '';\n  for (let i = 1; i < pointer; i++) {\n    path += '/' + pieces[i];\n  }\n  if (!path || (addTrailingSlash && !path.endsWith('/..'))) {\n    path += '/';\n  }\n  url.path = path;\n}\n\n/**\n * Attempts to resolve `input` URL/path relative to `base`.\n */\nexport default function resolve(input: string, base: string | undefined): string {\n  if (!input && !base) return '';\n\n  const url = parseUrl(input);\n  let inputType = url.type;\n\n  if (base && inputType !== UrlType.Absolute) {\n    const baseUrl = parseUrl(base);\n    const baseType = baseUrl.type;\n\n    switch (inputType) {\n      case UrlType.Empty:\n        url.hash = baseUrl.hash;\n      // fall through\n\n      case UrlType.Hash:\n        url.query = baseUrl.query;\n      // fall through\n\n      case UrlType.Query:\n      case UrlType.RelativePath:\n        mergePaths(url, baseUrl);\n      // fall through\n\n      case UrlType.AbsolutePath:\n        // The host, user, and port are joined, you can't copy one without the others.\n        url.user = baseUrl.user;\n        url.host = baseUrl.host;\n        url.port = baseUrl.port;\n      // fall through\n\n      case UrlType.SchemeRelative:\n        // The input doesn't have a schema at least, so we need to copy at least that over.\n        url.scheme = baseUrl.scheme;\n    }\n    if (baseType > inputType) inputType = baseType;\n  }\n\n  normalizePath(url, inputType);\n\n  const queryHash = url.query + url.hash;\n  switch (inputType) {\n    // This is impossible, because of the empty checks at the start of the function.\n    // case UrlType.Empty:\n\n    case UrlType.Hash:\n    case UrlType.Query:\n      return queryHash;\n\n    case UrlType.RelativePath: {\n      // The first char is always a \"/\", and we need it to be relative.\n      const path = url.path.slice(1);\n\n      if (!path) return queryHash || '.';\n\n      if (isRelative(base || input) && !isRelative(path)) {\n        // If base started with a leading \".\", or there is no base and input started with a \".\",\n        // then we need to ensure that the relative path starts with a \".\". We don't know if\n        // relative starts with a \"..\", though, so check before prepending.\n        return './' + path + queryHash;\n      }\n\n      return path + queryHash;\n    }\n\n    case UrlType.AbsolutePath:\n      return url.path + queryHash;\n\n    default:\n      return url.scheme + '//' + url.user + url.host + url.port + url.path + queryHash;\n  }\n}\n"],"names":[],"mappings":"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","sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/get-caller-file/index.js":{"lineLengths":[13,69,69,2,58,51,46,44,208,5,55,68,34,51,54,35,56,54,75,5,2,33],"data":{"version":3,"file":"index.js","sourceRoot":"","sources":["file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/get-caller-file/index.ts"],"names":[],"mappings":";AAAA,qEAAqE;AACrE,qEAAqE;AACrE,EAAE;AACF,0DAA0D;AAE1D,iBAAS,SAAS,aAAa,CAAC,QAAY;IAAZ,yBAAA,EAAA,YAAY;IAC1C,IAAI,QAAQ,IAAI,KAAK,CAAC,eAAe,EAAE;QACrC,MAAM,IAAI,SAAS,CAAC,kGAAkG,GAAG,QAAQ,GAAG,oCAAoC,GAAG,KAAK,CAAC,eAAe,GAAG,GAAG,CAAC,CAAC;KACzM;IAED,IAAM,oBAAoB,GAAG,KAAK,CAAC,iBAAiB,CAAC;IACrD,KAAK,CAAC,iBAAiB,GAAG,UAAC,CAAC,EAAE,KAAK,IAAM,OAAA,KAAK,EAAL,CAAK,CAAC;IAC/C,IAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC,KAAK,CAAC;IAChC,KAAK,CAAC,iBAAiB,GAAG,oBAAoB,CAAC;IAG/C,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;QAC/C,2BAA2B;QAC3B,gDAAgD;QAChD,8CAA8C;QAC9C,OAAO,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAE,KAAK,CAAC,QAAQ,CAAS,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,SAAS,CAAC;KAC7E;AACH,CAAC,CAAC"},"url":null,"sourceURL":null},"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/index.js":{"lineLengths":[13,62,33,40,50,58,44,33,52,50,48,46,37,56,60,54,33,54,52,50,43,43,0,1399,0],"data":{"version":3,"sources":["file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/_src/index.ts"],"names":[],"mappings":";;AAAA,iCAAyF;AAAhF,6BAAA,UAAU,CAAA;AAAE,kCAAA,eAAe,CAAA;AAAE,sCAAA,mBAAmB,CAAA;AAAE,+BAAA,YAAY,CAAA;AACvE,iCAA2F;AAAlF,mCAAA,gBAAgB,CAAA;AAAE,kCAAA,eAAe,CAAA;AAAE,iCAAA,cAAc,CAAA;AAAE,gCAAA,aAAa,CAAA;AACzE,qCAAqF;AAA5E,sCAAA,iBAAiB,CAAA;AAAE,wCAAA,mBAAmB,CAAA;AAAE,qCAAA,gBAAgB,CAAA;AACjE,iCAA+E;AAAtE,oCAAA,iBAAiB,CAAA;AAAE,mCAAA,gBAAgB,CAAA;AAAE,kCAAA,eAAe,CAAA;AAC7D,2CAAyC;AAAhC,iCAAA,SAAS,CAAA","file":"index.js","sourcesContent":["export { emitForest, emitForestLines, parseFunctionRanges, parseOffsets } from \"./ascii\";\nexport { cloneFunctionCov, cloneProcessCov, cloneScriptCov, cloneRangeCov } from \"./clone\";\nexport { compareScriptCovs, compareFunctionCovs, compareRangeCovs } from \"./compare\";\nexport { mergeFunctionCovs, mergeProcessCovs, mergeScriptCovs } from \"./merge\";\nexport { RangeTree } from \"./range-tree\";\nexport { ProcessCov, ScriptCov, FunctionCov, RangeCov } from \"./types\";\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/ascii.js":{"lineLengths":[13,62,39,28,45,1,32,33,36,39,77,1,42,27,31,31,29,34,36,36,34,47,34,13,9,5,33,33,22,33,67,5,35,29,48,40,5,18,1,33,22,27,34,32,27,23,35,48,38,13,9,5,61,1,47,22,42,62,31,9,5,44,18,1,50,3,2,46,16,3,39,20,19,48,43,39,32,53,9,55,24,5,25,1,42,22,34,18,39,29,18,9,37,50,45,52,48,67,76,9,55,5,18,1,32,48,25,67,56,48,1,30,18,40,32,50,9,35,5,16,1,29,29,26,18,39,29,18,9,56,5,18,1,36,0,12611,0],"data":{"version":3,"sources":["file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/_src/ascii.ts"],"names":[],"mappings":"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","file":"ascii.js","sourcesContent":["import { compareRangeCovs } from \"./compare\";\nimport { RangeCov } from \"./types\";\n\ninterface ReadonlyRangeTree {\n  readonly start: number;\n  readonly end: number;\n  readonly count: number;\n  readonly children: ReadonlyRangeTree[];\n}\n\nexport function emitForest(trees: ReadonlyArray<ReadonlyRangeTree>): string {\n  return emitForestLines(trees).join(\"\\n\");\n}\n\nexport function emitForestLines(trees: ReadonlyArray<ReadonlyRangeTree>): string[] {\n  const colMap: Map<number, number> = getColMap(trees);\n  const header: string = emitOffsets(colMap);\n  return [header, ...trees.map(tree => emitTree(tree, colMap).join(\"\\n\"))];\n}\n\nfunction getColMap(trees: Iterable<ReadonlyRangeTree>): Map<number, number> {\n  const eventSet: Set<number> = new Set();\n  for (const tree of trees) {\n    const stack: ReadonlyRangeTree[] = [tree];\n    while (stack.length > 0) {\n      const cur: ReadonlyRangeTree = stack.pop()!;\n      eventSet.add(cur.start);\n      eventSet.add(cur.end);\n      for (const child of cur.children) {\n        stack.push(child);\n      }\n    }\n  }\n  const events: number[] = [...eventSet];\n  events.sort((a, b) => a - b);\n  let maxDigits: number = 1;\n  for (const event of events) {\n    maxDigits = Math.max(maxDigits, event.toString(10).length);\n  }\n  const colWidth: number = maxDigits + 3;\n  const colMap: Map<number, number> = new Map();\n  for (const [i, event] of events.entries()) {\n    colMap.set(event, i * colWidth);\n  }\n  return colMap;\n}\n\nfunction emitTree(tree: ReadonlyRangeTree, colMap: Map<number, number>): string[] {\n  const layers: ReadonlyRangeTree[][] = [];\n  let nextLayer: ReadonlyRangeTree[] = [tree];\n  while (nextLayer.length > 0) {\n    const layer: ReadonlyRangeTree[] = nextLayer;\n    layers.push(layer);\n    nextLayer = [];\n    for (const node of layer) {\n      for (const child of node.children) {\n        nextLayer.push(child);\n      }\n    }\n  }\n  return layers.map(layer => emitTreeLayer(layer, colMap));\n}\n\nexport function parseFunctionRanges(text: string, offsetMap: Map<number, number>): RangeCov[] {\n  const result: RangeCov[] = [];\n  for (const line of text.split(\"\\n\")) {\n    for (const range of parseTreeLayer(line, offsetMap)) {\n      result.push(range);\n    }\n  }\n  result.sort(compareRangeCovs);\n  return result;\n}\n\n/**\n *\n * @param layer Sorted list of disjoint trees.\n * @param colMap\n */\nfunction emitTreeLayer(layer: ReadonlyRangeTree[], colMap: Map<number, number>): string {\n  const line: string[] = [];\n  let curIdx: number = 0;\n  for (const {start, end, count} of layer) {\n    const startIdx: number = colMap.get(start)!;\n    const endIdx: number = colMap.get(end)!;\n    if (startIdx > curIdx) {\n      line.push(\" \".repeat(startIdx - curIdx));\n    }\n    line.push(emitRange(count, endIdx - startIdx));\n    curIdx = endIdx;\n  }\n  return line.join(\"\");\n}\n\nfunction parseTreeLayer(text: string, offsetMap: Map<number, number>): RangeCov[] {\n  const result: RangeCov[] = [];\n  const regex: RegExp = /\\[(\\d+)-*\\)/gs;\n  while (true) {\n    const match: RegExpMatchArray | null = regex.exec(text);\n    if (match === null) {\n      break;\n    }\n    const startIdx: number = match.index!;\n    const endIdx: number = startIdx + match[0].length;\n    const count: number = parseInt(match[1], 10);\n    const startOffset: number | undefined = offsetMap.get(startIdx);\n    const endOffset: number | undefined = offsetMap.get(endIdx);\n    if (startOffset === undefined || endOffset === undefined) {\n      throw new Error(`Invalid offsets for: ${JSON.stringify(text)}`);\n    }\n    result.push({startOffset, endOffset, count});\n  }\n  return result;\n}\n\nfunction emitRange(count: number, len: number): string {\n  const rangeStart: string = `[${count.toString(10)}`;\n  const rangeEnd: string = \")\";\n  const hyphensLen: number = len - (rangeStart.length + rangeEnd.length);\n  const hyphens: string = \"-\".repeat(Math.max(0, hyphensLen));\n  return `${rangeStart}${hyphens}${rangeEnd}`;\n}\n\nfunction emitOffsets(colMap: Map<number, number>): string {\n  let line: string = \"\";\n  for (const [event, col] of colMap) {\n    if (line.length < col) {\n      line += \" \".repeat(col - line.length);\n    }\n    line += event.toString(10);\n  }\n  return line;\n}\n\nexport function parseOffsets(text: string): Map<number, number> {\n  const result: Map<number, number> = new Map();\n  const regex: RegExp = /\\d+/gs;\n  while (true) {\n    const match: RegExpExecArray | null = regex.exec(text);\n    if (match === null) {\n      break;\n    }\n    result.set(match.index, parseInt(match[0], 10));\n  }\n  return result;\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/compare.js":{"lineLengths":[13,62,3,33,2,85,3,34,26,17,5,29,18,5,10,17,5,1,46,3,35,2,63,3,36,54,1,50,3,32,2,70,26,50,3,33,42,45,5,10,41,5,1,44,0,2643,0],"data":{"version":3,"sources":["file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/_src/compare.ts"],"names":[],"mappings":";;AAEA;;;;GAIG;AACH,SAAgB,iBAAiB,CAAC,CAAsB,EAAE,CAAsB;IAC9E,IAAI,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,GAAG,EAAE;QACnB,OAAO,CAAC,CAAC;KACV;SAAM,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,EAAE;QACxB,OAAO,CAAC,CAAC,CAAC;KACX;SAAM;QACL,OAAO,CAAC,CAAC;KACV;AACH,CAAC;AARD,8CAQC;AAED;;;;GAIG;AACH,SAAgB,mBAAmB,CAAC,CAAwB,EAAE,CAAwB;IACpF,OAAO,gBAAgB,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;AACpD,CAAC;AAFD,kDAEC;AAED;;;;;;GAMG;AACH,SAAgB,gBAAgB,CAAC,CAAqB,EAAE,CAAqB;IAC3E,IAAI,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,WAAW,EAAE;QACnC,OAAO,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,WAAW,CAAC;KACtC;SAAM;QACL,OAAO,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC,SAAS,CAAC;KAClC;AACH,CAAC;AAND,4CAMC","file":"compare.js","sourcesContent":["import { FunctionCov, RangeCov, ScriptCov } from \"./types\";\n\n/**\n * Compares two script coverages.\n *\n * The result corresponds to the comparison of their `url` value (alphabetical sort).\n */\nexport function compareScriptCovs(a: Readonly<ScriptCov>, b: Readonly<ScriptCov>): number {\n  if (a.url === b.url) {\n    return 0;\n  } else if (a.url < b.url) {\n    return -1;\n  } else {\n    return 1;\n  }\n}\n\n/**\n * Compares two function coverages.\n *\n * The result corresponds to the comparison of the root ranges.\n */\nexport function compareFunctionCovs(a: Readonly<FunctionCov>, b: Readonly<FunctionCov>): number {\n  return compareRangeCovs(a.ranges[0], b.ranges[0]);\n}\n\n/**\n * Compares two range coverages.\n *\n * The ranges are first ordered by ascending `startOffset` and then by\n * descending `endOffset`.\n * This corresponds to a pre-order tree traversal.\n */\nexport function compareRangeCovs(a: Readonly<RangeCov>, b: Readonly<RangeCov>): number {\n  if (a.startOffset !== b.startOffset) {\n    return a.startOffset - b.startOffset;\n  } else {\n    return b.endOffset - a.endOffset;\n  }\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/clone.js":{"lineLengths":[13,62,3,45,2,47,35,3,38,22,48,47,5,12,15,6,1,42,3,44,2,45,34,3,36,25,52,54,5,12,37,27,18,6,1,40,3,46,2,49,36,3,40,22,48,45,5,12,47,15,53,6,1,44,3,46,2,43,33,3,34,12,42,38,30,6,1,38,0,3943,0],"data":{"version":3,"sources":["file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/_src/clone.ts"],"names":[],"mappings":";;AAEA;;;;;GAKG;AACH,SAAgB,eAAe,CAAC,UAAgC;IAC9D,MAAM,MAAM,GAAgB,EAAE,CAAC;IAC/B,KAAK,MAAM,SAAS,IAAI,UAAU,CAAC,MAAM,EAAE;QACzC,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC,CAAC;KACxC;IAED,OAAO;QACL,MAAM;KACP,CAAC;AACJ,CAAC;AATD,0CASC;AAED;;;;;GAKG;AACH,SAAgB,cAAc,CAAC,SAA8B;IAC3D,MAAM,SAAS,GAAkB,EAAE,CAAC;IACpC,KAAK,MAAM,WAAW,IAAI,SAAS,CAAC,SAAS,EAAE;QAC7C,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,WAAW,CAAC,CAAC,CAAC;KAC/C;IAED,OAAO;QACL,QAAQ,EAAE,SAAS,CAAC,QAAQ;QAC5B,GAAG,EAAE,SAAS,CAAC,GAAG;QAClB,SAAS;KACV,CAAC;AACJ,CAAC;AAXD,wCAWC;AAED;;;;;GAKG;AACH,SAAgB,gBAAgB,CAAC,WAAkC;IACjE,MAAM,MAAM,GAAe,EAAE,CAAC;IAC9B,KAAK,MAAM,QAAQ,IAAI,WAAW,CAAC,MAAM,EAAE;QACzC,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;KACtC;IAED,OAAO;QACL,YAAY,EAAE,WAAW,CAAC,YAAY;QACtC,MAAM;QACN,eAAe,EAAE,WAAW,CAAC,eAAe;KAC7C,CAAC;AACJ,CAAC;AAXD,4CAWC;AAED;;;;;GAKG;AACH,SAAgB,aAAa,CAAC,QAA4B;IACxD,OAAO;QACL,WAAW,EAAE,QAAQ,CAAC,WAAW;QACjC,SAAS,EAAE,QAAQ,CAAC,SAAS;QAC7B,KAAK,EAAE,QAAQ,CAAC,KAAK;KACtB,CAAC;AACJ,CAAC;AAND,sCAMC","file":"clone.js","sourcesContent":["import { FunctionCov, ProcessCov, RangeCov, ScriptCov } from \"./types\";\n\n/**\n * Creates a deep copy of a process coverage.\n *\n * @param processCov Process coverage to clone.\n * @return Cloned process coverage.\n */\nexport function cloneProcessCov(processCov: Readonly<ProcessCov>): ProcessCov {\n  const result: ScriptCov[] = [];\n  for (const scriptCov of processCov.result) {\n    result.push(cloneScriptCov(scriptCov));\n  }\n\n  return {\n    result,\n  };\n}\n\n/**\n * Creates a deep copy of a script coverage.\n *\n * @param scriptCov Script coverage to clone.\n * @return Cloned script coverage.\n */\nexport function cloneScriptCov(scriptCov: Readonly<ScriptCov>): ScriptCov {\n  const functions: FunctionCov[] = [];\n  for (const functionCov of scriptCov.functions) {\n    functions.push(cloneFunctionCov(functionCov));\n  }\n\n  return {\n    scriptId: scriptCov.scriptId,\n    url: scriptCov.url,\n    functions,\n  };\n}\n\n/**\n * Creates a deep copy of a function coverage.\n *\n * @param functionCov Function coverage to clone.\n * @return Cloned function coverage.\n */\nexport function cloneFunctionCov(functionCov: Readonly<FunctionCov>): FunctionCov {\n  const ranges: RangeCov[] = [];\n  for (const rangeCov of functionCov.ranges) {\n    ranges.push(cloneRangeCov(rangeCov));\n  }\n\n  return {\n    functionName: functionCov.functionName,\n    ranges,\n    isBlockCoverage: functionCov.isBlockCoverage,\n  };\n}\n\n/**\n * Creates a deep copy of a function coverage.\n *\n * @param rangeCov Range coverage to clone.\n * @return Cloned range coverage.\n */\nexport function cloneRangeCov(rangeCov: Readonly<RangeCov>): RangeCov {\n  return {\n    startOffset: rangeCov.startOffset,\n    endOffset: rangeCov.endOffset,\n    count: rangeCov.count,\n  };\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/merge.js":{"lineLengths":[13,62,43,45,3,38,2,28,76,25,34,2,49,35,3,40,35,30,5,35,43,52,61,43,32,60,13,39,9,5,22,50,39,46,5,30,44,18,1,44,3,46,2,52,28,76,25,34,2,48,78,3,38,34,25,5,39,37,51,22,5,32,36,26,35,41,52,66,55,41,81,71,76,30,54,13,79,85,57,25,13,35,9,5,25,51,40,52,5,48,43,18,1,42,3,69,2,66,76,16,79,2,63,12,3,46,40,87,1,3,48,2,66,28,76,25,34,2,47,80,3,38,32,25,5,37,35,49,22,5,50,21,37,41,40,76,5,33,46,47,41,76,61,37,18,1,46,3,57,3,33,28,24,5,27,18,31,28,5,51,79,1,27,36,39,25,5,1,18,32,29,27,5,26,35,5,1,23,24,27,27,31,38,5,41,39,72,54,58,42,31,57,17,72,13,9,25,58,59,9,39,42,5,30,36,5,27,46,35,9,37,5,12,47,53,41,29,29,9,43,42,68,9,14,56,46,72,13,18,62,50,54,51,21,17,33,33,13,9,5,1,46,22,73,37,18,18,45,34,18,9,71,62,34,9,38,48,62,64,63,13,59,67,9,14,62,47,60,97,17,63,13,9,5,34,58,5,18,1,57,49,31,20,48,5,22,1,47,29,51,108,42,9,14,102,9,5,27,42,1,0,25919,0],"data":{"version":3,"sources":["file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/_src/merge.ts"],"names":[],"mappings":"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","file":"merge.js","sourcesContent":["import {\n  deepNormalizeScriptCov,\n  normalizeFunctionCov,\n  normalizeProcessCov,\n  normalizeRangeTree,\n  normalizeScriptCov,\n} from \"./normalize\";\nimport { RangeTree } from \"./range-tree\";\nimport { FunctionCov, ProcessCov, Range, RangeCov, ScriptCov } from \"./types\";\n\n/**\n * Merges a list of process coverages.\n *\n * The result is normalized.\n * The input values may be mutated, it is not safe to use them after passing\n * them to this function.\n * The computation is synchronous.\n *\n * @param processCovs Process coverages to merge.\n * @return Merged process coverage.\n */\nexport function mergeProcessCovs(processCovs: ReadonlyArray<ProcessCov>): ProcessCov {\n  if (processCovs.length === 0) {\n    return {result: []};\n  }\n\n  const urlToScripts: Map<string, ScriptCov[]> = new Map();\n  for (const processCov of processCovs) {\n    for (const scriptCov of processCov.result) {\n      let scriptCovs: ScriptCov[] | undefined = urlToScripts.get(scriptCov.url);\n      if (scriptCovs === undefined) {\n        scriptCovs = [];\n        urlToScripts.set(scriptCov.url, scriptCovs);\n      }\n      scriptCovs.push(scriptCov);\n    }\n  }\n\n  const result: ScriptCov[] = [];\n  for (const scripts of urlToScripts.values()) {\n    // assert: `scripts.length > 0`\n    result.push(mergeScriptCovs(scripts)!);\n  }\n  const merged: ProcessCov = {result};\n\n  normalizeProcessCov(merged);\n  return merged;\n}\n\n/**\n * Merges a list of matching script coverages.\n *\n * Scripts are matching if they have the same `url`.\n * The result is normalized.\n * The input values may be mutated, it is not safe to use them after passing\n * them to this function.\n * The computation is synchronous.\n *\n * @param scriptCovs Process coverages to merge.\n * @return Merged script coverage, or `undefined` if the input list was empty.\n */\nexport function mergeScriptCovs(scriptCovs: ReadonlyArray<ScriptCov>): ScriptCov | undefined {\n  if (scriptCovs.length === 0) {\n    return undefined;\n  } else if (scriptCovs.length === 1) {\n    const merged: ScriptCov = scriptCovs[0];\n    deepNormalizeScriptCov(merged);\n    return merged;\n  }\n\n  const first: ScriptCov = scriptCovs[0];\n  const scriptId: string = first.scriptId;\n  const url: string = first.url;\n\n  const rangeToFuncs: Map<string, FunctionCov[]> = new Map();\n  for (const scriptCov of scriptCovs) {\n    for (const funcCov of scriptCov.functions) {\n      const rootRange: string = stringifyFunctionRootRange(funcCov);\n      let funcCovs: FunctionCov[] | undefined = rangeToFuncs.get(rootRange);\n\n      if (funcCovs === undefined ||\n        // if the entry in rangeToFuncs is function-level granularity and\n        // the new coverage is block-level, prefer block-level.\n        (!funcCovs[0].isBlockCoverage && funcCov.isBlockCoverage)) {\n        funcCovs = [];\n        rangeToFuncs.set(rootRange, funcCovs);\n      } else if (funcCovs[0].isBlockCoverage && !funcCov.isBlockCoverage) {\n        // if the entry in rangeToFuncs is block-level granularity, we should\n        // not append function level granularity.\n        continue;\n      }\n      funcCovs.push(funcCov);\n    }\n  }\n\n  const functions: FunctionCov[] = [];\n  for (const funcCovs of rangeToFuncs.values()) {\n    // assert: `funcCovs.length > 0`\n    functions.push(mergeFunctionCovs(funcCovs)!);\n  }\n\n  const merged: ScriptCov = {scriptId, url, functions};\n  normalizeScriptCov(merged);\n  return merged;\n}\n\n/**\n * Returns a string representation of the root range of the function.\n *\n * This string can be used to match function with same root range.\n * The string is derived from the start and end offsets of the root range of\n * the function.\n * This assumes that `ranges` is non-empty (true for valid function coverages).\n *\n * @param funcCov Function coverage with the range to stringify\n * @internal\n */\nfunction stringifyFunctionRootRange(funcCov: Readonly<FunctionCov>): string {\n  const rootRange: RangeCov = funcCov.ranges[0];\n  return `${rootRange.startOffset.toString(10)};${rootRange.endOffset.toString(10)}`;\n}\n\n/**\n * Merges a list of matching function coverages.\n *\n * Functions are matching if their root ranges have the same span.\n * The result is normalized.\n * The input values may be mutated, it is not safe to use them after passing\n * them to this function.\n * The computation is synchronous.\n *\n * @param funcCovs Function coverages to merge.\n * @return Merged function coverage, or `undefined` if the input list was empty.\n */\nexport function mergeFunctionCovs(funcCovs: ReadonlyArray<FunctionCov>): FunctionCov | undefined {\n  if (funcCovs.length === 0) {\n    return undefined;\n  } else if (funcCovs.length === 1) {\n    const merged: FunctionCov = funcCovs[0];\n    normalizeFunctionCov(merged);\n    return merged;\n  }\n\n  const functionName: string = funcCovs[0].functionName;\n\n  const trees: RangeTree[] = [];\n  for (const funcCov of funcCovs) {\n    // assert: `fn.ranges.length > 0`\n    // assert: `fn.ranges` is sorted\n    trees.push(RangeTree.fromSortedRanges(funcCov.ranges)!);\n  }\n\n  // assert: `trees.length > 0`\n  const mergedTree: RangeTree = mergeRangeTrees(trees)!;\n  normalizeRangeTree(mergedTree);\n  const ranges: RangeCov[] = mergedTree.toRanges();\n  const isBlockCoverage: boolean = !(ranges.length === 1 && ranges[0].count === 0);\n\n  const merged: FunctionCov = {functionName, ranges, isBlockCoverage};\n  // assert: `merged` is normalized\n  return merged;\n}\n\n/**\n * @precondition Same `start` and `end` for all the trees\n */\nfunction mergeRangeTrees(trees: ReadonlyArray<RangeTree>): RangeTree | undefined {\n  if (trees.length <= 1) {\n    return trees[0];\n  }\n  const first: RangeTree = trees[0];\n  let delta: number = 0;\n  for (const tree of trees) {\n    delta += tree.delta;\n  }\n  const children: RangeTree[] = mergeRangeTreeChildren(trees);\n  return new RangeTree(first.start, first.end, delta, children);\n}\n\nclass RangeTreeWithParent {\n  readonly parentIndex: number;\n  readonly tree: RangeTree;\n\n  constructor(parentIndex: number, tree: RangeTree) {\n    this.parentIndex = parentIndex;\n    this.tree = tree;\n  }\n}\n\nclass StartEvent {\n  readonly offset: number;\n  readonly trees: RangeTreeWithParent[];\n\n  constructor(offset: number, trees: RangeTreeWithParent[]) {\n    this.offset = offset;\n    this.trees = trees;\n  }\n\n  static compare(a: StartEvent, b: StartEvent): number {\n    return a.offset - b.offset;\n  }\n}\n\nclass StartEventQueue {\n  private readonly queue: StartEvent[];\n  private nextIndex: number;\n  private pendingOffset: number;\n  private pendingTrees: RangeTreeWithParent[] | undefined;\n\n  private constructor(queue: StartEvent[]) {\n    this.queue = queue;\n    this.nextIndex = 0;\n    this.pendingOffset = 0;\n    this.pendingTrees = undefined;\n  }\n\n  static fromParentTrees(parentTrees: ReadonlyArray<RangeTree>): StartEventQueue {\n    const startToTrees: Map<number, RangeTreeWithParent[]> = new Map();\n    for (const [parentIndex, parentTree] of parentTrees.entries()) {\n      for (const child of parentTree.children) {\n        let trees: RangeTreeWithParent[] | undefined = startToTrees.get(child.start);\n        if (trees === undefined) {\n          trees = [];\n          startToTrees.set(child.start, trees);\n        }\n        trees.push(new RangeTreeWithParent(parentIndex, child));\n      }\n    }\n    const queue: StartEvent[] = [];\n    for (const [startOffset, trees] of startToTrees) {\n      queue.push(new StartEvent(startOffset, trees));\n    }\n    queue.sort(StartEvent.compare);\n    return new StartEventQueue(queue);\n  }\n\n  setPendingOffset(offset: number): void {\n    this.pendingOffset = offset;\n  }\n\n  pushPendingTree(tree: RangeTreeWithParent): void {\n    if (this.pendingTrees === undefined) {\n      this.pendingTrees = [];\n    }\n    this.pendingTrees.push(tree);\n  }\n\n  next(): StartEvent | undefined {\n    const pendingTrees: RangeTreeWithParent[] | undefined = this.pendingTrees;\n    const nextEvent: StartEvent | undefined = this.queue[this.nextIndex];\n    if (pendingTrees === undefined) {\n      this.nextIndex++;\n      return nextEvent;\n    } else if (nextEvent === undefined) {\n      this.pendingTrees = undefined;\n      return new StartEvent(this.pendingOffset, pendingTrees);\n    } else {\n      if (this.pendingOffset < nextEvent.offset) {\n        this.pendingTrees = undefined;\n        return new StartEvent(this.pendingOffset, pendingTrees);\n      } else {\n        if (this.pendingOffset === nextEvent.offset) {\n          this.pendingTrees = undefined;\n          for (const tree of pendingTrees) {\n            nextEvent.trees.push(tree);\n          }\n        }\n        this.nextIndex++;\n        return nextEvent;\n      }\n    }\n  }\n}\n\nfunction mergeRangeTreeChildren(parentTrees: ReadonlyArray<RangeTree>): RangeTree[] {\n  const result: RangeTree[] = [];\n  const startEventQueue: StartEventQueue = StartEventQueue.fromParentTrees(parentTrees);\n  const parentToNested: Map<number, RangeTree[]> = new Map();\n  let openRange: Range | undefined;\n\n  while (true) {\n    const event: StartEvent | undefined = startEventQueue.next();\n    if (event === undefined) {\n      break;\n    }\n\n    if (openRange !== undefined && openRange.end <= event.offset) {\n      result.push(nextChild(openRange, parentToNested));\n      openRange = undefined;\n    }\n\n    if (openRange === undefined) {\n      let openRangeEnd: number = event.offset + 1;\n      for (const {parentIndex, tree} of event.trees) {\n        openRangeEnd = Math.max(openRangeEnd, tree.end);\n        insertChild(parentToNested, parentIndex, tree);\n      }\n      startEventQueue.setPendingOffset(openRangeEnd);\n      openRange = {start: event.offset, end: openRangeEnd};\n    } else {\n      for (const {parentIndex, tree} of event.trees) {\n        if (tree.end > openRange.end) {\n          const right: RangeTree = tree.split(openRange.end);\n          startEventQueue.pushPendingTree(new RangeTreeWithParent(parentIndex, right));\n        }\n        insertChild(parentToNested, parentIndex, tree);\n      }\n    }\n  }\n  if (openRange !== undefined) {\n    result.push(nextChild(openRange, parentToNested));\n  }\n\n  return result;\n}\n\nfunction insertChild(parentToNested: Map<number, RangeTree[]>, parentIndex: number, tree: RangeTree): void {\n  let nested: RangeTree[] | undefined = parentToNested.get(parentIndex);\n  if (nested === undefined) {\n    nested = [];\n    parentToNested.set(parentIndex, nested);\n  }\n  nested.push(tree);\n}\n\nfunction nextChild(openRange: Range, parentToNested: Map<number, RangeTree[]>): RangeTree {\n  const matchingTrees: RangeTree[] = [];\n\n  for (const nested of parentToNested.values()) {\n    if (nested.length === 1 && nested[0].start === openRange.start && nested[0].end === openRange.end) {\n      matchingTrees.push(nested[0]);\n    } else {\n      matchingTrees.push(new RangeTree(\n        openRange.start,\n        openRange.end,\n        0,\n        nested,\n      ));\n    }\n  }\n  parentToNested.clear();\n  return mergeRangeTrees(matchingTrees)!;\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/normalize.js":{"lineLengths":[13,62,39,45,3,33,2,45,78,32,48,2,51,3,42,56,70,51,5,1,50,3,40,2,79,10,2,51,3,46,48,42,5,36,1,58,3,32,2,53,50,2,49,3,40,60,1,48,3,39,2,80,10,2,49,3,44,48,38,5,34,1,56,3,34,2,37,48,2,49,3,40,52,73,29,37,1,52,3,12,3,35,21,1,48,0,5059,0],"data":{"version":3,"sources":["file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/_src/normalize.ts"],"names":[],"mappings":";;AAAA,uCAAqF;AACrF,6CAAyC;AAGzC;;;;;;;;;GASG;AACH,SAAgB,mBAAmB,CAAC,UAAsB;IACxD,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,2BAAiB,CAAC,CAAC;IAC1C,KAAK,MAAM,CAAC,QAAQ,EAAE,SAAS,CAAC,IAAI,UAAU,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE;QAC/D,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;KAC5C;AACH,CAAC;AALD,kDAKC;AAED;;;;;;;GAOG;AACH,SAAgB,uBAAuB,CAAC,UAAsB;IAC5D,KAAK,MAAM,SAAS,IAAI,UAAU,CAAC,MAAM,EAAE;QACzC,sBAAsB,CAAC,SAAS,CAAC,CAAC;KACnC;IACD,mBAAmB,CAAC,UAAU,CAAC,CAAC;AAClC,CAAC;AALD,0DAKC;AAED;;;;;;;GAOG;AACH,SAAgB,kBAAkB,CAAC,SAAoB;IACrD,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,6BAAmB,CAAC,CAAC;AAChD,CAAC;AAFD,gDAEC;AAED;;;;;;;GAOG;AACH,SAAgB,sBAAsB,CAAC,SAAoB;IACzD,KAAK,MAAM,OAAO,IAAI,SAAS,CAAC,SAAS,EAAE;QACzC,oBAAoB,CAAC,OAAO,CAAC,CAAC;KAC/B;IACD,kBAAkB,CAAC,SAAS,CAAC,CAAC;AAChC,CAAC;AALD,wDAKC;AAED;;;;;;;GAOG;AACH,SAAgB,oBAAoB,CAAC,OAAoB;IACvD,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,0BAAgB,CAAC,CAAC;IACtC,MAAM,IAAI,GAAc,sBAAS,CAAC,gBAAgB,CAAC,OAAO,CAAC,MAAM,CAAE,CAAC;IACpE,kBAAkB,CAAC,IAAI,CAAC,CAAC;IACzB,OAAO,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,EAAE,CAAC;AACnC,CAAC;AALD,oDAKC;AAED;;GAEG;AACH,SAAgB,kBAAkB,CAAC,IAAe;IAChD,IAAI,CAAC,SAAS,EAAE,CAAC;AACnB,CAAC;AAFD,gDAEC","file":"normalize.js","sourcesContent":["import { compareFunctionCovs, compareRangeCovs, compareScriptCovs } from \"./compare\";\nimport { RangeTree } from \"./range-tree\";\nimport { FunctionCov, ProcessCov, ScriptCov } from \"./types\";\n\n/**\n * Normalizes a process coverage.\n *\n * Sorts the scripts alphabetically by `url`.\n * Reassigns script ids: the script at index `0` receives `\"0\"`, the script at\n * index `1` receives `\"1\"` etc.\n * This does not normalize the script coverages.\n *\n * @param processCov Process coverage to normalize.\n */\nexport function normalizeProcessCov(processCov: ProcessCov): void {\n  processCov.result.sort(compareScriptCovs);\n  for (const [scriptId, scriptCov] of processCov.result.entries()) {\n    scriptCov.scriptId = scriptId.toString(10);\n  }\n}\n\n/**\n * Normalizes a process coverage deeply.\n *\n * Normalizes the script coverages deeply, then normalizes the process coverage\n * itself.\n *\n * @param processCov Process coverage to normalize.\n */\nexport function deepNormalizeProcessCov(processCov: ProcessCov): void {\n  for (const scriptCov of processCov.result) {\n    deepNormalizeScriptCov(scriptCov);\n  }\n  normalizeProcessCov(processCov);\n}\n\n/**\n * Normalizes a script coverage.\n *\n * Sorts the function by root range (pre-order sort).\n * This does not normalize the function coverages.\n *\n * @param scriptCov Script coverage to normalize.\n */\nexport function normalizeScriptCov(scriptCov: ScriptCov): void {\n  scriptCov.functions.sort(compareFunctionCovs);\n}\n\n/**\n * Normalizes a script coverage deeply.\n *\n * Normalizes the function coverages deeply, then normalizes the script coverage\n * itself.\n *\n * @param scriptCov Script coverage to normalize.\n */\nexport function deepNormalizeScriptCov(scriptCov: ScriptCov): void {\n  for (const funcCov of scriptCov.functions) {\n    normalizeFunctionCov(funcCov);\n  }\n  normalizeScriptCov(scriptCov);\n}\n\n/**\n * Normalizes a function coverage.\n *\n * Sorts the ranges (pre-order sort).\n * TODO: Tree-based normalization of the ranges.\n *\n * @param funcCov Function coverage to normalize.\n */\nexport function normalizeFunctionCov(funcCov: FunctionCov): void {\n  funcCov.ranges.sort(compareRangeCovs);\n  const tree: RangeTree = RangeTree.fromSortedRanges(funcCov.ranges)!;\n  normalizeRangeTree(tree);\n  funcCov.ranges = tree.toRanges();\n}\n\n/**\n * @internal\n */\nexport function normalizeRangeTree(tree: RangeTree): void {\n  tree.normalize();\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null},"file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/range-tree.js":{"lineLengths":[13,62,17,46,27,23,27,33,5,7,65,7,37,17,51,25,37,92,37,28,48,25,13,23,28,26,64,70,53,26,17,22,32,17,13,38,39,44,9,20,5,17,28,19,17,24,44,37,29,13,76,33,13,18,27,29,13,31,9,33,23,9,36,38,71,42,47,79,23,13,9,33,29,36,53,46,63,70,53,21,17,32,13,29,32,9,5,7,61,35,7,18,48,16,53,56,43,59,41,37,22,13,44,33,22,13,9,61,75,32,39,9,81,25,22,5,7,57,6,39,7,16,26,44,34,34,51,50,79,64,53,13,9,22,5,1,30,0,11467,0],"data":{"version":3,"sources":["file:///Users/andelarwanda/Documents/GitHub/my-brand/server/node_modules/@bcoe/v8-coverage/dist/lib/_src/range-tree.ts"],"names":[],"mappings":"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","file":"range-tree.js","sourcesContent":["import { RangeCov } from \"./types\";\n\nexport class RangeTree {\n  start: number;\n  end: number;\n  delta: number;\n  children: RangeTree[];\n\n  constructor(\n    start: number,\n    end: number,\n    delta: number,\n    children: RangeTree[],\n  ) {\n    this.start = start;\n    this.end = end;\n    this.delta = delta;\n    this.children = children;\n  }\n\n  /**\n   * @precodition `ranges` are well-formed and pre-order sorted\n   */\n  static fromSortedRanges(ranges: ReadonlyArray<RangeCov>): RangeTree | undefined {\n    let root: RangeTree | undefined;\n    // Stack of parent trees and parent counts.\n    const stack: [RangeTree, number][] = [];\n    for (const range of ranges) {\n      const node: RangeTree = new RangeTree(range.startOffset, range.endOffset, range.count, []);\n      if (root === undefined) {\n        root = node;\n        stack.push([node, range.count]);\n        continue;\n      }\n      let parent: RangeTree;\n      let parentCount: number;\n      while (true) {\n        [parent, parentCount] = stack[stack.length - 1];\n        // assert: `top !== undefined` (the ranges are sorted)\n        if (range.startOffset < parent.end) {\n          break;\n        } else {\n          stack.pop();\n        }\n      }\n      node.delta -= parentCount;\n      parent.children.push(node);\n      stack.push([node, range.count]);\n    }\n    return root;\n  }\n\n  normalize(): void {\n    const children: RangeTree[] = [];\n    let curEnd: number;\n    let head: RangeTree | undefined;\n    const tail: RangeTree[] = [];\n    for (const child of this.children) {\n      if (head === undefined) {\n        head = child;\n      } else if (child.delta === head.delta && child.start === curEnd!) {\n        tail.push(child);\n      } else {\n        endChain();\n        head = child;\n      }\n      curEnd = child.end;\n    }\n    if (head !== undefined) {\n      endChain();\n    }\n\n    if (children.length === 1) {\n      const child: RangeTree = children[0];\n      if (child.start === this.start && child.end === this.end) {\n        this.delta += child.delta;\n        this.children = child.children;\n        // `.lazyCount` is zero for both (both are after normalization)\n        return;\n      }\n    }\n\n    this.children = children;\n\n    function endChain(): void {\n      if (tail.length !== 0) {\n        head!.end = tail[tail.length - 1].end;\n        for (const tailTree of tail) {\n          for (const subChild of tailTree.children) {\n            subChild.delta += tailTree.delta - head!.delta;\n            head!.children.push(subChild);\n          }\n        }\n        tail.length = 0;\n      }\n      head!.normalize();\n      children.push(head!);\n    }\n  }\n\n  /**\n   * @precondition `tree.start < value && value < tree.end`\n   * @return RangeTree Right part\n   */\n  split(value: number): RangeTree {\n    let leftChildLen: number = this.children.length;\n    let mid: RangeTree | undefined;\n\n    // TODO(perf): Binary search (check overhead)\n    for (let i: number = 0; i < this.children.length; i++) {\n      const child: RangeTree = this.children[i];\n      if (child.start < value && value < child.end) {\n        mid = child.split(value);\n        leftChildLen = i + 1;\n        break;\n      } else if (child.start >= value) {\n        leftChildLen = i;\n        break;\n      }\n    }\n\n    const rightLen: number = this.children.length - leftChildLen;\n    const rightChildren: RangeTree[] = this.children.splice(leftChildLen, rightLen);\n    if (mid !== undefined) {\n      rightChildren.unshift(mid);\n    }\n    const result: RangeTree = new RangeTree(\n      value,\n      this.end,\n      this.delta,\n      rightChildren,\n    );\n    this.end = value;\n    return result;\n  }\n\n  /**\n   * Get the range coverages corresponding to the tree.\n   *\n   * The ranges are pre-order sorted.\n   */\n  toRanges(): RangeCov[] {\n    const ranges: RangeCov[] = [];\n    // Stack of parent trees and counts.\n    const stack: [RangeTree, number][] = [[this, 0]];\n    while (stack.length > 0) {\n      const [cur, parentCount]: [RangeTree, number] = stack.pop()!;\n      const count: number = parentCount + cur.delta;\n      ranges.push({startOffset: cur.start, endOffset: cur.end, count});\n      for (let i: number = cur.children.length - 1; i >= 0; i--) {\n        stack.push([cur.children[i], count]);\n      }\n    }\n    return ranges;\n  }\n}\n"],"sourceRoot":""},"url":null,"sourceURL":null}}}